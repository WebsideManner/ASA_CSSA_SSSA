
\documentclass{report}
\usepackage{amsmath}

\begin{document}

\title{Geospatial analysis of yield trends in winter wheat}\author{Peter Claussen}\maketitle


<<>>=
source("../ASA_CSSA_SSSA/R/map_functions.R")

@

We drive the analysis from the USDA data set for yield. These data are in the \verb|usda| directory.
The majority of files are fit with code in that directory, and we will store our covariate data there as well.

The various \verb|fitLinearModels.Snw| will follow a general structure. Each covariate will be fit to a simple linear model by year, and the result saved
as an Rda file. If a file (or controlling file) is not present, the appropriate data set is read. In some cases, the data are processed (i.e. to remove commas as thousand separators), and the resulting Rda file may be read instead. This in general speeds analysis, since in many cases fitting linear models is time consuming. In this controlling code, we save the intermediate covariate files and load linear models only when certain covariate headers are not found.

<<echo=false,results=hide>>=
full=TRUE
current.wd <- getwd()
covariateFileName <- "data/usda/covariates.dat.Rda"
covariateFullFileName <- "data/usda/full.covariates.dat.Rda"
if(!file.exists(covariateFileName)) {
   setwd('data/usda')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
} else {
   load(file=covariateFileName)
   load(file=covariateFullFileName)
}
coef.idx <- as.character(covariates.dat$statecounty)
full.coef.idx <- as.character(full.covariates.dat$statecounty)
ref <- 1984+(2014-1984)/2
@

<<centralyear,fig=TRUE,width=6.35,height=4>>=
setwd('data/usda/')
load.if.needed("county.yield.dat")
setwd(current.wd)
county.yield.dat$State <- as.character(county.yield.dat$State)
county.yield.dat$State[county.yield.dat$State=="SOUTH DAKOTA"] <- "SD"
county.yield.dat$State[county.yield.dat$State=="NORTH DAKOTA"] <- "ND"
county.yield.dat$State[county.yield.dat$State=="NEBRASKA"] <- "NE"
county.yield.dat$State[county.yield.dat$State=="KANSAS"] <- "KS"
county.yield.dat$State[county.yield.dat$State=="OKLAHOMA"] <- "OK"
county.yield.dat$State[county.yield.dat$State=="TEXAS"] <- "TX"
county.yield.dat$State <- as.factor(county.yield.dat$State)
county.yield.plot <- ggplot(county.yield.dat, aes(Year,Value)) + theme_bw() + labs(y="Yield, bu/acre",title="County Yield Average over Time")
county.yield.plot <- county.yield.plot + scale_fill_manual(values=fullPalette) + scale_colour_manual(values=fullPalette)
county.yield.plot <- county.yield.plot + geom_point(aes(color=State),size=1,alpha = 0.2)
county.yield.plot <- county.yield.plot + geom_smooth(aes(group= State,color=State,linetype=State),size=2,se = FALSE,method="loess")
county.yield.plot
@

<<fullyear,fig=TRUE,width=8,height=4>>=
setwd('data/usda/')
load.if.needed("full.yield.dat")
setwd(current.wd)

full.yield.dat <- subset(full.yield.dat,!(full.yield.dat$State %in% c("washington","idaho")))

full.yield.plot <- ggplot(full.yield.dat, aes(Year,Value)) + theme_bw() + ylim(0,150) +
  scale_fill_manual(values=fullPalette) + scale_colour_manual(values=fullPalette) + 
  geom_point(aes(color=State),size=2,alpha = 0.2) + geom_smooth(aes(group= State,color=State,linetype=State),weight=24,se = FALSE,method="loess") +
  labs(x="Year",y="Yield, bu/acre")
full.yield.plot
@


<<fig=TRUE>>=
yield1984.dat <- subset(full.yield.dat,full.yield.dat$Year==1984)
yield2014.dat <- subset(full.yield.dat,full.yield.dat$Year==2014)
grid.arrange(arrangeGrob(
  ggmap.full.values(yield1984.dat$Value,yield1984.dat$statecounty,main="Yield 1984",palette=yield.palette),
  ggmap.full.values(yield2014.dat$Value,yield2014.dat$statecounty,main="Yield 2014",palette=yield.palette),
   as.table=TRUE,
   ncol=2))
@

<<periphyear,fig=TRUE,width=6,height=4>>=
periph.dat <- subset(full.yield.dat,!(full.yield.dat$State %in% levels(county.yield.dat$State)))
periph.yield.plot <- ggplot(periph.dat, aes(Year,Value)) + theme_bw() + ylim(0,150) + 
  scale_fill_manual(values=fullPalette) + scale_colour_manual(values=fullPalette) + 
  geom_point(aes(color=State),size=2,alpha = 0.2) + geom_smooth(aes(group= State,color=State,linetype=State),weight=24,se = FALSE,method="loess") +
  labs(x="Year",y="Yield, bu/acre")
periph.yield.plot
periph.dat=NULL
@



\section{Covariates}

\subsection{Weather}
<<>>=
if(!("min.a" %in% names(covariates.dat))) {
   setwd('data/wonder')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
@

<<>>=
if(!("min.a" %in% names(full.covariates.dat))) {
   setwd('data/wonder')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
@
\subsection{Nutrients} 

See \verb|data\IPNI| for more discussion of this data.

<<>>=
if(!("Farm_TonsN.a" %in% names(covariates.dat))) {
   setwd('data/ipni')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
@

<<>>=
if(!("Farm_TonsN.a" %in% names(full.covariates.dat))) {
   setwd('data/ipni')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
@

Other measures
<<>>=
if(!("harvested.a" %in% names(covariates.dat))) {
   setwd('data/usda/')
   if(!file.exists("harvested.late.county.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   } else {
      load(file="harvested.late.county.lm.Rda")
      load(file="acres.late.county.lm.Rda")
      #load(file="income.total.county.lm.Rda")
      #load(file="income.relative.county.lm.Rda")
   }
   setwd(current.wd)

   covariates.dat$harvested.a <- extract.county.estimates(harvested.late.county.lm,term=1)[coef.idx]
   covariates.dat$harvested.b <- extract.county.estimates(harvested.late.county.lm,term=2)[coef.idx]

   covariates.dat$acres.a <- extract.county.estimates(acres.late.county.lm,term=1)[coef.idx]
   covariates.dat$acres.b <- extract.county.estimates(acres.late.county.lm,term=2)[coef.idx]

   #covariates.dat$relative.a <- extract.county.estimates(income.relative.county.lm,term=1)[coef.idx]
   #covariates.dat$relative.b <- extract.county.estimates(income.relative.county.lm,term=2)[coef.idx]
   
   #covariates.dat$total.a <- extract.county.estimates(income.total.county.lm,term=1)[coef.idx]
   #covariates.dat$total.b <- extract.county.estimates(income.total.county.lm,term=2)[coef.idx]   
   save(covariates.dat, file=covariateFileName)
}

if(!("harvested.a" %in% names(full.covariates.dat))) {
   setwd('data/usda/')
   if(!file.exists("harvested.late.full.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   } else {
      load.if.needed("harvested.late.county.lm")
      load.if.needed("harvested.late.full.lm")
      load.if.needed("acres.late.county.lm")
      load.if.needed("acres.late.full.lm")
      #load.if.needed("income.total.county.lm")
      #load.if.needed("full.income.total.county.lm")
      #load.if.needed("income.relative.county.lm")
      #load.if.needed("full.income.relative.county.lm")
   }
   setwd(current.wd)

   estimates <- c(extract.county.estimates(harvested.late.county.lm,term=1),
                 extract.county.estimates(harvested.late.full.lm,term=1))
   full.covariates.dat$harvested.a <- estimates[full.coef.idx]
   estimates <- c(extract.county.estimates(harvested.late.county.lm,term=2),
                 extract.county.estimates(harvested.late.full.lm,term=2))
   full.covariates.dat$harvested.b <- estimates[full.coef.idx]

   estimates <- c(extract.county.estimates(acres.late.county.lm,term=1),
                 extract.county.estimates(acres.late.full.lm,term=1))
   full.covariates.dat$acres.a <- estimates[full.coef.idx]
   estimates <- c(extract.county.estimates(acres.late.county.lm,term=2),
                 extract.county.estimates(acres.late.full.lm,term=2))
   full.covariates.dat$acres.b <- estimates[full.coef.idx]
    
   save(full.covariates.dat, file=covariateFullFileName)
}
setwd(current.wd)
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggmap.full.values(full.covariates.dat$harvested.a,full.covariates.dat$statecounty,main="Harvested Average",legend="mean",palette=yield.palette),
  ggmap.full.values(full.covariates.dat$harvested.b,full.covariates.dat$statecounty,main="Harvested Change",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=2))
@

Check work
<<>>=
setwd(current.wd)
setwd('data/usda/')
load.if.needed("harvested.late.county.lm")
load.if.needed("county.harvested.dat")
setwd(current.wd)
harvested.a <- extract.county.estimates(harvested.late.county.lm,term=1)[coef.idx]
harvested.b <- extract.county.estimates(harvested.late.county.lm,term=2)[coef.idx]
plot(hist(harvested.a))
harvested.lsmean <- harvested.a + 1980*harvested.b
plot(hist(harvested.lsmean))
harvested.lsmean <- harvested.a + 1999*harvested.b
plot(hist(harvested.lsmean))
head(county.harvested.dat)
harvested.mean <- tapply(county.harvested.dat$Value,list(county.harvested.dat$statecounty),mean,na.rm=TRUE)
plot(hist(harvested.mean))
@

<<fig=TRUE>>=
har1984.dat <- subset(county.harvested.dat,county.harvested.dat$Year==1984)
har2014.dat <- subset(county.harvested.dat,county.harvested.dat$Year==2013)
grid.arrange(arrangeGrob(
  ggmap.full.values(har1984.dat$Value,har1984.dat$statecounty,main="Harvested 1984",palette=yield.palette),
  ggmap.full.values(har2014.dat$Value,har2014.dat$statecounty,main="Harvested 2014",palette=yield.palette),
   as.table=TRUE,
   ncol=2))
@
   
<<fig=TRUE>>=
harvested.mean <- harvested.mean[names(harvested.lsmean)]
plot(harvested.mean,harvested.lsmean)
@

<<fig=TRUE>>=
harvested.lsmean <- covariates.dat$harvested.a + covariates.dat$harvested.b*ref
names(harvested.lsmean) <- as.character(covariates.dat$statecounty)
plot(harvested.mean[as.character(covariates.dat$statecounty)],harvested.lsmean[as.character(covariates.dat$statecounty)])
@

\verb|"INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $ / OPERATION"|


\section{Covariate Analysis}
Map yield parameters to the covariate data set. We need to fit yield changes
Now we actually analyze county yield data. Note we need to redo subset since we've since
appended statecounty index



<<>>=
cols <- dim(covariates.dat)[2]
intercept.columns <- 2*(1:((dim(covariates.dat)[2]/2)-1))+1
covariates.dat[,intercept.columns] <- covariates.dat[,intercept.columns]+ covariates.dat[,intercept.columns+1]*ref
intercept.names <- names(covariates.dat)[intercept.columns]

yield.idx <- 3
#normalize to percent
covariates.dat[,intercept.columns+1] <- 100*covariates.dat[,intercept.columns+1]/covariates.dat[,intercept.columns]

#three counties with negative ls means, and some counties have a small number of acres, this is arbitrary
covariates.dat <- subset(covariates.dat,covariates.dat$harvested.a>200)
@

<<>>=
cols <- dim(full.covariates.dat)[2]
full.intercept.columns <- 2*(1:((dim(full.covariates.dat)[2]/2)-1))+1
names(full.covariates.dat)[full.intercept.columns]
full.covariates.dat[,full.intercept.columns] <- full.covariates.dat[,full.intercept.columns]+ full.covariates.dat[,full.intercept.columns+1]*ref

full.covariates.dat[,full.intercept.columns+1] <- 100*full.covariates.dat[,full.intercept.columns+1]/full.covariates.dat[,full.intercept.columns]
@


<<fig=TRUE>>=
ggmap.full.values(full.covariates.dat$harvested.a,full.covariates.dat$statecounty,main="harvested.a",legend="mean",palette=yield.palette)
@

This removes mostly iowa counties
<<fig=TRUE>>=
plot(hist(full.covariates.dat$harvested.a))
full.covariates.dat <- subset(full.covariates.dat,full.covariates.dat$harvested.a > 200)
@

<<fig=TRUE>>=
ggmap.full.values(full.covariates.dat$harvested.a,full.covariates.dat$statecounty,main="harvested.a subset",legend="mean",palette=yield.palette)
@

<<fig=TRUE>>=
plot(hist(full.covariates.dat$acres.b))
@


%full.covariates.dat <- subset(full.covariates.dat,abs(full.covariates.dat$acres.b)>100)



<<>>=
yield.b.map <- make.map.data(full.covariates.dat$yield.b,full.covariates.dat$statecounty)
map.means<-tapply(yield.b.map$values,list(yield.b.map$statecounty),mean)
yield.b <- map.means[as.character(full.covariates.dat$statecounty)]
names(yield.b) <- as.character(full.covariates.dat$statecounty)

pooled.names <- names(map.means)
pooled.names <- pooled.names[pooled.names %in%names(yield.b)]
yield.b["kansas,allen"]
map.means["kansas,allen"]
plot(map.means[pooled.names],yield.b[pooled.names])
@

There is one outlier for yield change, so remove
<<fig=TRUE>>=
plot(hist(full.covariates.dat$yield.b))
covariates.dat <- subset(covariates.dat,abs(covariates.dat$yield.b)<5)
full.covariates.dat <- subset(full.covariates.dat,abs(full.covariates.dat$yield.b)<5)
@

<<fig=TRUE>>=
ggmap.full.values(full.covariates.dat$yield.b,full.covariates.dat$statecounty,main="yield.b",legend="%",palette=yield.palette)
@

<<>>=
setwd('data/usda/')
#stophammer
load.if.needed("full.income.relative.dat")
load.if.needed("income.relative.dat")
setwd(current.wd)
full.coef.idx <- as.character(full.covariates.dat$statecounty)
mean.income1 <- tapply(income.relative.dat$Value,list(income.relative.dat$statecounty),mean,na.rm=TRUE)
mean.income2 <- tapply(full.income.relative.dat$Value,list(full.income.relative.dat$statecounty),mean,na.rm=TRUE)
full.covariates.dat$mean.income <- c(mean.income1,mean.income2)[full.coef.idx]
covariates.dat$mean.income <- c(mean.income1)[as.character(covariates.dat$statecounty)]
@


<<meanincome,fig=TRUE,width=7,height=5>>=
ggmap.full.values(full.covariates.dat$mean.income,full.covariates.dat$statecounty,main="Mean Income",legend="$/operation",palette=yield.palette)
@


Two counties with outliers for income, but the center in a cluster

<<fig=TRUE>>=
plot(hist(full.covariates.dat$mean.income))
#full.covariates.dat <- subset(full.covariates.dat,full.covariates.dat$mean.income<250000)
@

<<>>=
mean(full.covariates.dat$Total_Harvested_Cropland_Acres.a,na.rm=TRUE)
full.covariates.dat$wheat_frac <- 100*full.covariates.dat$harvested.a/full.covariates.dat$Total_Harvested_Cropland_Acres.a
covariates.dat$wheat_frac <- 100*covariates.dat$harvested.a/covariates.dat$Total_Harvested_Cropland_Acres.a
@

<<fig=TRUE>>=
ggmap.full.values(full.covariates.dat$wheat_frac,full.covariates.dat$statecounty,main="Wheat acres, % of total acres",legend="% harvested",palette=yield.palette)
@

\section*{HWW RPN}
Before we add spatial statistics, save the current set of columns
<<>>=
covariate.terms <- names(full.covariates.dat)[5:dim(full.covariates.dat)[2]]
@

<<>>=
if(!("Distance" %in% names(covariates.dat))) {
   setwd('data/wwheat/')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
#covariates.dat<- subset(covariates.dat,covariates.dat$Distance<4)
@

<<>>=
if(!("Distance" %in% names(full.covariates.dat))) {
   setwd('data/wwheat/')
   Sweave("fitFullLinearModels.Snw")
   setwd(current.wd)
}
@

<<distance,fig=TRUE,height=4>>=
ggmap.full.values(full.covariates.dat$Distance,full.covariates.dat$statecounty,main="Distance to HWW RPN Site",legend="degrees",palette=coef.palette)
@

<<>>=
full.covariates.dat<- subset(full.covariates.dat,full.covariates.dat$Distance<4)
@

<<distance,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$Distance,full.covariates.dat$statecounty,main="Distance to HWW RPN Site",legend="degrees",palette=coef.palette )
@

<<distance,fig=TRUE,height=4>>=
dist.plot <- ggmap.full.values(full.covariates.dat$DistanceGPS,full.covariates.dat$statecounty,main="Distance to HWW RPN Site",legend="degrees",palette=coef.palette ,include.wa=TRUE)  + theme_bw()
dist.plot
@

<<intro,fig=TRUE,width=18>>=
par(bg="white")
grid.arrange(arrangeGrob(
  county.yield.plot,
  dist.plot,
   as.table=TRUE,
   widths=c(8, 10),
   ncol=2))
@

Limit our analysis to the plains states
<<>>=
full.covariates.dat<- subset(full.covariates.dat,!(full.covariates.dat$state %in% c("washington","idaho")))
@

<<moran,fig=TRUE,height=4.5>>=
i.dat <- subset(full.covariates.dat,full.covariates.dat$I<6)
ggmap.full.values(i.dat$I,i.dat$statecounty,main="N. Autocorrelation of Yield Changes",legend="Moran's I",palette=coef.palette ) + theme_bw()
@

<<>>=
covariates.base <- covariates.dat
full.covariates.base <- full.covariates.dat
@


<<>>=
form1 <- paste(names(covariates.dat)[yield.idx]," ~ ",covariate.terms[1])
form2 <- paste(names(covariates.dat)[yield.idx+1]," ~ ",covariate.terms[2])
form3 <- paste(names(covariates.dat)[yield.idx]," ~ ",covariate.terms[1])
form4 <- paste(names(covariates.dat)[yield.idx+1]," ~ ",covariate.terms[1])

for(idx in 2:length(covariate.terms) ) {
   if((idx%% 2)==0) {
      if(idx>2) {
         form2<-paste(form2,"+",covariate.terms[idx])
      }
   } else {
      form1<-paste(form1,"+",covariate.terms[idx])
   }
   form3<-paste(form3,"+",covariate.terms[idx])
   form4<-paste(form4,"+",covariate.terms[idx])
}

form1<-paste(form1,"+ Distance")
form2<-paste(form2,"+ Distance")
form3<-paste(form3,"+ Distance")
form4<-paste(form4,"+ Distance")

cov1.lm <- lm(form1,data=na.omit(covariates.dat))
cov2.lm <- lm(form2,data=na.omit(covariates.dat))
cov3.lm <- lm(form3,data=na.omit(covariates.dat))
cov4.lm <- lm(form4,data=na.omit(covariates.dat))

full.cov1.lm <- lm(form1,data=na.omit(full.covariates.dat))
full.cov2.lm <- lm(form2,data=na.omit(full.covariates.dat))
full.cov3.lm <- lm(form3,data=na.omit(full.covariates.dat))
full.cov4.lm <- lm(form4,data=na.omit(full.covariates.dat))
@

<<results=hide>>=
full.best1 <- step(full.cov1.lm,direction = "both")
full.best2 <- step(full.cov2.lm,direction = "both")
full.best3 <- step(full.cov3.lm,direction = "both")
full.best4 <- step(full.cov4.lm,direction = "both")
@

\section{Yield Average Covariates}
<<>>=
summary(full.cov1.lm)
#summary(aov(full.cov1.lm))
summary(full.best1)
full.best1 <- update(full.best1,data=full.covariates.dat)
summary(full.best2)
#summary(aov(full.best1))
#summary(full.cov3.lm)
#summary(aov(full.cov3.lm))
summary(full.best3)
#summary(aov(full.best3))
@

\section{Yield Change Covariates}
<<>>=
summary(full.cov2.lm)
#summary(aov(full.cov2.lm))
summary(full.best2)
full.best2 <- update(full.best2,data=full.covariates.dat)
summary(full.best2)
#summary(aov(full.best2))
#summary(full.cov4.lm)
#summary(aov(full.cov4.lm))
summary(full.best4)
full.best4 <- update(full.best4,data=full.covariates.dat)
#summary(update(full.best4,data=full.covariates.dat))
#summary(aov(full.best4))
@

We'll color by state, so convert index



<<maxb,fig=TRUE,height=4.5>>=
ggmap.full.values(full.covariates.dat$max.b,full.covariates.dat$statecounty,main="A. Daily Max Air Temperature ",legend="%/yr",palette=yield.palette) + theme_bw()
@

<<heatb,fig=TRUE,height=4.5>>=
ggmap.full.values(full.covariates.dat$heat.b,full.covariates.dat$statecounty,main="B. Daily Max Heat Index",legend="%/yr",palette=yield.palette) + theme_bw()
@

<<precipb,fig=TRUE,height=4.5>>=
ggmap.full.values(full.covariates.dat$precip.b,full.covariates.dat$statecounty,main="C. Daily Precipitation",legend="%/yr",palette=yield.palette) + theme_bw()
@

<<precipbregress,fig=TRUE,width=8,height=6>>=
precipb.yield.plot <- ggplot(full.covariates.dat, aes(precip.b,yield.b)) + theme_bw() + 
                      scale_fill_manual(values=fullPalette) + scale_colour_manual(values=fullPalette) + 
                      geom_point(aes(color=state),size=2,alpha = 0.2) + 
                      geom_smooth(aes(group=state,color=state),weight=16,se = FALSE,method="lm")
precipb.yield.plot
@

<<sunb,fig=TRUE,height=4.5>>=
ggmap.full.values(full.covariates.dat$sun.b,full.covariates.dat$statecounty,main="D. Daily Sunlight",legend="%/yr",palette=yield.palette)  + theme_bw()
@

<<fineb,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$fine.b,full.covariates.dat$statecounty,main="Fine b",legend="%/yr",palette=yield.palette)
@


<<dayb,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$day.b,full.covariates.dat$statecounty,main="E. Day Land Surface Temperature",legend="%/yr",palette=yield.palette)  + theme_bw()
@

<<Farm_TonsN,fig=TRUE,width=6,height=4>>=
ggmap.full.values(full.covariates.dat$Farm_TonsN.b,full.covariates.dat$statecounty,main="Interpolated Adjusted AAPFCO Farm Inputs, Ton N",legend="%/yr",palette=yield.palette)
@

<<TonsP2O5Exc,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$Tons_P2O5_Exc.b,full.covariates.dat$statecounty,main="Tons_P2O5_Exc b",legend="%/yr",palette=yield.palette)
@

<<TonsNRem,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$Tons_N_Rem.b,full.covariates.dat$statecounty,main="Tons_N_Rem b",legend="%/yr",palette=yield.palette)
@

<<TonsP2O5Rem,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$Tons_P2O5_Rem.b,full.covariates.dat$statecounty,main="Tons_P2O5_Rem b",legend="%/yr",palette=yield.palette)
@

<<RatioP2O5,fig=TRUE,width=6,height=4.5>>=
ggmap.full.values(full.covariates.dat$RatioP2O5.b,full.covariates.dat$statecounty,main="H. Net Removal to Use Ratio, P",legend="%/yr",palette=yield.palette)  + theme_bw()
@

<<FarmNPPCA,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$FarmNPPCA.b,full.covariates.dat$statecounty,main="FarmNPPCA b",legend="%/yr",palette=yield.palette)
@
FarmNPPCA.b

<<X21CropTotalPlantedAc,fig=TRUE,width=5,height=4>>=
ggmap.full.values(full.covariates.dat$X21Crop_TotalPlantedAc.b,full.covariates.dat$statecounty,main="X21Crop_TotalPlantedAc b",legend="%/yr",palette=yield.palette)
@

<<X21CropTotalHarvestAc,fig=TRUE,width=6,height=4.5>>=
ggmap.full.values(full.covariates.dat$X21Crop_TotalHarvestAc.b,full.covariates.dat$statecounty,main="J. Sum of 21 Crop Acres Harves",legend="%/yr",palette=yield.palette) + theme_bw()
@

<<TotalCropland,fig=TRUE,width=6,height=4>>=
ggmap.full.values(full.covariates.dat$TotalCropland.b,full.covariates.dat$statecounty,main="TotalCropland b",legend="%/yr",palette=yield.palette)
@

<<wheatfrac,fig=TRUE,width=6,height=4.5>>=
ggmap.full.values(full.covariates.dat$wheat_frac,full.covariates.dat$statecounty,main="L. Percent Harvested Acres, Wheat",legend="%",palette=yield.palette) + theme_bw()
@

<<yielda,fig=TRUE,width=8,height=5>>=
ggmap.full.values(full.covariates.dat$yield.a,full.covariates.dat$statecounty,main="Average Yield, 1984-2014",legend="bu/ac",palette=yield.palette) + theme_bw()
@

<<yieldb,fig=TRUE,width=8,height=5>>=
ggmap.full.values(full.covariates.dat$yield.b,full.covariates.dat$statecounty,main="Yield Change, 1984-2014",legend="%/yr",palette=yield.palette) + theme_bw()
@ 

<<yieldres,fig=TRUE,width=8,height=5>>=
ggmap.full.values(full.best2$residuals,names(full.best2$residuals),main="Best 2 Residuals",palette=yield.palette) + theme_bw()
@

\section{PCA}

One data point in texas skews PCA. It covaries with IJ (total cropland)
so
<<>>=
plot(hist(full.covariates.dat$X21Crop_TotalPlantedAc.b))
@

<<>>=
full.covariates.dat <- subset(full.covariates.dat,full.covariates.dat$X21Crop_TotalPlantedAc.b<10)
@

<<>>=
full.best1 <- update(full.best1,data=full.covariates.dat)
summary(full.best1)
full.best2 <- update(full.best2,data=full.covariates.dat)
summary(full.best2)
@

<<>>=
full.frm1.pca.a <- paste("~ yield.a")
for(trm in attr(full.best1$terms,"term.labels")) {
   full.frm1.pca.a <- paste(full.frm1.pca.a,trm,sep=" + ")
}
#full.best1.pca<-princomp(as.formula(full.frm1.pca.a),data=na.omit(full.covariates.dat),cor=TRUE)
full.best1.pca<-princomp(as.formula(full.frm1.pca.a),data=full.covariates.dat,cor=TRUE)
summary(full.best1.pca)
full.best1.pca$loadings
@

<<>>=
full.frm2.pca.b <- paste("~ yield.b")
for(trm in attr(full.best2$terms,"term.labels")) {
   full.frm2.pca.b <- paste(full.frm2.pca.b,trm,sep=" + ")
}
full.best2.pca<-princomp(as.formula(full.frm2.pca.b),data=full.covariates.dat,cor=TRUE)
summary(full.best2.pca)
full.best2.pca$loadings
@



<<>>=
PC1labels <- c("Yield Average","Wa","Wb","Wc","Wd","We","Ia","Ib","Ic","Id","Ie","If","Ig","Ih","Ii","Ij","Ik","Il","Im","In","In","Ua")
xnames1 <- attr(full.best1.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames1)) {
   xnames1[idx] = substr(xnames1[idx], 1, 2)
}
xnames1[xnames1=="so"] <- "SD"
xnames1[xnames1=="ka"] <- "KS"
xnames1[xnames1=="no"] <- "ND"
xnames1[xnames1=="te"] <- "TX"
xnames1[xnames1=="ne"] <- "NE"
xnames1[xnames1=="ok"] <- "OK"

PC2labels <- c("Yield Change","W1","W2","W3","W4","W5","W6","I1","I2","I3","I4","I5","I6","I7","I8","U1","U2","U3")
xnames2 <- attr(full.best2.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames2)) {
   xnames2[idx] = substr(xnames2[idx], 1, 3)
}
xnames2[xnames2=="so"] <- "SD"
xnames2[xnames2=="ka"] <- "KS"
xnames2[xnames2=="no"] <- "ND"
xnames2[xnames2=="te"] <- "TX"
xnames2[xnames2=="ne"] <- "NE"
xnames2[xnames2=="ok"] <- "OK"

xnames2[xnames2=="wa"] <- "WA"
xnames2[xnames2=="or"] <- "OR"
xnames2[xnames2=="id"] <- "ID"
xnames2[xnames2=="mo"] <- "MT"
xnames2[xnames2=="wy"] <- "WY"
xnames2[xnames2=="ne"] <- "NM"
xnames2[xnames2=="mi"] <- "MN"


full.xnames2 <- attr(full.best2.pca$scores,"dimnames")[[1]]
for(idx in 1:length(full.xnames2)) {
   full.xnames2[idx] = substr(full.xnames2[idx], 1, 3)
}
full.xnames2[full.xnames2=="sou"] <- "SD"
full.xnames2[full.xnames2=="kan"] <- "KS"
full.xnames2[full.xnames2=="nor"] <- "ND"
full.xnames2[full.xnames2=="tex"] <- "TX"
full.xnames2[full.xnames2=="neb"] <- "NE"
full.xnames2[full.xnames2=="okl"] <- "OK"

full.xnames2[full.xnames2=="was"] <- "WA"
full.xnames2[full.xnames2=="ore"] <- "OR"
full.xnames2[full.xnames2=="ida"] <- "ID"
full.xnames2[full.xnames2=="mon"] <- "MT"
full.xnames2[full.xnames2=="wyo"] <- "WY"
full.xnames2[full.xnames2=="new"] <- "NM"
full.xnames2[full.xnames2=="min"] <- "MN"
full.xnames2[full.xnames2=="mis"] <- "MO"
full.xnames2[full.xnames2=="iow"] <- "IA"
full.xnames2[full.xnames2=="col"] <- "CO"

all.PC1labels <- c("Yield","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W")
full.PC2labels <-all.PC1labels[1:dim(full.best2.pca$loadings)[2]]
full.PC1labels <-all.PC1labels[1:dim(full.best1.pca$loadings)[2]]
@


<<pca,fig=TRUE>>=
par(mfrow=c(1,2))
biplot(full.best1.pca,cex=c(.5,1),xlabs=full.xnames2,ylabs=full.PC1labels,col=cbbPalette[2:1])
biplot(full.best2.pca,cex=c(.5,1),xlabs=full.xnames2,ylabs=full.PC2labels,col=cbbPalette[2:1])
par(mfrow=c(1,1))
@

<<pca1,fig=TRUE,width=5,height=5>>=
par(bg="white")
biplot(full.best1.pca,cex=c(.5,1),xlabs=full.xnames2,ylabs=full.PC1labels,col=cbbPalette[2:1])
@

<<pca2,fig=TRUE,width=5,height=5>>=
par(bg="white")
biplot(full.best2.pca,cex=c(.5,1),xlabs=full.xnames2,ylabs=full.PC2labels,col=cbbPalette[2:1])
@



<<>>=
common.scale <- max(abs(1.05*covariates.dat$yield.b))
@

<<>>=
setwd(current.wd)
load(file="data/usda/early.lm.Rda")
load(file="data/usda/mid.lm.Rda")
rpn.mid.estimates <- extract.county.estimates(mid.lm,term=1)
rpn.mid.year.estimates <- extract.county.estimates(mid.lm,term=2)
common.scale <- max(c(common.scale, max(abs(1.05*rpn.mid.year.estimates))))

rpn.early.estimates <- extract.county.estimates(early.lm,term=1)
rpn.early.year.estimates <- extract.county.estimates(early.lm,term=2)
#common.scale <- max(c(common.scale, max(abs(1.05*rpn.early.year.estimates))))
@



<<fig=TRUE>>=
par(bg="white")
yield.b <- covariates.dat$yield.b
names(yield.b) <- as.character(covariates.dat$statecounty)
grid.arrange(arrangeGrob(
   ggmap.values(rpn.early.year.estimates,names(rpn.early.year.estimates),main="Yield Change,1924-1944",legend="%/yr",palette=yield.palette),
   ggmap.values(rpn.mid.year.estimates,names(rpn.mid.year.estimates),main="Yield Change,1944-1979",legend="%/yr",palette=yield.palette),
   ggmap.values(yield.b,names(yield.b),main="Yield Change, 1984-2014 ",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=3))
@

<<>>=
setwd(current.wd)
load(file="data/usda/early.full.lm.Rda")
load(file="data/usda/mid.full.lm.Rda")
full.mid.estimates <- extract.county.estimates(mid.full.lm,term=1)
full.mid.year.estimates <- extract.county.estimates(mid.full.lm,term=2)

full.early.estimates <- extract.county.estimates(early.full.lm,term=1)
full.early.year.estimates <- extract.county.estimates(early.full.lm,term=2)
#common.scale <- max(c(common.scale, max(abs(1.05*rpn.early.year.estimates))))
@



<<fig=TRUE>>=
full.yield.b <- full.covariates.dat$yield.b
names(full.yield.b) <- as.character(full.covariates.dat$statecounty)
grid.arrange(arrangeGrob(
   ggmap.full.values(full.early.year.estimates,names(full.early.year.estimates),main="Yield Change,1924-1944",legend="%/yr",palette=yield.palette),
   ggmap.full.values(full.mid.year.estimates,names(full.mid.year.estimates),main="Yield Change,1944-1979",legend="%/yr",palette=yield.palette),
   ggmap.full.values(full.yield.b,names(full.yield.b),main="Yield Change, 1984-2014 ",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=3))
@


\section{Offset}
<<echo=false>>=
if(!file.exists("data/usda/covariates2.dat.Rda")) {
   setwd('data/usda')
   if(!file.exists("late2.county.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   }
   
   load.if.needed("late2.county.lm")
   load.if.needed("late4.county.lm")
   load.if.needed("late6.county.lm")
   setwd(current.wd)
   
   setwd('data/wonder')
   load.if.needed("min2.lm")
   load.if.needed("max2.lm")
   load.if.needed("heat2.lm")
   load.if.needed("precip2.lm")
   load.if.needed("sun2.lm")
   
   load.if.needed("min4.lm")
   load.if.needed("max4.lm")
   load.if.needed("heat4.lm")
   load.if.needed("precip4.lm")
   load.if.needed("sun4.lm")
   
   load.if.needed("min6.lm")
   load.if.needed("max6.lm")
   load.if.needed("heat6.lm")
   load.if.needed("precip6.lm")
   load.if.needed("sun6.lm")
   setwd(current.wd)
    
yield.a.late2 <- extract.county.estimates(late2.county.lm,term=1)
yield.b.late2 <- extract.county.estimates(late2.county.lm,term=2)
yield.a.late4 <- extract.county.estimates(late4.county.lm,term=1)
yield.b.late4 <- extract.county.estimates(late4.county.lm,term=2)
yield.a.late6 <- extract.county.estimates(late6.county.lm,term=1)
yield.b.late6 <- extract.county.estimates(late6.county.lm,term=2)

covariates2.dat <- covariates.base
covariates4.dat <- covariates.base
covariates6.dat <- covariates.base

coef2.idx <- as.character(covariates2.dat$statecounty)
coef4.idx <- as.character(covariates4.dat$statecounty)
coef6.idx <- as.character(covariates6.dat$statecounty)

covariates2.dat$yield.a <- yield.a.late2[coef2.idx]
covariates2.dat$yield.b <- yield.b.late2[coef2.idx]
covariates4.dat$yield.a <- yield.a.late4[coef4.idx]
covariates4.dat$yield.b <- yield.b.late4[coef4.idx]
covariates6.dat$yield.a <- yield.a.late6[coef6.idx]
covariates6.dat$yield.b <- yield.b.late6[coef6.idx]

covariates2.dat$min.a=extract.county.estimates(min2.lm,term=1)[coef2.idx]
covariates2.dat$min.b=extract.county.estimates(min2.lm,term=2)[coef2.idx]
covariates2.dat$max.a=extract.county.estimates(max2.lm,term=1)[coef2.idx]
covariates2.dat$max.b=extract.county.estimates(max2.lm,term=2)[coef2.idx]
covariates2.dat$heat.a=extract.county.estimates(heat2.lm,term=1)[coef2.idx]
covariates2.dat$heat.b=extract.county.estimates(heat2.lm,term=2)[coef2.idx]
covariates2.dat$precip.a=extract.county.estimates(precip2.lm,term=1)[coef2.idx]
covariates2.dat$precip.b=extract.county.estimates(precip2.lm,term=2)[coef2.idx]
covariates2.dat$sun.a=extract.county.estimates(sun2.lm,term=1)[coef2.idx]
covariates2.dat$sun.b=extract.county.estimates(sun2.lm,term=2)[coef2.idx]

covariates4.dat$min.a=extract.county.estimates(min4.lm,term=1)[coef4.idx]
covariates4.dat$min.b=extract.county.estimates(min4.lm,term=2)[coef4.idx]
covariates4.dat$max.a=extract.county.estimates(max4.lm,term=1)[coef4.idx]
covariates4.dat$max.b=extract.county.estimates(max4.lm,term=2)[coef4.idx]
covariates4.dat$heat.a=extract.county.estimates(heat4.lm,term=1)[coef4.idx]
covariates4.dat$heat.b=extract.county.estimates(heat4.lm,term=2)[coef4.idx]
covariates4.dat$precip.a=extract.county.estimates(precip4.lm,term=1)[coef4.idx]
covariates4.dat$precip.b=extract.county.estimates(precip4.lm,term=2)[coef4.idx]
covariates4.dat$sun.a=extract.county.estimates(sun4.lm,term=1)[coef4.idx]
covariates4.dat$sun.b=extract.county.estimates(sun4.lm,term=2)[coef4.idx]


covariates6.dat$min.a=extract.county.estimates(min6.lm,term=1)[coef6.idx]
covariates6.dat$min.b=extract.county.estimates(min6.lm,term=2)[coef6.idx]
covariates6.dat$max.a=extract.county.estimates(max6.lm,term=1)[coef6.idx]
covariates6.dat$max.b=extract.county.estimates(max6.lm,term=2)[coef6.idx]
covariates6.dat$heat.a=extract.county.estimates(heat6.lm,term=1)[coef6.idx]
covariates6.dat$heat.b=extract.county.estimates(heat6.lm,term=2)[coef6.idx]
covariates6.dat$precip.a=extract.county.estimates(precip6.lm,term=1)[coef6.idx]
covariates6.dat$precip.b=extract.county.estimates(precip6.lm,term=2)[coef6.idx]
covariates6.dat$sun.a=extract.county.estimates(sun6.lm,term=1)[coef6.idx]
covariates6.dat$sun.b=extract.county.estimates(sun6.lm,term=2)[coef6.idx]

   setwd('data/usda')
   save(covariates2.dat, file="covariates2.dat.Rda")
   save(covariates4.dat, file="covariates4.dat.Rda")
   save(covariates6.dat, file="covariates6.dat.Rda")
   setwd(current.wd)

} 

setwd('data/usda')
load.if.needed("covariates2.dat")
load.if.needed("covariates4.dat")
load.if.needed("covariates6.dat")
setwd(current.wd)
#ref <- 2014
ref2 <- ref-2
ref4 <- ref2-2
ref6 <- ref4-2

covariates2.dat <- subset(covariates2.dat,covariates2.dat$statecounty %in% covariates.dat$statecounty)
covariates4.dat <- subset(covariates4.dat,covariates4.dat$statecounty %in% covariates.dat$statecounty)
covariates6.dat <- subset(covariates6.dat,covariates6.dat$statecounty %in% covariates.dat$statecounty)

covariates2.dat[,intercept.columns] <- covariates2.dat[,intercept.columns] + covariates2.dat[,intercept.columns+1]*ref2
covariates4.dat[,intercept.columns] <- covariates4.dat[,intercept.columns] + covariates4.dat[,intercept.columns+1]*ref4
covariates6.dat[,intercept.columns] <- covariates6.dat[,intercept.columns] + covariates6.dat[,intercept.columns+1]*ref6

covariates2.dat[,intercept.columns+1] <- 100*covariates2.dat[,intercept.columns+1]/covariates2.dat[,intercept.columns]
covariates4.dat[,intercept.columns+1] <- 100*covariates4.dat[,intercept.columns+1]/covariates4.dat[,intercept.columns]
covariates6.dat[,intercept.columns+1] <- 100*covariates6.dat[,intercept.columns+1]/covariates6.dat[,intercept.columns]

distances <- covariates.dat$Distance
names(distances) <- as.character(covariates.dat$statecounty)
covariates2.dat$Distance <- distances[as.character(covariates2.dat$statecounty)]
covariates4.dat$Distance <- distances[as.character(covariates4.dat$statecounty)]
covariates6.dat$Distance <- distances[as.character(covariates6.dat$statecounty)]

incomes <- covariates.dat$mean.income
names(incomes) <- as.character(covariates.dat$statecounty)
covariates2.dat$mean.income <- incomes[as.character(covariates2.dat$statecounty)]
covariates4.dat$mean.income <- incomes[as.character(covariates4.dat$statecounty)]
covariates6.dat$mean.income <- incomes[as.character(covariates6.dat$statecounty)]

fracs <- covariates.dat$wheat_frac
names(fracs) <- as.character(covariates.dat$statecounty)
covariates2.dat$wheat_frac <- fracs[as.character(covariates2.dat$statecounty)]
covariates4.dat$wheat_frac <- fracs[as.character(covariates4.dat$statecounty)]
covariates6.dat$wheat_frac <- fracs[as.character(covariates6.dat$statecounty)]

head(covariates.dat)
head(covariates2.dat)
@

<<echo=false>>=
cov1.2.lm <- lm(form1,data=na.omit(covariates2.dat))
cov2.2.lm <- lm(form2,data=na.omit(covariates2.dat))
@

<<results=hide>>=
best1.2 <- step(cov1.2.lm,direction = "both")
best2.2 <- step(cov2.2.lm,direction = "both")
@

<<>>=
summary(aov(best1.2))
summary(aov(best2.2))

cov1.4.lm <- lm(form1,data=na.omit(covariates4.dat))
cov2.4.lm <- lm(form2,data=na.omit(covariates4.dat))

#summary(aov(cov3.4.lm))
#summary(aov(cov4.4.lm))
@
<<results=hide>>=
best1.4 <- step(cov1.4.lm,direction = "both")
best2.4 <- step(cov2.4.lm,direction = "both")
@
<<>>=
summary(aov(best1.4))
summary(aov(best2.4))

cov1.6.lm <- lm(form1,data=na.omit(covariates6.dat))
cov2.6.lm <- lm(form2,data=na.omit(covariates6.dat))

#summary(aov(cov3.6.lm))
#summary(aov(cov4.6.lm))
@
<<results=hide>>=
best1.6 <- step(cov1.6.lm,direction = "both")
best2.6 <- step(cov2.6.lm,direction = "both")
@
<<>>=
summary(aov(best1.6))
summary(aov(best2.6))
@




<<fig=TRUE>>=
yield.b <- covariates.dat$yield.b
names(yield.b) <- as.character(covariates.dat$statecounty)
grid.arrange(arrangeGrob(
   ggmap.values(covariates2.dat$yield.b,covariates2.dat$statecounty,main="Yield Change, 1982-2012",legend="%/yr",palette=yield.palette),
   ggmap.values(covariates4.dat$yield.b,covariates4.dat$statecounty,main="Yield Change, 1980-2010",legend="%/yr",palette=yield.palette),
   ggmap.values(covariates6.dat$yield.b,covariates6.dat$statecounty,main="Yield Change, 1978-2008",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=3))
@

<<>>=
yield.b.2 <- covariates2.dat$yield.b
names(yield.b.2) <- covariates2.dat$statecounty
yield.b.4 <- covariates4.dat$yield.b
names(yield.b.4) <-covariates4.dat$statecounty
yield.b.6 <- covariates6.dat$yield.b
names(yield.b.6) <-covariates6.dat$statecounty
@

<<fig=TRUE>>=
plot(covariates.dat$min.a,covariates2.dat$min.a,col="red")
points(covariates.dat$min.a,covariates4.dat$min.a,col="blue")
points(covariates.dat$min.a,covariates6.dat$min.a,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$min.b,covariates2.dat$min.b,col="red")
points(covariates.dat$min.b,covariates4.dat$min.b,col="blue")
points(covariates.dat$min.b,covariates6.dat$min.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$precip.b,covariates2.dat$precip.b,col="red")
points(covariates.dat$precip.b,covariates4.dat$precip.b,col="blue")
points(covariates.dat$precip.b,covariates6.dat$precip.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$yield.b,yield.b.2[as.character(covariates.dat$statecounty)],col="red")
points(covariates.dat$yield.b,yield.b.4[as.character(covariates.dat$statecounty)],col="blue")
points(covariates.dat$yield.b,yield.b.6[as.character(covariates.dat$statecounty)],col="green")
@







<<>>=
setwd('data/usda')
load.if.needed("county.late5.dat")
load.if.needed("county.late10.dat")
load.if.needed("county.late15.dat")
setwd(current.wd)

grid.arrange(arrangeGrob(
  ggplot(county.late5.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.late10.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.late15.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=3))
@

<<fig=TRUE>>=

setwd('data/usda')
load.if.needed("late5.county.lm")
load.if.needed("late10.county.lm")
load.if.needed("late15.county.lm")
setwd(current.wd)

yield5.b <- extract.county.estimates(late5.county.lm,term=2)[coef.idx]
yield10.b <- extract.county.estimates(late10.county.lm,term=2)[coef.idx]
yield15.b <- extract.county.estimates(late15.county.lm,term=2)[coef.idx]

grid.arrange(arrangeGrob(
   ggmap.values(yield15.b,names(yield15.b ),main="Yield Change, 1969-1999",legend="%/yr",palette=yield.palette),
   ggmap.values(yield10.b,names(yield10.b),main="Yield Change, 1974-2004",legend="%/yr",palette=yield.palette),
   ggmap.values(yield5.b,names(yield5.b),main="Yield Change, 1979-2009",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=3))
@


<<>>=
setwd('data/usda')
load.if.needed("full.late5.dat")
load.if.needed("full.late10.dat")
load.if.needed("full.late15.dat")
setwd(current.wd)

grid.arrange(arrangeGrob(
  ggplot(full.late5.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(full.late10.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(full.late15.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=3))
@

<<fig=TRUE>>=

setwd('data/usda')
load.if.needed("late5.full.lm")
load.if.needed("late10.full.lm")
load.if.needed("late15.full.lm")
setwd(current.wd)

yield5.b <- extract.county.estimates(late5.full.lm,term=2)[full.coef.idx]
yield10.b <- extract.county.estimates(late10.full.lm,term=2)[full.coef.idx]
yield15.b <- extract.county.estimates(late15.full.lm,term=2)[full.coef.idx]

grid.arrange(arrangeGrob(
   ggmap.full.values(yield15.b,names(yield15.b ),main="Yield Change, 1969-1999",legend="%/yr",palette=yield.palette),
   ggmap.full.values(yield10.b,names(yield10.b),main="Yield Change, 1974-2004",legend="%/yr",palette=yield.palette),
   ggmap.full.values(yield5.b,names(yield5.b),main="Yield Change, 1979-2009",legend="%/yr",palette=yield.palette),
   as.table=TRUE,
   ncol=3))
@


Climate Data Online
http://www.ncdc.noaa.gov/cdo-web/
Submitted query by searching for SD
1984-2014
Monthly summary
Summary is limited to 5000 location years, this is 27,712 Station Years, so must include multiple stations per county (66)



Other data from USDA
at state level,
Fertilizer and with limited years

Plant Available Water from USDA NASS? See Clay's paper in Global Food Security

### Quickstats Lite
Gives different options, more columns at one time.

http://www.nass.usda.gov/Quick_Stats/Lite/









Aquifer Data
 USGS High Plains Water-Level Monitoring Study
http://ne.water.usgs.gov/ogw/hpwlms/data.html
County and state level data, downloaded as individual files

HWW RPN
http://www.ars.usda.gov/Main/docs.htm?docid=11932

References

ray.d-12-2012
- yield unchanging, stagnating, collapsing, increasing.
ray.d-2013
cites yield increases in ND, SD, based on crop census reports 1989-2008


clay.d-01-2014
Show yield gaps w.r.t. corn in SD

Wheat Yields
graybosch.r-2014

Wheat Yields in France
brisson.n-10-2010

Periods in yields
thompson.l-01-1988

Small yield gains in corn
farfan.i-2013

Europe
moore.f-03-2015

Open Data
carolan.l-2015

brklacich.m-1995
CERES-wheat model in Canada





\end{document}

