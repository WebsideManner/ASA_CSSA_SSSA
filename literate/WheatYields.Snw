
\documentclass{report}
\usepackage{amsmath}

\begin{document}

\title{Geospatial analysis of yield trends in winter wheat}\author{Peter Claussen}\maketitle


<<>>=
source("../ASA_CSSA_SSSA/R/map_functions.R")
@

We drive the analysis from the USDA data set for yield. These data are in the \verb|usda| directory.
The majority of files are fit with code in that directory, and we will store our covariate data there as well.

The various \verb|fitLinearModels.Snw| will follow a general structure. Each covariate will be fit to a simple linear model by year, and the result saved
as an Rda file. If a file (or controlling file) is not present, the appropriate data set is read. In some cases, the data are processed (i.e. to remove commas as thousand separators), and the resulting Rda file may be read instead. This in general speeds analysis, since in many cases fitting linear models is time consuming. In this controlling code, we save the intermediate covariate files and load linear models only when certain covariate headers are not found.

<<echo=false,results=hide>>=
current.wd <- getwd()
covariateFileName <- "data/usda/covariates.dat.Rda"
if(!file.exists(covariateFileName)) {
   setwd('data/usda')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
} else {
   load(file=covariateFileName)
}
@

\section{Covariates}

\subsection{Weather}


\subsection{Nutrients} 

See \verb|data\IPNI| for more discussion of this data.

<<echo=false,results=hide>>=
if(!("Farm_TonsN.a" %in% names(covariates.dat))) {
  #Sweave("data/ipni/fitLinearModels.Snw")
   setwd('data/ipni')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
@

Other measures
<<>>=
if(!("harvested.a" %in% names(covariates.dat))) {
   setwd('data/usda/')
   if(!file.exists("harvested.late.county.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   } else {
      load(file="harvested.late.county.lm.Rda")
      load(file="acres.late.county.lm.Rda")
      load(file="acres.late.county.lm.Rda")
      load(file="income.total.county.lm.Rda")
      load(file="income.relative.county.lm.Rda")
   }
   setwd(current.wd)

   covariates.dat$harvested.a <- extract.county.estimates(harvested.late.county.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$harvested.b <- extract.county.estimates(harvested.late.county.lm,term=2)[covariates.dat$statecounty]

   covariates.dat$acres.a <- extract.county.estimates(acres.late.county.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$acres.b <- extract.county.estimates(acres.late.county.lm,term=2)[covariates.dat$statecounty]

   covariates.dat$relative.a <- extract.county.estimates(income.relative.county.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$relative.b <- extract.county.estimates(income.relative.county.lm,term=2)[covariates.dat$statecounty]
   
   covariates.dat$total.a <- extract.county.estimates(income.total.county.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$total.b <- extract.county.estimates(income.total.county.lm,term=2)[covariates.dat$statecounty]
   
   #production.late.estimates <- extract.county.estimates(production.late.county.lm,term=1)[covariates.dat$statecounty]
   #production.late.year.estimates <- extract.county.estimates(production.late.county.lm,term=2)[covariates.dat$statecounty]
   #covariates.dat$production.a <- production.late.estimates[covariates.dat$statecounty]
   #covariates.dat$production.b <- production.late.year.estimates[covariates.dat$statecounty]
   
   save(covariates.dat, file=covariateFileName)
}
@

Check work
<<>>=
setwd('data/usda/')
load.if.needed("harvested.late.county.lm")
 setwd(current.wd)
harvested.a <- extract.county.estimates(harvested.late.county.lm,term=1)[covariates.dat$statecounty]
harvested.b <- extract.county.estimates(harvested.late.county.lm,term=2)[covariates.dat$statecounty]
plot(hist(harvested.a))
harvested.lsmean <- harvested.a + 1980*harvested.b
plot(hist(harvested.lsmean))
harvested.lsmean <- harvested.a + 1999*harvested.b
plot(hist(harvested.lsmean))
head(harvested.late.county.lm$model)
harvested.mean <- tapply(harvested.late.county.lm$model$Value,list(harvested.late.county.lm$model$statecounty),mean,na.rm=TRUE)
plot(hist(harvested.mean))
harvested.mean <- harvested.mean[names(harvested.lsmean)]
plot(harvested.mean,harvested.lsmean)
@

\verb|"INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $ / OPERATION"|

<<>>=
if(!file.exists("data/usda/income.total.dat.Rda")) {
   setwd('data/usda/')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}

setwd('data/usda/')
load.if.needed("income.relative.dat")
load.if.needed("income.total.dat")
setwd(current.wd)

mean.relative.income <- tapply(income.relative.dat$Value,list(income.relative.dat$statecounty),mean,na.rm=TRUE)
mean.total.income <- tapply(income.total.dat$Value,list(income.total.dat$statecounty),mean,na.rm=TRUE)
@



\section{Covariate Analysis}
Map yield parameters to the covariate data set. We need to fit yield changes
Now we actually analyze county yield data. Note we need to redo subset since we've since
appended statecounty index


<<>>=

#ref <- 2014
ref <- 1984+(2014-1984)/2

cols <- dim(covariates.dat)[2]
#intercept.columns <- 2*(1:(dim(covariates.dat)[2]/2))+1
intercept.columns <- 2*(1:((dim(covariates.dat)[2]/2)-1))+1
covariates.dat[,intercept.columns] <- covariates.dat[,intercept.columns]+ covariates.dat[,intercept.columns+1]*ref
yield.idx <- 3

covariates.dat$wheat_frac.a <- covariates.dat$acres.a/covariates.dat$Total_Harvested_Cropland_Acres.a
covariates.dat$wheat_frac.b <- covariates.dat$acres.b/covariates.dat$Total_Harvested_Cropland_Acres.b
#covariates.dat$average.income <- mean.relative.income[covariates.dat$statecounty]
#covariates.dat$total.income <- mean.total.income[covariates.dat$statecounty]
#use all but the first and last two columns
covariate.terms <- names(covariates.dat)[5:dim(covariates.dat)[2]]

covariates.base <- covariates.dat
@

\section*{HWW RPN}
<<>>=
if(!("Distance" %in% names(covariates.dat))) {
   setwd('data/wwheat/')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
}
covariates.dat<- subset(covariates.dat,covariates.dat$Distance<4)
@

<<>>=
form1 <- paste(names(covariates.dat)[yield.idx]," ~ ",covariate.terms[1])
form2 <- paste(names(covariates.dat)[yield.idx+1]," ~ ",covariate.terms[2])
form3 <- paste(names(covariates.dat)[yield.idx]," ~ ",covariate.terms[1])
form4 <- paste(names(covariates.dat)[yield.idx+1]," ~ ",covariate.terms[1])

for(idx in 2:length(covariate.terms) ) {
   if((idx%% 2)==0) {
      if(idx>2) {
         form2<-paste(form2,"+",covariate.terms[idx])
      }
   } else {
      form1<-paste(form1,"+",covariate.terms[idx])
   }
   form3<-paste(form3,"+",covariate.terms[idx])
   form4<-paste(form4,"+",covariate.terms[idx])
}
cov1.lm <- lm(form1,data=na.omit(covariates.dat))
cov2.lm <- lm(form2,data=na.omit(covariates.dat))
cov3.lm <- lm(form3,data=na.omit(covariates.dat))
cov4.lm <- lm(form4,data=na.omit(covariates.dat))
@

<<results=hide>>=
best1 <- step(cov1.lm,direction = "both")
best2 <- step(cov2.lm,direction = "both")
best3 <- step(cov3.lm,direction = "both")
best4 <- step(cov4.lm,direction = "both")
@

\section{Yield Average Covariates}
<<>>=
summary(cov1.lm)
summary(aov(cov1.lm))
summary(best1)
summary(aov(best1))
summary(cov3.lm)
summary(aov(cov3.lm))
summary(best3)
summary(aov(best3))
@

\section{Yield Average Covariates}
<<>>=
summary(cov2.lm)
summary(aov(cov2.lm))
summary(best2)
summary(update(best2,data=covariates.dat))
summary(aov(best2))
summary(cov4.lm)
summary(aov(cov4.lm))
summary(best4)
summary(update(best4,data=covariates.dat))
summary(aov(best4))
@

We'll color by state, so convert index


<<>>=
#plot.dat <- covariates.dat
#plot.dat <- subset(covariates.dat,!is.na(covariates.dat$yield.a))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggmap.values(covariates.dat$yield.a,covariates.dat$statecounty,main="Average Yield",legend="mean",palette=cbPalette[2:4]),
  ggmap.values(covariates.dat$yield.b,covariates.dat$statecounty,main="Yield Change",legend="slope",palette=cbPalette[3:4]),
   as.table=TRUE,
   ncol=2))
@

<<>>=
yield.b.map <- make.map.data(covariates.dat$yield.b,covariates.dat$statecounty)
map.means<-tapply(yield.b.map$values,list(yield.b.map$statecounty),mean)
covariates.dat$yield.b2 <- map.means[covariates.dat$statecounty]
yield.b <- covariates.dat$yield.b
names(yield.b) <- as.character(covariates.dat$statecounty)

pooled.names <- names(map.means)
pooled.names <- pooled.names[pooled.names %in%names(yield.b)]
yield.b["kansas,allen"]
map.means["kansas,allen"]
plot(map.means[pooled.names],yield.b[pooled.names])
@



\section{HWW Nursery}


<<>>=
common.scale <- max(abs(1.05*covariates.dat$yield.b))
@

<<>>=
setwd(current.wd)
load(file="data/usda/early.lm.Rda")
load(file="data/usda/mid.lm.Rda")
rpn.mid.estimates <- extract.county.estimates(mid.lm,term=1)
rpn.mid.year.estimates <- extract.county.estimates(mid.lm,term=2)
common.scale <- max(c(common.scale, max(abs(1.05*rpn.mid.year.estimates))))

rpn.early.estimates <- extract.county.estimates(early.lm,term=1)
rpn.early.year.estimates <- extract.county.estimates(early.lm,term=2)
#common.scale <- max(c(common.scale, max(abs(1.05*rpn.early.year.estimates))))
@



<<fig=TRUE>>=
yield.b <- covariates.dat$yield.b
names(yield.b) <- as.character(covariates.dat$statecounty)
grid.arrange(arrangeGrob(
   ggmap.values(rpn.early.year.estimates,names(rpn.early.year.estimates),main="Yield Change,1924-1944",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(rpn.mid.year.estimates,names(rpn.mid.year.estimates),main="Yield Change,1944-1979",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(yield.b,names(yield.b),main="Yield Change, 1984-2014 ",legend="slope",palette=cbPalette[3:4]),
   as.table=TRUE,
   ncol=3))
@


\section{Offset}
<<echo=false>>=
if(!file.exists("data/usda/covariates2.dat.Rda")) {
   setwd('data/usda')
   if(!file.exists("late2.county.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   }
   
   load.if.needed("late2.county.lm")
   load.if.needed("late4.county.lm")
   load.if.needed("late6.county.lm")
   setwd(current.wd)
   
   setwd('data/wonder')
   load.if.needed("min2.lm")
   load.if.needed("max2.lm")
   load.if.needed("heat2.lm")
   load.if.needed("precip2.lm")
   load.if.needed("sun2.lm")
   
   load.if.needed("min4.lm")
   load.if.needed("max4.lm")
   load.if.needed("heat4.lm")
   load.if.needed("precip4.lm")
   load.if.needed("sun4.lm")
   
   load.if.needed("min6.lm")
   load.if.needed("max6.lm")
   load.if.needed("heat6.lm")
   load.if.needed("precip6.lm")
   load.if.needed("sun6.lm")
   setwd(current.wd)
   
yield.a.late2 <- extract.county.estimates(late2.county.lm,term=1)
yield.b.late2 <- extract.county.estimates(late2.county.lm,term=2)
yield.a.late4 <- extract.county.estimates(late4.county.lm,term=1)
yield.b.late4 <- extract.county.estimates(late4.county.lm,term=2)
yield.a.late6 <- extract.county.estimates(late6.county.lm,term=1)
yield.b.late6 <- extract.county.estimates(late6.county.lm,term=2)

covariates2.dat <- covariates.base
covariates4.dat <- covariates.base
covariates6.dat <- covariates.base

covariates2.dat$yield.a <- yield.a.late2[covariates2.dat$statecounty]
covariates2.dat$yield.b <- yield.b.late2[covariates2.dat$statecounty]
covariates4.dat$yield.a <- yield.a.late4[covariates4.dat$statecounty]
covariates4.dat$yield.b <- yield.b.late4[covariates4.dat$statecounty]
covariates6.dat$yield.a <- yield.a.late6[covariates6.dat$statecounty]
covariates6.dat$yield.b <- yield.b.late6[covariates6.dat$statecounty]

covariates2.dat$min.a=extract.county.estimates(min2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$min.b=extract.county.estimates(min2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$max.a=extract.county.estimates(max2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$max.b=extract.county.estimates(max2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$heat.a=extract.county.estimates(heat2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$heat.b=extract.county.estimates(heat2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$precip.a=extract.county.estimates(precip2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$precip.b=extract.county.estimates(precip2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$sun.a=extract.county.estimates(sun2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$sun.b=extract.county.estimates(sun2.lm,term=2)[covariates2.dat$statecounty]

covariates4.dat$min.a=extract.county.estimates(min4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$min.b=extract.county.estimates(min4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$max.a=extract.county.estimates(max4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$max.b=extract.county.estimates(max4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$heat.a=extract.county.estimates(heat4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$heat.b=extract.county.estimates(heat4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$precip.a=extract.county.estimates(precip4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$precip.b=extract.county.estimates(precip4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$sun.a=extract.county.estimates(sun4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$sun.b=extract.county.estimates(sun4.lm,term=2)[covariates4.dat$statecounty]


covariates6.dat$min.a=extract.county.estimates(min6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$min.b=extract.county.estimates(min6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$max.a=extract.county.estimates(max6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$max.b=extract.county.estimates(max6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$heat.a=extract.county.estimates(heat6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$heat.b=extract.county.estimates(heat6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$precip.a=extract.county.estimates(precip6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$precip.b=extract.county.estimates(precip6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$sun.a=extract.county.estimates(sun6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$sun.b=extract.county.estimates(sun6.lm,term=2)[covariates6.dat$statecounty]

   setwd('data/usda')
   save(covariates2.dat, file="covariates2.dat.Rda")
   save(covariates4.dat, file="covariates4.dat.Rda")
   save(covariates6.dat, file="covariates6.dat.Rda")
   setwd(current.wd)

} 

setwd('data/usda')
load.if.needed("covariates2.dat")
load.if.needed("covariates4.dat")
load.if.needed("covariates6.dat")
setwd(current.wd)
#ref <- 2014
ref2 <- ref-2
ref4 <- ref2-2
ref6 <- ref4-2

covariates2.dat <- subset(covariates2.dat,covariates2.dat$statecounty %in% covariates.dat$statecounty)
covariates4.dat <- subset(covariates4.dat,covariates4.dat$statecounty %in% covariates.dat$statecounty)
covariates6.dat <- subset(covariates6.dat,covariates6.dat$statecounty %in% covariates.dat$statecounty)

covariates2.dat[,intercept.columns] <- covariates2.dat[,intercept.columns] + covariates2.dat[,intercept.columns+1]*ref2
covariates4.dat[,intercept.columns] <- covariates4.dat[,intercept.columns] + covariates4.dat[,intercept.columns+1]*ref4
covariates6.dat[,intercept.columns] <- covariates6.dat[,intercept.columns] + covariates6.dat[,intercept.columns+1]*ref6


head(covariates.dat)
head(covariates2.dat)
@

<<echo=false>>=
covariates2.dat$wheat_frac.a <- covariates2.dat$acres.a/covariates2.dat$Total_Harvested_Cropland_Acres.a
covariates2.dat$wheat_frac.b <- covariates2.dat$acres.b/covariates2.dat$Total_Harvested_Cropland_Acres.b
covariates4.dat$wheat_frac.a <- covariates4.dat$acres.a/covariates4.dat$Total_Harvested_Cropland_Acres.a
covariates4.dat$wheat_frac.b <- covariates4.dat$acres.b/covariates4.dat$Total_Harvested_Cropland_Acres.b
covariates6.dat$wheat_frac.a <- covariates6.dat$acres.a/covariates6.dat$Total_Harvested_Cropland_Acres.a
covariates6.dat$wheat_frac.b <- covariates6.dat$acres.b/covariates6.dat$Total_Harvested_Cropland_Acres.b

covariates2.dat$total.income <- mean.total.income[covariates2.dat$statecounty]
covariates2.dat$average.income <- mean.relative.income[covariates2.dat$statecounty]
covariates4.dat$total.income <- mean.total.income[covariates4.dat$statecounty]
covariates4.dat$average.income <- mean.relative.income[covariates4.dat$statecounty]
covariates6.dat$total.income <- mean.total.income[covariates6.dat$statecounty]
covariates6.dat$average.income <- mean.relative.income[covariates6.dat$statecounty]


cov1.2.lm <- lm(form1,data=na.omit(covariates2.dat))
cov2.2.lm <- lm(form2,data=na.omit(covariates2.dat))

#summary(aov(cov3.2.lm))
#summary(aov(cov4.2.lm))
@

<<results=hide>>=
best1.2 <- step(cov1.2.lm,direction = "both")
best2.2 <- step(cov2.2.lm,direction = "both")
@

<<>>=
summary(aov(best1.2))
summary(aov(best2.2))

cov1.4.lm <- lm(form1,data=na.omit(covariates4.dat))
cov2.4.lm <- lm(form2,data=na.omit(covariates4.dat))

#summary(aov(cov3.4.lm))
#summary(aov(cov4.4.lm))
@
<<results=hide>>=
best1.4 <- step(cov1.4.lm,direction = "both")
best2.4 <- step(cov2.4.lm,direction = "both")
@
<<>>=
summary(aov(best1.4))
summary(aov(best2.4))

cov1.6.lm <- lm(form1,data=na.omit(covariates6.dat))
cov2.6.lm <- lm(form2,data=na.omit(covariates6.dat))

#summary(aov(cov3.6.lm))
#summary(aov(cov4.6.lm))
@
<<results=hide>>=
best1.6 <- step(cov1.6.lm,direction = "both")
best2.6 <- step(cov2.6.lm,direction = "both")
@
<<>>=
summary(aov(best1.6))
summary(aov(best2.6))
@


plot2.dat <- subset(covariates2.dat,!is.na(covariates2.dat$yield.a))
plot2.names <- as.character(plot2.dat$statecounty)
plot2.dat$state <- plot2.names
for(i in 1:length(plot2.names)) {
   current <- plot2.names[i]
   tmp <- strsplit(current,",")
   current <- tolower(tmp[[1]][1])
   plot2.dat$state[i] <- current
}

#map.values(plot2.dat$yield.b,plot2.names,main="Average Change, 2 year offset")


<<fig=TRUE>>=
yield.b <- covariates.dat$yield.b
names(yield.b) <- as.character(covariates.dat$statecounty)
grid.arrange(arrangeGrob(
   ggmap.values(covariates2.dat$yield.b,covariates2.dat$statecounty,main="Yield Change, 1982-2012",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(covariates4.dat$yield.b,covariates4.dat$statecounty,main="Yield Change, 1980-2010",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(covariates6.dat$yield.b,covariates6.dat$statecounty,main="Yield Change, 1978-2008",legend="slope",palette=cbPalette[3:4]),
   as.table=TRUE,
   ncol=3))
@

<<>>=
yield.b.2 <- covariates2.dat$yield.b
names(yield.b.2) <- covariates2.dat$statecounty
yield.b.4 <- covariates4.dat$yield.b
names(yield.b.4) <-covariates4.dat$statecounty
yield.b.6 <- covariates6.dat$yield.b
names(yield.b.6) <-covariates6.dat$statecounty
@

<<fig=TRUE>>=
plot(covariates.dat$min.a,covariates2.dat$min.a,col="red")
points(covariates.dat$min.a,covariates4.dat$min.a,col="blue")
points(covariates.dat$min.a,covariates6.dat$min.a,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$min.b,covariates2.dat$min.b,col="red")
points(covariates.dat$min.b,covariates4.dat$min.b,col="blue")
points(covariates.dat$min.b,covariates6.dat$min.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$precip.b,covariates2.dat$precip.b,col="red")
points(covariates.dat$precip.b,covariates4.dat$precip.b,col="blue")
points(covariates.dat$precip.b,covariates6.dat$precip.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$yield.b,yield.b.2[covariates.dat$statecounty],col="red")
points(covariates.dat$yield.b,yield.b.4[covariates.dat$statecounty],col="blue")
points(covariates.dat$yield.b,yield.b.6[covariates.dat$statecounty],col="green")
@







<<>>=
setwd('data/usda')
load.if.needed("county.late5.dat")
load.if.needed("county.late10.dat")
load.if.needed("county.late15.dat")
setwd(current.wd)

grid.arrange(arrangeGrob(
  ggplot(county.late5.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.late10.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.late15.dat, aes(Year,Value)) + geom_point(aes(color=State)) + geom_smooth(aes(group=State),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=3))
@

<<fig=TRUE>>=

setwd('data/usda')
load.if.needed("late5.county.lm")
load.if.needed("late10.county.lm")
load.if.needed("late15.county.lm")
setwd(current.wd)

yield5.b <- extract.county.estimates(late5.county.lm,term=2)[covariates.dat$statecounty]
yield10.b <- extract.county.estimates(late10.county.lm,term=2)[covariates.dat$statecounty]
yield15.b <- extract.county.estimates(late15.county.lm,term=2)[covariates.dat$statecounty]

grid.arrange(arrangeGrob(
   ggmap.values(yield5.b,names(yield5.b),main="Yield Change, 1979-2009",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(yield10.b,names(yield10.b),main="Yield Change, 1974-2004",legend="slope",palette=cbPalette[3:4]),
   ggmap.values(yield15.b,names(yield15.b ),main="Yield Change, 1969-1999",legend="slope",palette=cbPalette[3:4]),
   as.table=TRUE,
   ncol=3))
@

\section{PCA}
<<>>=
frm1.pca.a <- paste("~ yield.a")
for(trm in attr(best1$terms,"term.labels")) {
   frm1.pca.a <- paste(frm1.pca.a,trm,sep=" + ")
}
best1.pca<-princomp(as.formula(frm1.pca.a),data=na.omit(covariates.base),cor=TRUE)
summary(best1.pca)
best1.pca$loadings
@

<<>>=
frm2.pca.b <- paste("~ yield.b")
for(trm in attr(best2$terms,"term.labels")) {
   frm2.pca.b <- paste(frm2.pca.b,trm,sep=" + ")
}
best2.pca<-princomp(as.formula(frm2.pca.b),data=na.omit(covariates.base),cor=TRUE)
summary(best2.pca)
best2.pca$loadings
@


yield.a                           0.305                      -0.118         0.308  0.334  0.174        
precip.a                         -0.216  0.143 -0.387  0.398 -0.200                0.121        -0.123 
sun.a                            -0.403  0.122  0.172 -0.193         0.193         0.134               
fine.a                           -0.269  0.148 -0.293  0.431 -0.176                0.105               
day.a                            -0.330  0.170  0.228 -0.296  0.110  0.182         0.253               
night.a                          -0.436  0.161         0.114                       0.170               
Farm_TonsN.a                      0.111  0.157               -0.384  0.449        -0.218 -0.192 -0.284 
Farm_TonsP.a                     -0.117 -0.212 -0.138 -0.125  0.220 -0.530         0.221               
Farm_TonsK.a                                   -0.144 -0.258 -0.114 -0.103 -0.288  0.281 -0.800        
Tons_P2O5_Exc.a                  -0.111 -0.129  0.489  0.283 -0.196 -0.201               -0.179 -0.235 
Tons_K2O_Exc.a                   -0.112 -0.135  0.530  0.201 -0.189 -0.243               -0.113 -0.102 
Tons_N_Fixed_Legumes.a                                -0.189 -0.161        -0.692  0.187  0.438 -0.366 
Tons_K2O_Rem.a                    0.155 -0.103  0.164  0.159 -0.171  0.143         0.463  0.147  0.601 
BalanceP2O5_Tons.a               -0.214               -0.189 -0.276 -0.303        -0.442         0.308 
RatioN.a                                        0.211  0.328  0.416  0.240               -0.102        
RatioK2O.a                        0.342 -0.140         0.151                       0.125               
FarmNPPCA.a                                           -0.173 -0.543         0.250  0.107               
X21Crop_TotalPlantedAc.a         -0.151 -0.450                       0.260  0.139                      
X21Crop_TotalHarvestAc.a         -0.172 -0.477 -0.113                0.187                      -0.142 
Total_Harvested_Cropland_Acres.a -0.182 -0.492 -0.121                0.186                             
wheat_frac.a
<<>>=
PC1labels <- c("Yield Average","Wa","Wb","Wc","Wd","We","Ia","Ib","Ic","Id","Ie","If","Ig","Ih","Ii","Ij","Ik","Il","Im","In","Ua")
xnames1 <- attr(best1.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames1)) {
   xnames1[idx] = substr(xnames1[idx], 1, 2)
}
xnames1[xnames1=="so"] <- "SD"
xnames1[xnames1=="ka"] <- "KS"
xnames1[xnames1=="no"] <- "ND"
xnames1[xnames1=="te"] <- "TX"
xnames1[xnames1=="ne"] <- "NE"
xnames1[xnames1=="ok"] <- "OK"



PC2labels <- c("Yield Change","W1","W2","W3","W4","W5","W6","I1","I2","I3","I4","I5","I6","U1","U2")
xnames2 <- attr(best2.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames2)) {
   xnames2[idx] = substr(xnames2[idx], 1, 2)
}
xnames2[xnames2=="so"] <- "SD"
xnames2[xnames2=="ka"] <- "KS"
xnames2[xnames2=="no"] <- "ND"
xnames2[xnames2=="te"] <- "TX"
xnames2[xnames2=="ne"] <- "NE"
xnames2[xnames2=="ok"] <- "OK"
@


<<fig=TRUE>>=
par(mfrow=c(1,2))
biplot(best1.pca,cex=c(.5,1),xlabs=xnames1,ylabs=PC1labels,col=cbbPalette[2:1])
biplot(best2.pca,cex=c(.5,1),xlabs=xnames2,ylabs=PC2labels,col=cbbPalette[2:1])
par(mfrow=c(1,1))
@

<<>>=
frm3.pca.a <- paste("~ yield.a")
for(trm in attr(best3$terms,"term.labels")) {
   frm3.pca.a <- paste(frm3.pca.a,trm,sep=" + ")
}
best3.pca<-princomp(as.formula(frm3.pca.a),data=na.omit(covariates.base),cor=TRUE)
summary(best3.pca)
best3.pca$loadings
@

<<>>=
frm4.pca.b <- paste("~ yield.b")
for(trm in attr(best4$terms,"term.labels")) {
   frm4.pca.b <- paste(frm4.pca.b,trm,sep=" + ")
}
best4.pca<-princomp(as.formula(frm4.pca.b),data=na.omit(covariates.base),cor=TRUE)
summary(best4.pca)
best4.pca$loadings
@



xnames <- attr(best4.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames)) {
   xnames[idx] = substr(xnames[idx], 1, 2)
}
xnames[xnames=="so"] <- "SD"
xnames[xnames=="ka"] <- "KS"
xnames[xnames=="no"] <- "ND"
xnames[xnames=="te"] <- "TX"

xnames[xnames=="ne"] <- "NE"
xnames[xnames=="ok"] <- "OK"

biplot(best4.pca,xlabs=xnames,ylabs=PClabels,cex=c(.4,1),col=cbPalette[1:2])







Climate Data Online
http://www.ncdc.noaa.gov/cdo-web/
Submitted query by searching for SD
1984-2014
Monthly summary
Summary is limited to 5000 location years, this is 27,712 Station Years, so must include multiple stations per county (66)



Other data from USDA
at state level,
Fertilizer and with limited years

Plant Available Water from USDA NASS? See Clay's paper in Global Food Security

### Quickstats Lite
Gives different options, more columns at one time.

http://www.nass.usda.gov/Quick_Stats/Lite/









Aquifer Data
 USGS High Plains Water-Level Monitoring Study
http://ne.water.usgs.gov/ogw/hpwlms/data.html
County and state level data, downloaded as individual files

HWW RPN
http://www.ars.usda.gov/Main/docs.htm?docid=11932

References

ray.d-12-2012
- yield unchanging, stagnating, collapsing, increasing.
ray.d-2013
cites yield increases in ND, SD, based on crop census reports 1989-2008


clay.d-01-2014
Show yield gaps w.r.t. corn in SD

Wheat Yields
graybosch.r-2014

Wheat Yields in France
brisson.n-10-2010

Periods in yields
thompson.l-01-1988

Small yield gains in corn
farfan.i-2013

Europe
moore.f-03-2015

Open Data
carolan.l-2015

brklacich.m-1995
CERES-wheat model in Canada





\end{document}

