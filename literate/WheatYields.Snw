
\documentclass{report}
\usepackage{amsmath}

\begin{document}

\title{Geospatial analysis of yield trends in winter wheat}\author{Peter Claussen}\maketitle


<<>>=
source("../ASA_CSSA_SSSA/R/map_functions.R")
@

We drive the analysis from the USDA data set for yield. These data are in the \verb\usda| directory.
The majority of files are fit with code in that directory, and we will store our covariate data there as well.

The various \verb|fitLinearModels.Snw| will follow a general structure. Each covariate will be fit to a simple linear model by year, and the result saved
as an Rda file. If a file (or controlling file) is not present, the appropriate data set is read. In some cases, the data are processed (i.e. to remove commas as thousand separators), and the resulting Rda file may be read instead. This in general speeds analysis, since in many cases fitting linear models is time consuming. In this controlling code, we save the intermediate covariate files and load linear models only when certain covariate heaers are not found.

<<>>=
current.wd <- getwd()
covariateFileName <- "data/usda/covariates.dat.Rda"
if(!file.exists(covariateFileName)) {
   setwd('data/usda')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
} else {
   load(file=covariateFileName)
}
@

\section{Covariates}

\subsection{Weather}


<<echo=false>>=
if(!("min.a" %in% names(covariates.dat))) {
   
   setwd('data/wonder/')
   if(!file.exists("min.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   } 
   
   load(file="min.lm.Rda")
   covariates.dat$min.a=extract.county.estimates(min.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$min.b=extract.county.estimates(min.lm,term=2)[covariates.dat$statecounty]
   min.lm = NA
   
   
      load(file="max.lm.Rda")
      covariates.dat$max.a=extract.county.estimates(max.lm,term=1)[covariates.dat$statecounty]
      covariates.dat$max.b=extract.county.estimates(max.lm,term=2)[covariates.dat$statecounty]
      max.lm = NA
      load(file="heat.lm.Rda")
      load(file="precip.lm.Rda")
      load(file="sun.lm.Rda")
      load(file="fine.lm.Rda")
      load(file="day.lm.Rda")
      load(file="night.lm.Rda")

   setwd(current.wd)

   
   
   
   covariates.dat$heat.a=extract.county.estimates(heat.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$heat.b=extract.county.estimates(heat.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$precip.a=extract.county.estimates(precip.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$precip.b=extract.county.estimates(precip.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$sun.a=extract.county.estimates(sun.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$sun.b=extract.county.estimates(sun.lm,term=2)[covariates.dat$statecounty]   
   covariates.dat$fine.a <- extract.county.estimates(fine.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$fine.b <- extract.county.estimates(fine.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$day.a <- extract.county.estimates(day.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$day.b <- extract.county.estimates(day.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$night.a <- extract.county.estimates(night.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$night.b <- extract.county.estimates(night.lm,term=2)[covariates.dat$statecounty]
   
   save(covariates.dat, file=covariateFileName)
} 
@


\section{Nutrients} 

See \verb|data\IPNI| for more discussion of this data.

<<echo=false>>=
if(!("Farm_TonsN.a" %in% names(covariates.dat))) {
  #Sweave("data/ipni/fitLinearModels.Snw")
   setwd('data/ipni')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
   
   covariates.dat$Farm_TonsN.a <- extract.county.estimates(Farm_TonsN.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Farm_TonsN.b <- extract.county.estimates(Farm_TonsN.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Farm_TonsP.a <- extract.county.estimates(Farm_TonsP.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Farm_TonsP.b <- extract.county.estimates(Farm_TonsP.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Farm_TonsK.a <- extract.county.estimates(Farm_TonsK.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Farm_TonsK.b <- extract.county.estimates(Farm_TonsK.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Exc.a <- extract.county.estimates(Tons_N_Exc.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Exc.b <- extract.county.estimates(Tons_N_Exc.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Exc.a <- extract.county.estimates(Tons_P2O5_Exc.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Exc.b <- extract.county.estimates(Tons_P2O5_Exc.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Exc.a <- extract.county.estimates(Tons_K2O_Exc.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Exc.b <- extract.county.estimates(Tons_K2O_Exc.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Recovered.a <- extract.county.estimates(Tons_N_Recovered.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Recovered.b <- extract.county.estimates(Tons_N_Recovered.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Recovered.a <- extract.county.estimates(Tons_P2O5_Recovered.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Recovered.b <- extract.county.estimates(Tons_P2O5_Recovered.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Recovered.a <- extract.county.estimates(Tons_K2O_Recovered.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Recovered.b <- extract.county.estimates(Tons_K2O_Recovered.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Fixed_Legumes.a <- extract.county.estimates(Tons_N_Fixed_Legumes.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Fixed_Legumes.b <- extract.county.estimates(Tons_N_Fixed_Legumes.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Rem.a <- extract.county.estimates(Tons_N_Rem.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_N_Rem.b <- extract.county.estimates(Tons_N_Rem.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Rem.a <- extract.county.estimates(Tons_P2O5_Rem.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_P2O5_Rem.b <- extract.county.estimates(Tons_P2O5_Rem.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Rem.a <- extract.county.estimates(Tons_K2O_Rem.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Tons_K2O_Rem.b <- extract.county.estimates(Tons_K2O_Rem.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$BalanceN_Tons.a <- extract.county.estimates(BalanceN_Tons.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$BalanceN_Tons.b <- extract.county.estimates(BalanceN_Tons.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$BalanceP2O5_Tons.a <- extract.county.estimates(BalanceP2O5_Tons.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$BalanceP2O5_Tons.b <- extract.county.estimates(BalanceP2O5_Tons.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$BalanceK2O_Tons.a <- extract.county.estimates(BalanceK2O_Tons.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$BalanceK2O_Tons.b <- extract.county.estimates(BalanceK2O_Tons.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$RatioN.a <- extract.county.estimates(RatioN.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$RatioN.b <- extract.county.estimates(RatioN.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$RatioP2O5.a <- extract.county.estimates(RatioP2O5.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$RatioP2O5.b <- extract.county.estimates(RatioP2O5.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$RatioK2O.a <- extract.county.estimates(RatioK2O.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$RatioK2O.b <- extract.county.estimates(RatioK2O.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$N_PPCA.a <- extract.county.estimates(N_PPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$N_PPCA.b <- extract.county.estimates(N_PPCA.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$P2O5_PPCA.a <- extract.county.estimates(P2O5_PPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$P2O5_PPCA.b <- extract.county.estimates(P2O5_PPCA.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$K2O_PPCA.a <- extract.county.estimates(K2O_PPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$K2O_PPCA.b <- extract.county.estimates(K2O_PPCA.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$FarmNPPCA.a <- extract.county.estimates(FarmNPPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$FarmNPPCA.b <- extract.county.estimates(FarmNPPCA.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$FarmPPPCA.a <- extract.county.estimates(FarmPPPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$FarmPPPCA.b <- extract.county.estimates(FarmPPPCA.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$FarmKPPCA.a <- extract.county.estimates(FarmKPPCA.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$FarmKPPCA.b <- extract.county.estimates(FarmKPPCA.lm,term=2)[covariates.dat$statecounty]

   covariates.dat$X21Crop_TotalPlantedAc.a <- extract.county.estimates(X21Crop_TotalPlantedAc.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$X21Crop_TotalPlantedAc.b <- extract.county.estimates(X21Crop_TotalPlantedAc.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$X21Crop_TotalHarvestAc.a <- extract.county.estimates(X21Crop_TotalHarvestAc.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$X21Crop_TotalHarvestAc.b <- extract.county.estimates(X21Crop_TotalHarvestAc.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$Total_Harvested_Cropland_Acres.a <- extract.county.estimates(Total_Harvested_Cropland_Acres.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$Total_Harvested_Cropland_Acres.b <- extract.county.estimates(Total_Harvested_Cropland_Acres.lm,term=2)[covariates.dat$statecounty]
   covariates.dat$TotalCropland.a <- extract.county.estimates(TotalCropland.lm,term=1)[covariates.dat$statecounty]
   covariates.dat$TotalCropland.b <- extract.county.estimates(TotalCropland.lm,term=2)[covariates.dat$statecounty]

   save(covariates.dat, file=covariateFileName)
   
}
@

Other measures
<<>>=
if(!("harvested.a" %in% names(covariates.dat))) {
   setwd('data/usda/')
   if(!file.exists("harvested.late.county.lm.Rda")) {
      Sweave("fitLinearModels.Snw")
   } else {
      load(file="harvested.late.county.lm.Rda")
      load(file="acres.late.county.lm.Rda")
      load(file="income.late.county.lm.Rda")
   }
   setwd(current.wd)
   harvested.late.estimates <- extract.county.estimates(harvested.late.county.lm,term=1)
   harvested.late.year.estimates <- extract.county.estimates(harvested.late.county.lm,term=2)
   covariates.dat$harvested.a <- harvested.late.estimates[covariates.dat$statecounty]
   covariates.dat$harvested.b <- harvested.late.year.estimates[covariates.dat$statecounty]

   acres.late.estimates <- extract.county.estimates(acres.late.county.lm,term=1)
   acres.late.year.estimates <- extract.county.estimates(acres.late.county.lm,term=2)
   covariates.dat$acres.a <- acres.late.estimates[covariates.dat$statecounty]
   covariates.dat$acres.b <- acres.late.year.estimates[covariates.dat$statecounty]

   production.late.estimates <- extract.county.estimates(production.late.county.lm,term=1)
   production.late.year.estimates <- extract.county.estimates(production.late.county.lm,term=2)
  # covariates.dat$production.a <- production.late.estimates[covariates.dat$statecounty]
#   covariates.dat$production.b <- production.late.year.estimates[covariates.dat$statecounty]
   
   save(covariates.dat, file=covariateFileName)
}
@

\verb|"INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $ / OPERATION"|

<<>>=
if(!file.exists("data/usda/income.total.dat.Rda")) {
   setwd('data/usda/')
   Sweave("fitLinearModels.Snw")
   setwd(current.wd)
} else {
   load(file="data/usda/income.relative.dat.Rda")
   load(file="data/usda/income.total.dat.Rda")
}
mean.relative.income <- tapply(income.relative.dat$Value,list(income.relative.dat$statecounty),mean,na.rm=TRUE)
mean.total.income <- tapply(income.total.dat$Value,list(income.total.dat$statecounty),mean,na.rm=TRUE)
@

\section{Covariate Analysis}
Map yield parameters to the covariate data set. We need to fit yield changes
Now we actually analyze county yield data. Note we need to redo subset since we've since
appended statecounty index


<<>>=
covariates.base <- covariates.dat
#ref <- 2014
ref <- 1984+(2014-1984)/2

cols <- dim(covariates.dat)[2]
intercept.columns <- 2*(1:(dim(covariates.dat)[2]/2))
covariates.dat[,intercept.columns] <- covariates.dat[,intercept.columns]+ covariates.dat[,intercept.columns+1]*ref
yield.idx <- 2
col <- 2

covariates.dat$wheat_frac.a <- covariates.dat$acres.a/covariates.dat$Total_Harvested_Cropland_Acres.a
covariates.dat$wheat_frac.b <- covariates.dat$acres.b/covariates.dat$Total_Harvested_Cropland_Acres.b
covariates.dat$average.income <- mean.relative.income[covariates.dat$statecounty]
covariates.dat$total.income <- mean.total.income[covariates.dat$statecounty]
#use all but the first and last two columns
covariate.terms <- names(covariates.dat)[4:dim(covariates.dat)[2]]
@

<<>>=
form3 <- paste(names(covariates.dat)[yield.idx]," ~ ",covariate.terms[1])
form4 <- paste(names(covariates.dat)[yield.idx+1]," ~ ",covariate.terms[1])

for(idx in 2:length(covariate.terms) ) {
   form3<-paste(form3,"+",covariate.terms[idx])
   form4<-paste(form4,"+",covariate.terms[idx])
}
cov3.lm <- lm(form3,data=na.omit(covariates.dat))
cov4.lm <- lm(form4,data=covariates.dat)
@

<<results=hide>>=
best3 <- step(cov3.lm,direction = "both")
best4 <- step(cov4.lm,direction = "both")
@

\section{Yield Average Covariates}
<<>>=
summary(cov3.lm)
summary(aov(cov3.lm))
summary(best3)
summary(aov(best3))
@

\section{Yield Average Covariates}
<<>>=
summary(cov4.lm)
summary(aov(cov4.lm))
summary(best4)
summary(aov(best4))
@

We'll color by state, so convert index
<<>>=
plot.dat <- subset(covariates.dat,!is.na(covariates.dat$yield.a))
plot.names <- as.character(plot.dat$statecounty)
plot.dat$state <- plot.names
for(i in 1:length(plot.names)) {
   current <- plot.names[i]
   tmp <- strsplit(current,",")
   current <- tolower(tmp[[1]][1])
   plot.dat$state[i] <- current
}
@

<<fig=TRUE>>=
map.values(plot.dat$yield.a,plot.names,main="Average Yield")
@

<<fig=TRUE>>=
map.values(plot.dat$yield.b,plot.names,main="Yield Change")
@

<<fig=TRUE>>=
subploth.dat <- subset(plot.dat,!is.na(plot.dat$harvested.a))
map.values(subploth.dat$harvested.a,as.character(subploth.dat$statecounty),main="Harvested Average")
@

<<fig=TRUE>>=
map.values(subploth.dat$harvested.b,as.character(subploth.dat$statecounty),main="Harvested Change")
@


\section{HWW Nursery}


<<>>=
common.scale <- max(abs(1.05*covariates.dat$yield.b))
@

<<>>=
load(file="data/usda/early.lm.Rda")
load(file="data/usda/mid.lm.Rda")
rpn.mid.estimates <- extract.county.estimates(mid.lm,term=1)
rpn.mid.year.estimates <- extract.county.estimates(mid.lm,term=2)
common.scale <- max(c(common.scale, max(abs(1.05*rpn.mid.year.estimates))))

rpn.early.estimates <- extract.county.estimates(early.lm,term=1)
rpn.early.year.estimates <- extract.county.estimates(early.lm,term=2)
common.scale <- max(c(common.scale, max(abs(1.05*rpn.early.year.estimates))))
@


<<fig=TRUE>>=
map.values(covariates.dat$yield.b,covariates.dat$statecounty,1/common.scale)
@
<<fig=TRUE>>=
map.values(rpn.mid.year.estimates,names(rpn.mid.year.estimates),1/common.scale)
@
<<fig=TRUE>>=
map.values(rpn.early.year.estimates,names(rpn.early.year.estimates),1/common.scale)
@


\section{Offset}
<<>>=
load(file="data/usda/county.yield.dat.Rda")
county.late2.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+2))
county.late4.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+3))
county.late6.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+6))
@


<<fig=TRUE>>=
county.yield2.plot <- ggplot(county.late2.dat, aes(Year,Value)) 
county.yield2.plot <- county.yield2.plot + scale_colour_brewer(palette="Set1") 
county.yield2.plot <- county.yield2.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield2.plot <- county.yield2.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield2.plot
@

<<fig=TRUE>>=
county.yield4.plot <- ggplot(county.late4.dat, aes(Year,Value)) 
county.yield4.plot <- county.yield4.plot + scale_colour_brewer(palette="Set1") 
county.yield4.plot <- county.yield4.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield4.plot <- county.yield4.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield4.plot
@

<<fig=TRUE>>=
county.yield6.plot <- ggplot(county.late6.dat, aes(Year,Value)) 
county.yield6.plot <- county.yield6.plot + scale_colour_brewer(palette="Set1") 
county.yield6.plot <- county.yield6.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield6.plot <- county.yield6.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield6.plot
@

<<>>=
if(!file.exists("data/usda/covariates2.dat.Rda")) {
   setwd('data/usda')
   Sweave("fitLinearModels.Snw")
   

yield.a.late2 <- extract.county.estimates(late2.county.lm,term=1)
yield.b.late2 <- extract.county.estimates(late2.county.lm,term=2)
yield.a.late4 <- extract.county.estimates(late4.county.lm,term=1)
yield.b.late4 <- extract.county.estimates(late4.county.lm,term=2)
yield.a.late6 <- extract.county.estimates(late6.county.lm,term=1)
yield.b.late6 <- extract.county.estimates(late6.county.lm,term=2)

covariates2.dat <- covariates.base
covariates4.dat <- covariates.base
covariates6.dat <- covariates.base

covariates2.dat$yield.a <- yield.a.late2[covariates2.dat$statecounty]
covariates2.dat$yield.b <- yield.b.late2[covariates2.dat$statecounty]
covariates4.dat$yield.a <- yield.a.late4[covariates4.dat$statecounty]
covariates4.dat$yield.b <- yield.b.late4[covariates4.dat$statecounty]
covariates6.dat$yield.a <- yield.a.late6[covariates6.dat$statecounty]
covariates6.dat$yield.b <- yield.b.late6[covariates6.dat$statecounty]

covariates2.dat$min.a=extract.county.estimates(min2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$min.b=extract.county.estimates(min2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$max.a=extract.county.estimates(max2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$max.b=extract.county.estimates(max2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$heat.a=extract.county.estimates(heat2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$heat.b=extract.county.estimates(heat2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$precip.a=extract.county.estimates(precip2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$precip.b=extract.county.estimates(precip2.lm,term=2)[covariates2.dat$statecounty]
covariates2.dat$sun.a=extract.county.estimates(sun2.lm,term=1)[covariates2.dat$statecounty]
covariates2.dat$sun.b=extract.county.estimates(sun2.lm,term=2)[covariates2.dat$statecounty]

covariates4.dat$min.a=extract.county.estimates(min4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$min.b=extract.county.estimates(min4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$max.a=extract.county.estimates(max4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$max.b=extract.county.estimates(max4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$heat.a=extract.county.estimates(heat4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$heat.b=extract.county.estimates(heat4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$precip.a=extract.county.estimates(precip4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$precip.b=extract.county.estimates(precip4.lm,term=2)[covariates4.dat$statecounty]
covariates4.dat$sun.a=extract.county.estimates(sun4.lm,term=1)[covariates4.dat$statecounty]
covariates4.dat$sun.b=extract.county.estimates(sun4.lm,term=2)[covariates4.dat$statecounty]


covariates6.dat$min.a=extract.county.estimates(min6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$min.b=extract.county.estimates(min6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$max.a=extract.county.estimates(max6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$max.b=extract.county.estimates(max6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$heat.a=extract.county.estimates(heat6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$heat.b=extract.county.estimates(heat6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$precip.a=extract.county.estimates(precip6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$precip.b=extract.county.estimates(precip6.lm,term=2)[covariates6.dat$statecounty]
covariates6.dat$sun.a=extract.county.estimates(sun6.lm,term=1)[covariates6.dat$statecounty]
covariates6.dat$sun.b=extract.county.estimates(sun6.lm,term=2)[covariates6.dat$statecounty]
   save(covariates2.dat, file="covariates2.dat.Rda")
   save(covariates4.dat, file="covariates4.dat.Rda")
   save(covariates6.dat, file="covariates6.dat.Rda")
   setwd(current.wd)

} else {
    setwd('data/usda')
   load(file="covariates2.dat.Rda")
   load(file="covariates4.dat.Rda")
   load(file="covariates6.dat.Rda")
   setwd(current.wd)
}
#ref <- 2014
ref2 <- ref-2
ref4 <- ref2-2
ref6 <- ref4-2

covariates2.dat[,intercept.columns] <- covariates2.dat[,intercept.columns] + covariates2.dat[,intercept.columns+1]*ref2
covariates4.dat[,intercept.columns] <- covariates4.dat[,intercept.columns] + covariates4.dat[,intercept.columns+1]*ref4
covariates6.dat[,intercept.columns] <- covariates6.dat[,intercept.columns] + covariates6.dat[,intercept.columns+1]*ref6


head(covariates.dat)
head(covariates2.dat)
@

<<>>=
covariates2.dat$wheat_frac.a <- covariates2.dat$acres.a/covariates2.dat$Total_Harvested_Cropland_Acres.a
covariates2.dat$wheat_frac.b <- covariates2.dat$acres.b/covariates2.dat$Total_Harvested_Cropland_Acres.b
covariates4.dat$wheat_frac.a <- covariates4.dat$acres.a/covariates4.dat$Total_Harvested_Cropland_Acres.a
covariates4.dat$wheat_frac.b <- covariates4.dat$acres.b/covariates4.dat$Total_Harvested_Cropland_Acres.b
covariates6.dat$wheat_frac.a <- covariates6.dat$acres.a/covariates6.dat$Total_Harvested_Cropland_Acres.a
covariates6.dat$wheat_frac.b <- covariates6.dat$acres.b/covariates6.dat$Total_Harvested_Cropland_Acres.b

covariates2.dat$total.income <- mean.total.income[covariates2.dat$statecounty]
covariates2.dat$average.income <- mean.relative.income[covariates2.dat$statecounty]
covariates4.dat$total.income <- mean.total.income[covariates4.dat$statecounty]
covariates4.dat$average.income <- mean.relative.income[covariates4.dat$statecounty]
covariates6.dat$total.income <- mean.total.income[covariates6.dat$statecounty]
covariates6.dat$average.income <- mean.relative.income[covariates6.dat$statecounty]


#cov3.2.lm <- lm(form3,data=na.omit(covariates2.dat))
cov4.2.lm <- lm(form4,data=na.omit(covariates2.dat))

#summary(aov(cov3.2.lm))
#summary(aov(cov4.2.lm))
@

<<results=hide>>=
#best3.2 <- step(cov3.2.lm,direction = "both")
best4.2 <- step(cov4.2.lm,direction = "both")
@

<<>>=
#summary(aov(best3.2))
summary(aov(best4.2))

#cov3.4.lm <- lm(form3,data=na.omit(covariates4.dat))
cov4.4.lm <- lm(form4,data=na.omit(covariates4.dat))

#summary(aov(cov3.4.lm))
#summary(aov(cov4.4.lm))
@
<<results=hide>>=
#best3.4 <- step(cov3.4.lm,direction = "both")
best4.4 <- step(cov4.4.lm,direction = "both")
@
<<>>=
summary(aov(best3.4))
summary(aov(best4.4))

#cov3.6.lm <- lm(form3,data=na.omit(covariates6.dat))
cov4.6.lm <- lm(form4,data=na.omit(covariates6.dat))

#summary(aov(cov3.6.lm))
#summary(aov(cov4.6.lm))
@
<<results=hide>>=
#best3.6 <- step(cov3.6.lm,direction = "both")
best4.6 <- step(cov4.6.lm,direction = "both")
@
<<>>=
#summary(aov(best3.6))
summary(aov(best4.6))
@

<<>>=
plot2.dat <- subset(covariates2.dat,!is.na(covariates2.dat$yield.a))
plot2.names <- as.character(plot2.dat$statecounty)
plot2.dat$state <- plot2.names
for(i in 1:length(plot2.names)) {
   current <- plot2.names[i]
   tmp <- strsplit(current,",")
   current <- tolower(tmp[[1]][1])
   plot2.dat$state[i] <- current
}
@

<<fig=TRUE>>=
map.values(plot2.dat$yield.b,plot2.names,main="Average Change, 2 year offset")
@

<<>>=
plot4.dat <- subset(covariates4.dat,!is.na(covariates4.dat$yield.a))
plot4.names <- as.character(plot4.dat$statecounty)
plot4.dat$state <- plot4.names
for(i in 1:length(plot4.names)) {
   current <- plot4.names[i]
   tmp <- strsplit(current,",")
   current <- tolower(tmp[[1]][1])
   plot4.dat$state[i] <- current
}
@

<<fig=TRUE>>=
map.values(plot4.dat$yield.b,plot4.names,main="Average Change, 4 year offset")
@

<<>>=
plot6.dat <- subset(covariates6.dat,!is.na(covariates6.dat$yield.a))
plot6.names <- as.character(plot6.dat$statecounty)
plot6.dat$state <- plot6.names
for(i in 1:length(plot6.names)) {
   current <- plot6.names[i]
   tmp <- strsplit(current,",")
   current <- tolower(tmp[[1]][1])
   plot6.dat$state[i] <- current
}
@
<<fig=TRUE>>=
map.values(plot6.dat$yield.b,plot6.names,main="Average Change, 6 year offset")
@

<<>>=
yield.b.2 <- plot2.dat$yield.b
names(yield.b.2) <-plot2.names
yield.b.4 <- plot4.dat$yield.b
names(yield.b.4) <-plot4.names
yield.b.6 <- plot6.dat$yield.b
names(yield.b.6) <-plot6.names
@

<<fig=TRUE>>=
plot(covariates.dat$min.a,covariates2.dat$min.a,col="red")
points(covariates.dat$min.a,covariates4.dat$min.a,col="blue")
points(covariates.dat$min.a,covariates6.dat$min.a,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$min.b,covariates2.dat$min.b,col="red")
points(covariates.dat$min.b,covariates4.dat$min.b,col="blue")
points(covariates.dat$min.b,covariates6.dat$min.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$precip.b,covariates2.dat$precip.b,col="red")
points(covariates.dat$precip.b,covariates4.dat$precip.b,col="blue")
points(covariates.dat$precip.b,covariates6.dat$precip.b,col="green")
@

<<fig=TRUE>>=
plot(covariates.dat$yield.b,yield.b.2[covariates.dat$statecounty],col="red")
points(covariates.dat$yield.b,yield.b.4[covariates.dat$statecounty],col="blue")
points(covariates.dat$yield.b,yield.b.6[covariates.dat$statecounty],col="green")
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(precip.a,yield.b)) + geom_point(aes(color=state),weight=6) + geom_smooth(aes(group=state,color=state),weight=10,se = FALSE,method="lm") + geom_smooth(aes(color="black"),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(precip.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state,color=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@



<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(precip.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(precip.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@





<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(min.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(min.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(max.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(max.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(heat.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(heat.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(sun.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(sun.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(sun.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(sun.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(day.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(day.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(night.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(night.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=6,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(fine.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(fine.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Farm_TonsP.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Farm_TonsP.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Farm_TonsP.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Farm_TonsP.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Farm_TonsK.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Farm_TonsK.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@



<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Tons_P2O5_Recovered.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Tons_P2O5_Recovered.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Tons_K2O_Recovered.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Tons_K2O_Recovered.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Tons_K2O_Recovered.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Tons_K2O_Recovered.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Tons_K2O_Rem.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Tons_K2O_Rem.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Tons_N_Fixed_Legumes.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Tons_N_Fixed_Legumes.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(BalanceN_Tons.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(BalanceN_Tons.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(RatioN.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(RatioN.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(RatioK2O.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(RatioK2O.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(RatioK2O.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(RatioK2O.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@


<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(RatioP2O5.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(RatioP2O5.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(K2O_PPCA.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(K2O_PPCA.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(X21Crop_TotalHarvestAc.a,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(X21Crop_TotalHarvestAc.a,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
grid.arrange(arrangeGrob(
  ggplot(plot.dat, aes(Total_Harvested_Cropland_Acres.b,yield.b)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
  ggplot(plot.dat, aes(Total_Harvested_Cropland_Acres.b,yield.a)) + geom_point(aes(color=state)) + geom_smooth(aes(group=state),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@



\section{PCA}
<<>>=
frm.pca.a <- paste("~ yield.a")
for(trm in attr(best3$terms,"term.labels")) {
   frm.pca.a <- paste(frm.pca.a,trm,sep=" + ")
}
best3.pca<-princomp(as.formula(frm.pca.a),data=na.omit(covariates.dat),cor=TRUE)
summary(best3.pca)
best3.pca$loadings
@

<<>>=
frm.pca.b <- paste("~ yield.b")
for(trm in attr(best4$terms,"term.labels")) {
   frm.pca.b <- paste(frm.pca.b,trm,sep=" + ")
}
best4.pca<-princomp(as.formula(frm.pca.b),data=na.omit(covariates.dat),cor=TRUE)
summary(best4.pca)
best4.pca$loadings
@

<<fig=TRUE,width=6,height=4>>=
PClabels <- c("Yield","Wa","Wb","Wc","Wd","We","Wf","Wg","Ia","Ib","Ic","Id","Ie","If","Ig","Ih","Ii","Ij","Ik","Il","Im","In","Ua","Ub","Uc","Ud")
xnames <- attr(best4.pca$scores,"dimnames")[[1]]
for(idx in 1:length(xnames)) {
   xnames[idx] = substr(xnames[idx], 1, 2)
}
xnames[xnames=="so"] <- "SD"
xnames[xnames=="ka"] <- "KS"
xnames[xnames=="no"] <- "ND"
xnames[xnames=="te"] <- "TX"

xnames[xnames=="ne"] <- "NE"
xnames[xnames=="ok"] <- "OK"

biplot(best4.pca,xlabs=xnames,ylabs=PClabels,cex=c(.4,1),col=cbPalette[1:2])
@

Climate Data Online
http://www.ncdc.noaa.gov/cdo-web/
Submitted query by searching for SD
1984-2014
Monthly summary
Summary is limited to 5000 location years, this is 27,712 Station Years, so must include multiple stations per county (66)



Other data from USDA
at state level,
Fertilizer and with limited years

Plant Available Water from USDA NASS? See Clay's paper in Global Food Security

### Quickstats Lite
Gives different options, more columns at one time.

http://www.nass.usda.gov/Quick_Stats/Lite/









Aquifer Data
 USGS High Plains Water-Level Monitoring Study
http://ne.water.usgs.gov/ogw/hpwlms/data.html
County and state level data, downloaded as individual files

HWW RPN
http://www.ars.usda.gov/Main/docs.htm?docid=11932

References

ray.d-12-2012
- yield unchanging, stagnating, collapsing, increasing.
ray.d-2013
cites yield increases in ND, SD, based on crop census reports 1989-2008


clay.d-01-2014
Show yield gaps w.r.t. corn in SD

Wheat Yields
graybosch.r-2014

Wheat Yields in France
brisson.n-10-2010

Periods in yields
thompson.l-01-1988

Small yield gains in corn
farfan.i-2013

Europe
moore.f-03-2015

Open Data
carolan.l-2015

brklacich.m-1995
CERES-wheat model in Canada





\end{document}

