<TeXmacs|1.99.5>

<style|generic>

<\body>
  <doc-data|<doc-title|Making Sense of the Mixed Model Analyses Available in
  R>|<doc-author|<author-data|<author-name|Peter Claussen>>>>

  <abstract-data|<\abstract>
    The R programming language and software environment is becoming
    increasingly popular among statisticians and researchers, and this has
    driven a proliferation of functions available to fit linear mixed models.
    This provides a great deal of flexibility in choosing a mixed model
    solution appropriate for data set, but this comes at the expense of
    simplicity and ease of use for experimentalists.\ 

    Many package authors, particularly those of the well established packages
    <verbatim|nlme> and <verbatim|lme4>, support a standard model syntax and
    common set of generic functions for extracting results. This allows code
    based on previous analyses to be easily updated to take advantage of
    different algorithms. Other package authors choose idiosyncratic syntax
    for specifying fixed and random effects and produce model objects that
    are not interoperable with other widely used packages.\ 

    Standard mixed model analysis the <verbatim|nlme> and <verbatim|lme4>
    libraries is illustrated using data sets representing common agricultural
    experiments. These analyses are contrasted with analyses from a selection
    of newer packages using different parameter estimation algorithms. The
    ease by which results from different packages can be incorporated into
    reusable code is demonstrated by plotting mean estimates with error bars
    and compact letter displays using custom code integrating multiple R
    functions.
  </abstract>>

  \;

  <section|Introduction>

  In this document we provide R code formatted for presentation. Plots will
  be generated in Sweave.

  <subsection|Theory>

  <subsection|Single Trial>

  Geisbrecht, et al, give the model as (with notational differences)

  <\equation*>
    <with|font-series|bold|y>=<with|font-series|bold|1>\<mu\>+<with|font-series|bold|Z><with|font-series|bold|u>+<with|font-series|bold|X><with|font-series|bold|\<beta\>>+<with|font-series|bold|\<epsilon\>>
  </equation*>

  and\ 

  <\equation*>
    Var<around*|[|<with|font-series|bold|y>|]>=\<sigma\><rsup|2><rsub|b><with|font-series|bold|Z
    Z><rsup|t>+\<sigma\><rsub|\<epsilon\>><rsup|2><with|font-series|bold|I><rsub|b>\<otimes\><with|font-series|bold|I><rsub|t>
  </equation*>

  This form suggests a method to accomodate missing observations. We note
  that OLS minimizes

  <\equation*>
    <around*|(|y-X\<beta\>|)><rsup|t><around*|(|y-X\<beta\>|)><rsup|>
  </equation*>

  We then extend to GLS using a weight matrix that includes correlations.
  This provides the a best unbiased linear estimate of <math|\<beta\>>

  <\equation*>
    <around*|(|y-X\<beta\>|)><rsup|t>V<rsup|-1><around*|(|y-X\<beta\>|)><rsup|>
  </equation*>

  GLS is minimized by setting partial derivatives w.r.t <math|\<beta\>> to 0,
  which gives the normal equations

  <\equation*>
    X<rsup|t>V<rsup|-1>X<wide|\<beta\>|^>=X<rsup|t>V<rsup|-1>y
  </equation*>

  This leads to a solution

  <\equation*>
    <wide|\<beta\>|^><rsub|GLS>=<around*|(|X<rsup|t>V<rsup|-1>X|)><rsup|-1>X<rsup|t>V<rsup|-1>y
  </equation*>

  with\ 

  <\eqnarray*>
    <tformat|<table|<row|<cell|Var<around*|[|<with|font-series|bold|<wide|\<beta\>|^><rsub|GLS>>|]>>|<cell|=>|<cell|<around*|(|X<rsup|t>V<rsup|-1>X|)><rsup|-1>X<rsup|t>V<rsup|-1>Var<around*|[|y|]>V<rsup|-1>X<around*|(|X<rsup|t>V<rsup|-1>X|)><rsup|-1>>>|<row|<cell|>|<cell|=>|<cell|<around*|(|X<rsup|t>V<rsup|-1>X|)><rsup|-1>>>>>
  </eqnarray*>

  The standard errors of <math|<with|font-series|bold|<wide|\<beta\>|^><rsub|GLS>>>
  come from the main diagonal.

  \;

  <subsubsection|Combined Trials>

  \;

  <em|<strong|A Bayesian Approach for Assessing the Stability of
  Genotypes<em|>><strong|>>, Jose Miguel Cotes, Jose Crossa, Adhemar Sanches,
  and Paul L. Cornelius, <with|font-shape|italic|Crop Science>. 46:2654\U2665
  (2006)

  Assume a MET with <math|a> environments, <math|r<rsub|i>> blocks in each
  environment and <math|b=\<Sigma\>r<rsub|i>>, <math|g> genotypes,
  <math|n<rsub|i>> observations in each environment, <math|m<rsub|k>> the
  number of enviroments where the <math|k<rsup|th>> genotype was evaluated
  and <math|n=\<Sigma\>n<rsub|i>> observations.

  <\equation*>
    \<b-y\> = \<b-up-X\>\<b-beta\> \<noplus\>+\<b-Z\><rsub|1>\<b-up-u\><rsub|1>
    +\<b-Z\><rsub|2>\<b-up-u\><rsub|2>+<below|<above|<big|sum>|g>|k=1>\<b-Z\><rsub|3<around*|(|k|)>>\<b-up-u\><rsub|3<around*|(|k|)>>+\<b-1\><rsub|n<rsub|i>>\<otimes\>\<b-up-e\><rsub|i>
  </equation*>

  <\eqnarray*>
    <tformat|<table|<row|<cell|\<b-beta\>
    \<noplus\>>|<cell|=>|<cell|<around*|[|\<mu\><rsub|1>,\<mu\><rsub|2>,\<ldots\>,\<mu\><rsub|g>|]>>>|<row|<cell|\<b-up-u\><rsub|1>>|<cell|\<sim\>>|<cell|\<cal-N\><around*|(|<with|font-series|bold|0>,\<sigma\><rsub|u<rsub|1>><rsup|2>|)>>>|<row|<cell|\<b-up-u\><rsub|2>>|<cell|\<sim\>>|<cell|\<cal-N\><around*|(|0,\<sigma\><rsub|u<rsub|2>><rsup|2>|)>>>|<row|<cell|\<b-up-u\><rsub|3<around*|(|k|)>>>|<cell|\<sim\>>|<cell|\<cal-N\><around*|(|0,\<sigma\><rsub|u<rsub|3<around*|(|k|)>>><rsup|2>|)>>>|<row|<cell|\<b-up-e\><rsub|i><rsub|>>|<cell|\<sim\>>|<cell|\<cal-N\><around*|(|0,\<sigma\><rsub|e<rsub|i>><rsup|2>|)>\<nocomma\>>>>>
  </eqnarray*>

  <subsection|Workflow>

  Given a sequence of steps in the analysis of experimental data,

  <\enumerate>
    <item>Data Entry

    <item>Model Fitting

    <item>Diagnostics

    <item>Model Building

    <item>Summary Statistics

    <item>Hypothesis Testing

    <item>Presentation
  </enumerate>

  how easily can an unfamiliar analysis package be inserted into a familiar
  routine?

  <section|Data Entry>

  We'll demonstrate analysis with three data sets of increasing complexity.\ 

  <\enumerate-numeric>
    <item>Simulated Data for an RCBD with Two Missing Observations.

    Data were simulated with means

    <big-table|<tabular|<tformat|<table|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>>>>>|>

    <item>Series of Similar Experiments

    From Steel and Torrie, Exercise 16.8.1.

    <\quote-env>
      Twelve strains of soybeans were compared in a randomized complete block
      experiment with three blocks at each of three locations in North
      Carolina. Yields given here are in grams per plot.
    </quote-env>

    <\with|par-mode|center>
      <tabular*|<tformat|<cwith|2|-1|1|1|cell-halign|l>|<cwith|2|-1|2|-1|cell-halign|r>|<table|<row|<cell|<with|font-series|bold|Source>>|<cell|<with|font-series|bold|d.f.>>|<cell|<with|font-series|bold|SS>>|<cell|<with|font-series|bold|MS>>|<cell|<with|font-series|bold|Variance>>|<cell|<with|font-series|bold|AOV>>>|<row|<cell|Genotypes>|<cell|11>|<cell|925090>|<cell|84099>|<cell|>|<cell|>>|<row|<cell|Environments>|<cell|2>|<cell|3113626>|<cell|1556813>|<cell|<math|\<sigma\><rsup|2><rsub|u<rsub|1>>>>|<cell|42798>>|<row|<cell|GEI>|<cell|22>|<cell|532900>|<cell|24223>|<cell|<math|\<sigma\><rsup|2><rsub|u<rsub|2>>>>|<cell|1504>>|<row|<cell|Blocks
      in Environments>|<cell|6>|<cell|69256>|<cell|11543>|<cell|<math|\<sigma\><rsup|2><rsub|u<rsub|3>>>>|<cell|-680>>|<row|<cell|Residual>|<cell|66>|<cell|1300723>|<cell|19708>|<cell|<math|\<sigma\><rsub|e><rsup|2>>>|<cell|19708>>>>>
    </with>

    \;

    While this does improve upon a negative variance estimate, the variance
    estimate for environment seems inflated, while GEI variance may be
    under-estimated. Is this the methodology, or just the specific
    implementation?

    <item>Multienvironment Breeding Trial

    Data are from <verbatim|Alvarado, Gregorio; López, Marco; Vargas, Mateo;
    Pacheco, Ángela; Rodríguez, Francisco; Burgueño, Juan; Crossa, José,
    2015-06-08, "META-R (Multi Environment Trail Analysis with R for Windows)
    Version 5.0", http://hdl.handle.net/11529/10201 International Maize and
    Wheat Improvement Center [Distributor] V16 [Version]>

    This is an improved version from the 2013 release. Version 1 was uploaded
    Jun 17, 2015, this is version 4.

    <item><verbatim|Vargas, Mateo; Combs, Emily; Alvarado, Gregorio; Atlin,
    Gary; Crossa, José, 2015-06-17, "META-SAS: A Suite of SAS Programs to
    Analyze Multienvironment", http://hdl.handle.net/11529/10217
    International Maize and Wheat Improvement Center [Distributor] V4
    [Version]>
  </enumerate-numeric>

  Homogeneity of variance is one of the more commonly violated assumptions
  regarding the analysis of variance of combined trials. Consider, if we
  analyze each of the four trials in the sample data set individually, using
  standard AOV,

  <\with|par-mode|center>
    <tabular*|<tformat|<cwith|2|-1|1|1|cell-halign|l>|<table|<row|<cell|<with|font-series|bold|Environment>>|<cell|<with|font-series|bold|Residual
    MS>>>|<row|<cell|Brookings 2003>|<cell|0.174>>|<row|<cell|Brookings
    2004>|<cell|0.408>>|<row|<cell|Brookings
    2005>|<cell|0.098>>|<row|<cell|Brookings 2006>|<cell|0.108>>>>>
  </with>

  A general rule of thumb is that if, of a range of residual MS, the largest
  is less than <math|3\<times\>> the smallest, then variance can be assumed
  to be homogeneous. Thus, we would exclude Brookings 2004 if we want valid
  AOV.

  I've found no specific mechanism to specify the structure of residual
  variance in <verbatim|lmer>; the prior REML package, <verbatim|lme>, does
  allow a structured residual variance but does not handle crossed effects
  simply.

  <subsection|Simulated Data for an RCBD with Two Missing Observations>

  I prefer to work with data frames to prevent cluttering the name space with
  similar variables.

  <\program|r|default>
    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7 \<less\>- data.frame(

      \ \ \ \ \ \ \ \ plot = c(101,102,103,104,105,106,201,202,203,204,205,206,301,302,303,304,305,306,401,402,403,404,405,406),

      \ \ \ \ \ \ \ \ rep = as.factor(c(1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4)),

      \ \ \ \ \ \ \ \ col = as.factor(c(1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6)),

      \ \ \ \ \ \ \ \ trt = as.factor(c(4,5,6,3,1,2,6,4,2,5,3,1,2,3,1,6,5,4,3,6,2,5,4,1)),

      \ \ \ \ \ \ \ \ obs = c(3.43,5.25,6.47,2.8,NA,2.66,8.43,6.09,6.41,5.69,7.04,NA,6.07,6.19,4.93,5.95,4.99,3.26,5.22,7.35,4.48,6.34,6.71,3.13)

      \ \ \ )

      \;

      Table5.7treatments \<less\>- length(levels(Table5.7$trt))
    <|unfolded-prog-io>
      Table5.7 \<less\>- data.frame(

      + \ \ \ \ \ \ \ \ plot = c(101,102,103,104,105,106,201,202,203,204,205,206,301,302,30

      \<less\>103,104,105,106,201,202,203,204,205,206,301,302,303,304,305,306,401,402,403,

      \<less\>3,204,205,206,301,302,303,304,305,306,401,402,403,404,405,406),

      + \ \ \ \ \ \ \ \ rep = as.factor(c(1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4))

      \<less\>(1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4)),

      + \ \ \ \ \ \ \ \ col = as.factor(c(1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6))

      \<less\>(1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6)),

      + \ \ \ \ \ \ \ \ trt = as.factor(c(4,5,6,3,1,2,6,4,2,5,3,1,2,3,1,6,5,4,3,6,2,5,4,1))

      \<less\>(4,5,6,3,1,2,6,4,2,5,3,1,2,3,1,6,5,4,3,6,2,5,4,1)),

      + \ \ \ \ \ \ \ \ obs = c(3.43,5.25,6.47,2.8,NA,2.66,8.43,6.09,6.41,5.69,7.04,NA,6.07

      \<less\>,6.47,2.8,NA,2.66,8.43,6.09,6.41,5.69,7.04,NA,6.07,6.19,4.93,5.95,4.99,3.26,

      \<less\>9,6.41,5.69,7.04,NA,6.07,6.19,4.93,5.95,4.99,3.26,5.22,7.35,4.48,6.34,6.71,3

      \<less\>.19,4.93,5.95,4.99,3.26,5.22,7.35,4.48,6.34,6.71,3.13)

      + \ \ \ )

      \<gtr\>\ 

      \<gtr\> Table5.7treatments \<less\>- length(levels(Table5.7$trt))
    </unfolded-prog-io|>

    <\textput>
      I like to include NA when entering data to be clear that missing values
      are present, but some packages do not handle NA very well, so I also
      subset.\ 
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7 \<less\>- subset(Table5.7, !is.na(Table5.7$obs))
    <|unfolded-prog-io>
      Table5.7 \<less\>- subset(Table5.7, !is.na(Table5.7$obs))
    </unfolded-prog-io|>

    <\textput>
      I will later be extracting parameters based on the number of
      treatments. This removes the need for magic numbers.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7treatments \<less\>- length(levels(Table5.7$trt))
    <|unfolded-prog-io>
      Table5.7treatments \<less\>- length(levels(Table5.7$trt))
    </unfolded-prog-io|>

    <\textput>
      \;
    </textput>

    <\textput>
      <subsection|Series of Similar Experiments>

      If the data are structured, we can save space by creating variables
      programmatically.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1 \<less\>- data.frame(

      Trial=as.factor(c(rep("Clayton", 36),

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("Clinton", 36),

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("Plymouth", 36))),

      Variety=as.factor(rep(

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c(rep("Tracy", 3),
      rep("Centennial", 3),\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N72-137", 3),
      rep("N72-3058", 3),\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N72-3148", 3),
      rep("R73-81", 3),\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("D74-7741", 3),
      rep("N73-693", 3),\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N73-877", 3),
      rep("N73-882", 3),\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N73-1102", 3),
      rep("R75-12", 3)),

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3)),

      Rep=as.factor(rep(c(1, 2, 3),36)),

      Yield=c(1178, 1089, 960, 1187, 1180, 1235, 1451, 1177, 1723, 1318,
      1012, 990,\ 

      \ \ \ \ \ \ \ \ 1345, 1335, 1303, 1175, 1064, 1158, 1111, 1111, 1099,
      1388, 1214, 1222,

      \ \ \ \ \ \ \ \ 1254, 1249, 1135, 1179, 1247, 1096, 1345, 1265, 1178,
      1136, 1161, 1004,

      \ \ \ \ \ \ \ \ 1583, 1841, 1464, 1713, 1684, 1378, 1369, 1608, 1647,
      1547, 1647, 1603,

      \ \ \ \ \ \ \ \ 1622, 1801, 1929, 1800, 1787, 1520, 1820, 1521, 1851,
      1464, 1607, 1642,

      \ \ \ \ \ \ \ \ 1775, 1513, 1570, 1673, 1507, 1390, 1894, 1547, 1751,
      1422, 1393, 1342,

      \ \ \ \ \ \ \ \ 1307, 1365, 1542, 1425, 1475, 1276, 1289, 1671, 1420,
      1250, 1202, 1407,

      \ \ \ \ \ \ \ \ 1546, 1489, 1724, 1344, 1197, 1319, 1280, 1260, 1605,
      1583, 1503, 1303,

      \ \ \ \ \ \ \ \ 1656, 1371, 1107, 1398, 1497, 1583, 1586, 1423, \ 1524,
      911, 1202, 1012 \ \ \ \ \ \ \ \ \ ))

      Ex16.8.1.treatments \<less\>- length(levels(Ex16.8.1$Variety))
    <|unfolded-prog-io>
      Ex16.8.1 \<less\>- data.frame(

      + Trial=as.factor(c(rep("Clayton", 36),

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("Clinton", 36),

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("Plymouth", 36))),

      + Variety=as.factor(rep(

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c(rep("Tracy", 3),
      rep("Centennial", 3),\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N72-137", 3),
      rep("N72-3058", 3),\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N72-3148", 3),
      rep("R73-81", 3),\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("D74-7741", 3),
      rep("N73-693", 3),\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N73-877", 3),
      rep("N73-882", 3),\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rep("N73-1102", 3),
      rep("R75-12", 3)),

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3)),

      + Rep=as.factor(rep(c(1, 2, 3),36)),

      + Yield=c(1178, 1089, 960, 1187, 1180, 1235, 1451, 1177, 1723, 1318,
      1012, 99

      \<less\>1187, 1180, 1235, 1451, 1177, 1723, 1318, 1012, 990,\ 

      + \ \ \ \ \ \ \ \ 1345, 1335, 1303, 1175, 1064, 1158, 1111, 1111, 1099,
      1388, 1214, 1

      \<less\> 1175, 1064, 1158, 1111, 1111, 1099, 1388, 1214, 1222,

      + \ \ \ \ \ \ \ \ 1254, 1249, 1135, 1179, 1247, 1096, 1345, 1265, 1178,
      1136, 1161, 1

      \<less\> 1179, 1247, 1096, 1345, 1265, 1178, 1136, 1161, 1004,

      + \ \ \ \ \ \ \ \ 1583, 1841, 1464, 1713, 1684, 1378, 1369, 1608, 1647,
      1547, 1647, 1

      \<less\> 1713, 1684, 1378, 1369, 1608, 1647, 1547, 1647, 1603,

      + \ \ \ \ \ \ \ \ 1622, 1801, 1929, 1800, 1787, 1520, 1820, 1521, 1851,
      1464, 1607, 1

      \<less\> 1800, 1787, 1520, 1820, 1521, 1851, 1464, 1607, 1642,

      + \ \ \ \ \ \ \ \ 1775, 1513, 1570, 1673, 1507, 1390, 1894, 1547, 1751,
      1422, 1393, 1

      \<less\> 1673, 1507, 1390, 1894, 1547, 1751, 1422, 1393, 1342,

      + \ \ \ \ \ \ \ \ 1307, 1365, 1542, 1425, 1475, 1276, 1289, 1671, 1420,
      1250, 1202, 1

      \<less\> 1425, 1475, 1276, 1289, 1671, 1420, 1250, 1202, 1407,

      + \ \ \ \ \ \ \ \ 1546, 1489, 1724, 1344, 1197, 1319, 1280, 1260, 1605,
      1583, 1503, 1

      \<less\> 1344, 1197, 1319, 1280, 1260, 1605, 1583, 1503, 1303,

      + \ \ \ \ \ \ \ \ 1656, 1371, 1107, 1398, 1497, 1583, 1586, 1423,
      \ 1524, 911, 1202, 1

      \<less\> 1398, 1497, 1583, 1586, 1423, \ 1524, 911, 1202, 1012
      \ \ \ \ \ \ \ \ \ ))

      \<gtr\> Ex16.8.1.treatments \<less\>- length(levels(Ex16.8.1$Variety))
    </unfolded-prog-io|>

    <\textput>
      <subsection|Sample RCBD Data>
    </textput>

    \;

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      setwd("~/Work/git/ASA_CSSA_SSSA/literate")

      rcbd.dat \<less\>- read.csv("sample RCBD data.csv",header=TRUE)

      setwd("~/Work/git/ASA_CSSA_SSSA/working")
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 
    <|unfolded-prog-io>
      setwd("~/Work/git/ASA_CSSA_SSSA/literate")

      \<gtr\> rcbd.dat \<less\>- read.csv("sample RCBD data.csv",header=TRUE)

      \<gtr\> setwd("~/Work/git/ASA_CSSA_SSSA/working")
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      head(rcbd.dat)
    <|unfolded-prog-io>
      head(rcbd.dat)

      \ \ Site Country \ \ \ \ Loca Plot Repe BLK Entry \ YLD AD SD \ PH \ EH
      rEPH rEPP nP

      1 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 1 \ \ \ 1 \ \ 1 \ \ \ 21 7.00 54 55
      280 150 0.54 \ 0.9 58

      2 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 2 \ \ \ 1 \ \ 1 \ \ \ 22 8.39 51 52
      270 140 0.52 \ \ \ 1 58

      3 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 3 \ \ \ 1 \ \ 1 \ \ \ 32 6.85 52 53
      265 140 0.53 \ 0.9 54

      4 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 4 \ \ \ 1 \ \ 1 \ \ \ 11 8.09 53 54
      275 140 0.51 \ \ \ 1 53

      5 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 5 \ \ \ 1 \ \ 2 \ \ \ \ 4 6.86 51 52
      260 125 0.48 \ 0.9 58

      6 \ \ \ 3 \ Mexico Cotaxtla \ \ \ 6 \ \ \ 1 \ \ 2 \ \ \ 29 6.45 51 52
      275 130 0.47 \ 0.9 57
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      rcbd.dat$Repe \<less\>- as.factor(rcbd.dat$Repe)

      rcbd.dat$BLK \<less\>- as.factor(rcbd.dat$BLK)

      rcbd.dat$Entry \<less\>- as.factor(rcbd.dat$Entry)
    <|unfolded-prog-io>
      rcbd.dat$Repe \<less\>- as.factor(rcbd.dat$Repe)

      \<gtr\> rcbd.dat$BLK \<less\>- as.factor(rcbd.dat$BLK)

      \<gtr\> rcbd.dat$Entry \<less\>- as.factor(rcbd.dat$Entry)
    </unfolded-prog-io|>

    <\textput>
      <section|Model Fitting>

      Traditionally, MET have been analyzed using analysis of variance based
      on ordinary least methods. Briefly, we define the linear system of
      equations

      <\equation*>
        <tabular|<tformat|<table|<row|<cell|\<b-up-y\>>|<cell|=>|<cell|\<b-up-X\>\<b-beta\>
        \<noplus\>+\<b-up-e\>>>>>>
      </equation*>

      where <math|\<b-up-X\>> defines the design of the experiment,
      <math|\<b-up-y\>> are observed values and <math|\<b-beta\>> are
      parameters of interest (i.e. variety means). Estimates are found by

      <\equation*>
        <wide|\<b-beta\>|^>=<around*|(|\<b-up-X\><rsup|t>\<b-up-X\>|)><rsup|-1>\<b-up-X\><rsup|t>\<b-up-y\>
      </equation*>

      minimizing

      <\equation*>
        \<Sigma\>\<b-up-e\><rsub|i><rsup|2>=\<b-up-e\><rsup|t>\<b-up-e\>=<around*|(|\<b-up-y\>-\<b-up-X\>\<b-beta\>|)><rsup|t><around*|(|\<b-up-y\>-\<b-up-X\>\<b-beta\>|)>
      </equation*>

      \;

      We use <verbatim|lm> to fit a model using OLS. For simple models, I
      like to remove the intercept. This won't always work particularly for
      models with interaction.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.lm \<less\>- lm(obs ~ 0 + trt+rep, data = Table5.7)
    <|unfolded-prog-io>
      Table5.7.lm \<less\>- lm(obs ~ 0 + trt+rep, data = Table5.7)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.lm \<less\>- lm(Yield ~ Trial:Rep + Variety*Trial,
      data=Ex16.8.1)
    <|unfolded-prog-io>
      Ex16.8.1.lm \<less\>- lm(Yield ~ Trial:Rep + Variety*Trial,
      data=Ex16.8.1)
    </unfolded-prog-io|>

    Once we've created a solution instance, we should be able to select from
    a diverse set of generic functions.

    <\textput>
      <section|<paragraph|Diagnostics>>

      There many diagnostic tests, but the most general are residual and QQ
      plots.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      par(mfrow = c(2, 2))\ 

      plot(Table5.7.lm)

      par(mfrow = c(1,1));v()
    <|unfolded-prog-io>
      par(mfrow = c(2, 2))\ 

      \<gtr\> plot(Table5.7.lm)

      \<gtr\> par(mfrow = c(1,1));v()

      <image|<tuple||ps>|0.8par|||>
      </unfolded-prog-io|>

    <\textput>
      <section|Model Building>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.lm \<less\>- update(Table5.7.lm, . ~ . - trt)

      #Ex16.8.1.red.lm \<less\>- update(Ex16.8.1.lm, . ~ . - Variety:Trial)
    <|unfolded-prog-io>
      Table5.7.red.lm \<less\>- update(Table5.7.lm, . ~ . - trt)

      \<gtr\> #Ex16.8.1.red.lm \<less\>- update(Ex16.8.1.lm, . ~ . -
      Variety:Trial)
    </unfolded-prog-io|>

    <\textput>
      <section|Summary Statistics>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.lm)

      \;

      #summary(Ex16.8.1.lm)

      #anova(Ex16.8.1.lm)

      #anova(Ex16.8.1.red.lm,Ex16.8.1.lm)

      #vcov(Ex16.8.1.lm)
    <|unfolded-prog-io>
      summary(Table5.7.lm)

      \;

      Call:

      lm(formula = obs ~ 0 + trt + rep, data = Table5.7)

      \;

      Residuals:

      \ \ \ \ \ Min \ \ \ \ \ \ 1Q \ \ Median \ \ \ \ \ \ 3Q \ \ \ \ \ Max\ 

      -1.57367 -0.79233 \ 0.02958 \ 0.76387 \ 1.56967\ 

      \;

      Coefficients:

      \ \ \ \ \ Estimate Std. Error t value Pr(\<gtr\>\|t\|) \ \ \ 

      trt1 \ \ 2.4960 \ \ \ \ 1.0255 \ \ 2.434 0.030112 * \ 

      trt2 \ \ 3.4855 \ \ \ \ 0.7252 \ \ 4.807 0.000343 ***

      trt3 \ \ 3.8930 \ \ \ \ 0.7252 \ \ 5.368 0.000128 ***

      trt4 \ \ 3.4530 \ \ \ \ 0.7252 \ \ 4.762 0.000372 ***

      trt5 \ \ 4.1480 \ \ \ \ 0.7252 \ \ 5.720 7.05e-05 ***

      trt6 \ \ 5.6305 \ \ \ \ 0.7252 \ \ 7.764 3.10e-06 ***

      rep2 \ \ 2.6100 \ \ \ \ 0.7252 \ \ 3.599 0.003237 **\ 

      rep3 \ \ 1.3807 \ \ \ \ 0.7099 \ \ 1.945 0.073742 . \ 

      rep4 \ \ 1.6873 \ \ \ \ 0.7099 \ \ 2.377 0.033502 * \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \;

      Residual standard error: 1.147 on 13 degrees of freedom

      Multiple R-squared: \ 0.9754, \ \ \ Adjusted R-squared: \ 0.9583\ 

      F-statistic: 57.21 on 9 and 13 DF, \ p-value: 5.409e-09

      \;

      \<gtr\>\ 

      \<gtr\> #summary(Ex16.8.1.lm)

      \<gtr\> #anova(Ex16.8.1.lm)

      \<gtr\> #anova(Ex16.8.1.red.lm,Ex16.8.1.lm)

      \<gtr\> #vcov(Ex16.8.1.lm)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      anova(Table5.7.lm)

      anova(Table5.7.red.lm,Table5.7.lm)
    <|unfolded-prog-io>
      anova(Table5.7.lm)

      Analysis of Variance Table

      \;

      Response: obs

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ \ Pr(\<gtr\>F) \ \ \ 

      trt \ \ \ \ \ \ \ 6 659.37 109.895 83.5934 1.26e-09 ***

      rep \ \ \ \ \ \ \ 3 \ 17.57 \ \ 5.858 \ 4.4561 \ 0.02316 * \ 

      Residuals 13 \ 17.09 \ \ 1.315 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \<gtr\> anova(Table5.7.red.lm,Table5.7.lm)

      Analysis of Variance Table

      \;

      Model 1: obs ~ rep - 1

      Model 2: obs ~ 0 + trt + rep

      \ \ Res.Df \ \ \ RSS Df Sum of Sq \ \ \ \ \ F \ Pr(\<gtr\>F) \ 

      1 \ \ \ \ 18 34.222 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      2 \ \ \ \ 13 17.090 \ 5 \ \ \ 17.132 2.6063 0.07619 .

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      vcov(Table5.7.lm)
    <|unfolded-prog-io>
      vcov(Table5.7.lm)

      \ \ \ \ \ \ \ \ \ \ \ trt1 \ \ \ \ \ \ trt2 \ \ \ \ \ \ trt3
      \ \ \ \ \ \ trt4 \ \ \ \ \ \ trt5 \ \ \ \ \ \ trt6

      trt1 \ 1.0517130 \ 0.2629283 \ 0.2629283 \ 0.2629283 \ 0.2629283
      \ 0.2629283

      trt2 \ 0.2629283 \ 0.5258565 \ 0.1971962 \ 0.1971962 \ 0.1971962
      \ 0.1971962

      trt3 \ 0.2629283 \ 0.1971962 \ 0.5258565 \ 0.1971962 \ 0.1971962
      \ 0.1971962

      trt4 \ 0.2629283 \ 0.1971962 \ 0.1971962 \ 0.5258565 \ 0.1971962
      \ 0.1971962

      trt5 \ 0.2629283 \ 0.1971962 \ 0.1971962 \ 0.1971962 \ 0.5258565
      \ 0.1971962

      trt6 \ 0.2629283 \ 0.1971962 \ 0.1971962 \ 0.1971962 \ 0.1971962
      \ 0.5258565

      rep2 -0.2629283 -0.2629283 -0.2629283 -0.2629283 -0.2629283 -0.2629283

      rep3 -0.3943924 -0.2629283 -0.2629283 -0.2629283 -0.2629283 -0.2629283

      rep4 -0.3943924 -0.2629283 -0.2629283 -0.2629283 -0.2629283 -0.2629283

      \ \ \ \ \ \ \ \ \ \ \ rep2 \ \ \ \ \ \ rep3 \ \ \ \ \ \ rep4

      trt1 -0.2629283 -0.3943924 -0.3943924

      trt2 -0.2629283 -0.2629283 -0.2629283

      trt3 -0.2629283 -0.2629283 -0.2629283

      trt4 -0.2629283 -0.2629283 -0.2629283

      trt5 -0.2629283 -0.2629283 -0.2629283

      trt6 -0.2629283 -0.2629283 -0.2629283

      rep2 \ 0.5258565 \ 0.2629283 \ 0.2629283

      rep3 \ 0.2629283 \ 0.5039458 \ 0.2848389

      rep4 \ 0.2629283 \ 0.2848389 \ 0.5039458
    </unfolded-prog-io|>

    <\textput>
      <section|Hypothesis Testing>

      With missing values, we need to consider if treatments appear the same
      number of times per replicate; this affects standard errors.

      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(multcomp)

      summary(glht(Table5.7.lm,linfct=mcp(trt="Dunnett"))) \ \ \ \ \ \ \ 
    <|unfolded-prog-io>
      library(multcomp)

      Loading required package: mvtnorm

      Loading required package: survival

      Loading required package: TH.data

      Loading required package: MASS

      \;

      Attaching package: 'TH.data'

      \;

      The following object is masked from 'package:MASS':

      \;

      \ \ \ \ geyser

      \;

      \<gtr\> summary(glht(Table5.7.lm,linfct=mcp(trt="Dunnett")))
      \ \ \ \ \ \ \ 

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: lm(formula = obs ~ 0 + trt + rep, data = Table5.7)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value Pr(\<gtr\>\|t\|) \ 

      2 - 1 == 0 \ \ 0.9895 \ \ \ \ 1.0255 \ \ 0.965 \ \ 0.7220 \ 

      3 - 1 == 0 \ \ 1.3970 \ \ \ \ 1.0255 \ \ 1.362 \ \ 0.4642 \ 

      4 - 1 == 0 \ \ 0.9570 \ \ \ \ 1.0255 \ \ 0.933 \ \ 0.7432 \ 

      5 - 1 == 0 \ \ 1.6520 \ \ \ \ 1.0255 \ \ 1.611 \ \ 0.3318 \ 

      6 - 1 == 0 \ \ 3.1345 \ \ \ \ 1.0255 \ \ 3.056 \ \ 0.0298 *

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(glht(Table5.7.lm,linfct=mcp(trt="Tukey")))
    <|unfolded-prog-io>
      summary(glht(Table5.7.lm,linfct=mcp(trt="Tukey")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Tukey Contrasts

      \;

      \;

      Fit: lm(formula = obs ~ 0 + trt + rep, data = Table5.7)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value Pr(\<gtr\>\|t\|) \ 

      2 - 1 == 0 \ \ 0.9895 \ \ \ \ 1.0255 \ \ 0.965 \ \ \ 0.920 \ 

      3 - 1 == 0 \ \ 1.3970 \ \ \ \ 1.0255 \ \ 1.362 \ \ \ 0.745 \ 

      4 - 1 == 0 \ \ 0.9570 \ \ \ \ 1.0255 \ \ 0.933 \ \ \ 0.930 \ 

      5 - 1 == 0 \ \ 1.6520 \ \ \ \ 1.0255 \ \ 1.611 \ \ \ 0.603 \ 

      6 - 1 == 0 \ \ 3.1345 \ \ \ \ 1.0255 \ \ 3.056 \ \ \ 0.077 .

      3 - 2 == 0 \ \ 0.4075 \ \ \ \ 0.8107 \ \ 0.503 \ \ \ 0.995 \ 

      4 - 2 == 0 \ -0.0325 \ \ \ \ 0.8107 \ -0.040 \ \ \ 1.000 \ 

      5 - 2 == 0 \ \ 0.6625 \ \ \ \ 0.8107 \ \ 0.817 \ \ \ 0.958 \ 

      6 - 2 == 0 \ \ 2.1450 \ \ \ \ 0.8107 \ \ 2.646 \ \ \ 0.152 \ 

      4 - 3 == 0 \ -0.4400 \ \ \ \ 0.8107 \ -0.543 \ \ \ 0.993 \ 

      5 - 3 == 0 \ \ 0.2550 \ \ \ \ 0.8107 \ \ 0.315 \ \ \ 0.999 \ 

      6 - 3 == 0 \ \ 1.7375 \ \ \ \ 0.8107 \ \ 2.143 \ \ \ 0.322 \ 

      5 - 4 == 0 \ \ 0.6950 \ \ \ \ 0.8107 \ \ 0.857 \ \ \ 0.950 \ 

      6 - 4 == 0 \ \ 2.1775 \ \ \ \ 0.8107 \ \ 2.686 \ \ \ 0.143 \ 

      6 - 5 == 0 \ \ 1.4825 \ \ \ \ 0.8107 \ \ 1.829 \ \ \ 0.479 \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      cld(glht(Table5.7.lm,linfct=mcp(trt="Tukey")),decreasing=TRUE)
    <|unfolded-prog-io>
      cld(glht(Table5.7.lm,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ 1 \ \ 2 \ \ 3 \ \ 4 \ \ 5 \ \ 6\ 

      "a" "a" "a" "a" "a" "a"\ 
    </unfolded-prog-io|>

    <\textput>
      \;
    </textput>

    <section|Presentation>

    \;

    We note that lsmeans and glht are not strictly compatible, even though
    the terminology is the same

    \;

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(lsmeans)

      lsmeans(Table5.7.lm,cld ~ trt)

      #lsmeans(Table5.7.lm,pairwise ~ trt)
    <|unfolded-prog-io>
      library(lsmeans)

      Loading required package: estimability

      \<gtr\> lsmeans(Table5.7.lm,cld ~ trt)

      \ trt lsmean \ \ \ \ \ \ \ SE df lower.CL upper.CL .group

      \ 1 \ \ 3.9155 0.8503251 13 2.078484 5.752516 \ 1 \ \ \ 

      \ 4 \ \ 4.8725 0.5732890 13 3.633984 6.111016 \ 1 \ \ \ 

      \ 2 \ \ 4.9050 0.5732890 13 3.666484 6.143516 \ 1 \ \ \ 

      \ 3 \ \ 5.3125 0.5732890 13 4.073984 6.551016 \ 1 \ \ \ 

      \ 5 \ \ 5.5675 0.5732890 13 4.328984 6.806016 \ 1 \ \ \ 

      \ 6 \ \ 7.0500 0.5732890 13 5.811484 8.288516 \ 1 \ \ \ 

      \;

      Results are averaged over the levels of: rep\ 

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 

      \<gtr\> #lsmeans(Table5.7.lm,pairwise ~ trt)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(ggplot2)
    <|unfolded-prog-io>
      library(ggplot2)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      cbPalette \<less\>- c("#999999", "#E69F00", "#56B4E9", "#009E73",
      "#0072B2",

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#D55E00", "#F0E442", "#CC79A7",
      "#734f80", "#2b5a74",\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#004f39", "#787221", "#003959",
      "#6aaf00", "#663cd3",

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#000000")
    <|unfolded-prog-io>
      cbPalette \<less\>- c("#999999", "#E69F00", "#56B4E9", "#009E73",
      "#0072B2",

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#D55E00", "#F0E442", "#CC79A7",
      "#734f80", "#2b5a74",\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#004f39", "#787221", "#003959",
      "#6aaf00", "#663cd3",

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "#000000")
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      make.plot.table \<less\>- function(model,form=NULL,effect=NULL) {

      \ \ \ if(is.null(effect)) {

      \ \ \ \ \ \ effect \<less\>- "trt"

      \ \ \ }

      \ \ \ if(is.null(form)) {

      \ \ \ \ \ \ form \<less\>- formula(paste("cld ~ ",effect))

      \ \ \ }

      \ \ \ model.tbl \<less\>- lsmeans(model,form)

      \ \ \ mcp.list \<less\>- list(effect="Tukey")

      \ \ \ names(mcp.list) \<less\>- effect

      \ \ \ attr(mcp.list, "interaction_average") \<less\>- TRUE

      \ \ \ attr(mcp.list, "covariate_average") \<less\>- TRUE

      \ \ \ class(mcp.list) \<less\>- "mcp"

      \ \ \ letters \<less\>- cld(glht(model,linfct=mcp.list,interaction_average
      = TRUE,\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ covariate_average
      = TRUE),

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ decreasing=TRUE)$mcletters$Letters

      \ \ \ model.tbl$letters \<less\>- letters[model.tbl[,effect]]

      \ \ \ names(model.tbl) \<less\>- c("Treatment","Mean","Error","df","Lower","Upper","Group","Letters")

      \ \ \ return(model.tbl)

      }
    <|unfolded-prog-io>
      make.plot.table \<less\>- function(model,form=NULL,effect=NULL) {

      + \ \ \ if(is.null(effect)) {

      + \ \ \ \ \ \ effect \<less\>- "trt"

      + \ \ \ }

      + \ \ \ if(is.null(form)) {

      + \ \ \ \ \ \ form \<less\>- formula(paste("cld ~ ",effect))

      + \ \ \ }

      + \ \ \ model.tbl \<less\>- lsmeans(model,form)

      + \ \ \ mcp.list \<less\>- list(effect="Tukey")

      + \ \ \ names(mcp.list) \<less\>- effect

      + \ \ \ attr(mcp.list, "interaction_average") \<less\>- TRUE

      + \ \ \ attr(mcp.list, "covariate_average") \<less\>- TRUE

      + \ \ \ class(mcp.list) \<less\>- "mcp"

      + \ \ \ letters \<less\>- cld(glht(model,linfct=mcp.list,interaction_average
      = TRUE,\ 

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ covariate_average
      = TRUE),

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ decreasing=TRUE)$mcletters$Letters

      + \ \ \ model.tbl$letters \<less\>- letters[model.tbl[,effect]]

      + \ \ \ names(model.tbl) \<less\>- c("Treatment","Mean","Error","df","Lower","Upper","G

      \<less\>"Treatment","Mean","Error","df","Lower","Upper","Group","Letters")

      + \ \ \ return(model.tbl)

      + }
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot.lsmeans.tbl \<less\>- function(model.tbl,formula=NULL,title="lm")
      {

      \ \ \ dodge \<less\>- position_dodge(width = 0.9)

      \ \ \ upper.lim \<less\>- max(model.tbl$Upper)

      \ \ \ upper.lim \<less\>- \ upper.lim + 0.1*upper.lim\ 

      \ \ \ limits \<less\>- aes(ymax = model.tbl$Upper, ymin =
      model.tbl$Lower)

      \ \ \ return(ggplot(data = model.tbl, aes(x = Treatment, y = Mean, fill
      = Treatment)) +\ 

      \ \ \ \ \ geom_bar(stat = "identity", position = dodge) +

      \ \ \ \ \ coord_cartesian(ylim = c(min(model.tbl$Lower),upper.lim)) +

      \ \ \ \ \ geom_errorbar(limits, position = dodge, width = 0.25) +

      \ \ \ \ \ theme(legend.position = "none") + ggtitle(title) +\ 

      \ \ \ \ \ scale_fill_manual(values=cbPalette) +

      \ \ \ \ \ geom_text(aes(x=model.tbl$Treatment,y=upper.lim,label=Letters))

      \ \ \ )

      }
    <|unfolded-prog-io>
      plot.lsmeans.tbl \<less\>- function(model.tbl,formula=NULL,title="lm")
      {

      + \ \ \ dodge \<less\>- position_dodge(width = 0.9)

      + \ \ \ upper.lim \<less\>- max(model.tbl$Upper)

      + \ \ \ upper.lim \<less\>- \ upper.lim + 0.1*upper.lim\ 

      + \ \ \ limits \<less\>- aes(ymax = model.tbl$Upper, ymin =
      model.tbl$Lower)

      + \ \ \ return(ggplot(data = model.tbl, aes(x = Treatment, y = Mean,
      fill = Trea

      \<less\>odel.tbl, aes(x = Treatment, y = Mean, fill = Treatment)) +\ 

      + \ \ \ \ \ geom_bar(stat = "identity", position = dodge) +

      + \ \ \ \ \ coord_cartesian(ylim = c(min(model.tbl$Lower),upper.lim)) +

      + \ \ \ \ \ geom_errorbar(limits, position = dodge, width = 0.25) +

      + \ \ \ \ \ theme(legend.position = "none") + ggtitle(title) +\ 

      + \ \ \ \ \ scale_fill_manual(values=cbPalette) +

      + \ \ \ \ \ geom_text(aes(x=model.tbl$Treatment,y=upper.lim,label=Letters))

      + \ \ \ )

      + }
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot.lsmeans \<less\>- function(model,form=NULL,effect=NULL,title="lm")
      {

      \ \ \ return(

      \ \ \ \ \ \ plot.lsmeans.tbl(

      \ \ \ \ \ \ \ \ \ make.plot.table(model,form=form,effect=effect),formula=formula,title=title))

      }
    <|unfolded-prog-io>
      plot.lsmeans \<less\>- function(model,form=NULL,effect=NULL,title="lm")
      {

      + \ \ \ return(

      + \ \ \ \ \ \ plot.lsmeans.tbl(

      + \ \ \ \ \ \ \ \ \ make.plot.table(model,form=form,effect=effect),formula=formula,tit

      \<less\>model,form=form,effect=effect),formula=formula,title=title))

      + }
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.lm.tbl \<less\>- make.plot.table(Table5.7.lm)

      Table5.7.lm.plot \<less\>- plot.lsmeans.tbl(Table5.7.lm.tbl)

      Table5.7.lm.plot;v()
    <|unfolded-prog-io>
      Table5.7.lm.tbl \<less\>- make.plot.table(Table5.7.lm)

      \<gtr\> Table5.7.lm.plot \<less\>- plot.lsmeans.tbl(Table5.7.lm.tbl)

      \<gtr\> Table5.7.lm.plot;v()

      <image|<tuple|<#252150532D41646F62652D332E3020455053462D332E300A2525446F63756D656E744E65656465645265736F75726365733A20666F6E742048656C7665746963610A25252B20666F6E742048656C7665746963612D426F6C640A25252B20666F6E742048656C7665746963612D4F626C697175650A25252B20666F6E742048656C7665746963612D426F6C644F626C697175650A25252B20666F6E742053796D626F6C0A25255469746C653A2052204772617068696373204F75747075740A252543726561746F723A205220536F6674776172650A252550616765733A20286174656E64290A2525426F756E64696E67426F783A2030203020323838203238380A2525456E64436F6D6D656E74730A2525426567696E50726F6C6F670A2F627020207B2067732073524742206773207D206465660A2520626567696E202E70732E70726F6C6F670A2F677320207B206773617665207D2062696E64206465660A2F677220207B2067726573746F7265207D2062696E64206465660A2F657020207B2073686F7770616765206772206772207D2062696E64206465660A2F6D2020207B206D6F7665746F207D2062696E64206465660A2F6C20207B20726C696E65746F207D2062696E64206465660A2F6E7020207B206E657770617468207D2062696E64206465660A2F637020207B20636C6F736570617468207D2062696E64206465660A2F662020207B2066696C6C207D2062696E64206465660A2F6F2020207B207374726F6B65207D2062696E64206465660A2F632020207B206E65777061746820302033363020617263207D2062696E64206465660A2F722020207B2034203220726F6C6C206D6F7665746F203120636F70792033202D3120726F6C6C20657863682030206578636820726C696E65746F203020726C696E65746F202D31206D756C2030206578636820726C696E65746F20636C6F736570617468207D2062696E64206465660A2F703120207B207374726F6B65207D2062696E64206465660A2F703220207B2067736176652062672066696C6C2067726573746F7265206E657770617468207D2062696E64206465660A2F703320207B2067736176652062672066696C6C2067726573746F7265207374726F6B65207D2062696E64206465660A2F703620207B20677361766520626720656F66696C6C2067726573746F7265206E657770617468207D2062696E64206465660A2F703720207B20677361766520626720656F66696C6C2067726573746F7265207374726F6B65207D2062696E64206465660A2F742020207B2035202D3220726F6C6C206D6F7665746F20677361766520726F746174650A202020202020203120696E64657820737472696E67776964746820706F700A202020202020206D756C206E6567203020726D6F7665746F2073686F772067726573746F7265207D2062696E64206465660A2F746120207B2034202D3220726F6C6C206D6F7665746F20677361766520726F746174652073686F77207D2062696E64206465660A2F746220207B2032202D3120726F6C6C203020726D6F7665746F2073686F77207D2062696E64206465660A2F636C20207B2067726573746F7265206773617665206E657770617468203320696E646578203320696E646578206D6F7665746F203120696E6465780A2020202020202034202D3120726F6C6C206C696E65746F202065786368203120696E646578206C696E65746F206C696E65746F0A20202020202020636C6F73657061746820636C6970206E657770617468207D2062696E64206465660A2F726762207B20736574726762636F6C6F72207D2062696E64206465660A2F732020207B207363616C65666F6E7420736574666F6E74207D2062696E64206465660A2520656E642020202E70732E70726F6C6F670A2F73524742207B205B202F43494542617365644142430A202020202020202020203C3C202F4465636F64654C4D4E0A2020202020202020202020202020205B207B2064757020302E3033393238206C650A2020202020202020202020202020202020202020202020207B31322E3932333231206469767D0A2020202020202020202020202020202020202020202020207B302E3035352061646420312E3035352064697620322E3420657870207D0A2020202020202020202020202020202020202020206966656C73650A20202020202020202020202020202020207D2062696E6420647570206475700A2020202020202020202020202020205D0A202020202020202020202020202F4D61747269784C4D4E205B302E34313234353720302E32313236373320302E3031393333340A20202020202020202020202020202020202020202020202020302E33353735373620302E37313531353220302E3131393139320A20202020202020202020202020202020202020202020202020302E31383034333720302E30373231373520302E3935303330315D0A202020202020202020202020202F5768697465506F696E74205B302E3935303520312E3020312E303839305D0A20202020202020202020203E3E0A2020202020202020205D20736574636F6C6F727370616365207D2062696E64206465660A2F73726762207B20736574636F6C6F72207D2062696E64206465660A2525496E636C7564655265736F757263653A20666F6E742048656C7665746963610A2F48656C7665746963612066696E64666F6E740A647570206C656E677468206469637420626567696E0A20207B3120696E646578202F464944206E65207B6465667D207B706F7020706F707D206966656C73657D20666F72616C6C0A20202F456E636F64696E672049534F4C6174696E31456E636F64696E67206465660A202063757272656E74646963740A2020656E640A2F466F6E7431206578636820646566696E65666F6E7420706F700A2525496E636C7564655265736F757263653A20666F6E742048656C7665746963612D426F6C640A2F48656C7665746963612D426F6C642066696E64666F6E740A647570206C656E677468206469637420626567696E0A20207B3120696E646578202F464944206E65207B6465667D207B706F7020706F707D206966656C73657D20666F72616C6C0A20202F456E636F64696E672049534F4C6174696E31456E636F64696E67206465660A202063757272656E74646963740A2020656E640A2F466F6E7432206578636820646566696E65666F6E7420706F700A2525496E636C7564655265736F757263653A20666F6E742048656C7665746963612D4F626C697175650A2F48656C7665746963612D4F626C697175652066696E64666F6E740A647570206C656E677468206469637420626567696E0A20207B3120696E646578202F464944206E65207B6465667D207B706F7020706F707D206966656C73657D20666F72616C6C0A20202F456E636F64696E672049534F4C6174696E31456E636F64696E67206465660A202063757272656E74646963740A2020656E640A2F466F6E7433206578636820646566696E65666F6E7420706F700A2525496E636C7564655265736F757263653A20666F6E742048656C7665746963612D426F6C644F626C697175650A2F48656C7665746963612D426F6C644F626C697175652066696E64666F6E740A647570206C656E677468206469637420626567696E0A20207B3120696E646578202F464944206E65207B6465667D207B706F7020706F707D206966656C73657D20666F72616C6C0A20202F456E636F64696E672049534F4C6174696E31456E636F64696E67206465660A202063757272656E74646963740A2020656E640A2F466F6E7434206578636820646566696E65666F6E7420706F700A2525496E636C7564655265736F757263653A20666F6E742053796D626F6C0A2F53796D626F6C2066696E64666F6E740A647570206C656E677468206469637420626567696E0A20207B3120696E646578202F464944206E65207B6465667D207B706F7020706F707D206966656C73657D20666F72616C6C0A202063757272656E74646963740A2020656E640A2F466F6E7435206578636820646566696E65666F6E7420706F700A2525456E6450726F6C6F670A2525506167653A203120310A62700A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F6267207B2031203120312073726762207D206465660A312031203120737267620A312E3037207365746C696E6577696474680A5B5D203020736574646173680A31207365746C696E656361700A31207365746C696E656A6F696E0A31302E3030207365746D697465726C696D69740A302E303020302E3030203238382E3030203238382E303020722070330A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A32392E38392033312E3335203238322E3532203236362E363120636C0A2F6267207B20302E3932313620302E3932313620302E393231362073726762207D206465660A32392E38392033312E3335203235322E3633203233352E323620722070320A312031203120737267620A302E3533207365746C696E6577696474680A5B5D203020736574646173680A30207365746C696E656361700A31207365746C696E656A6F696E0A31302E3030207365746D697465726C696D69740A6E700A32392E38392037302E3034206D0A3235322E36332030206C0A6F0A6E700A32392E3839203133302E3831206D0A3235322E36332030206C0A6F0A6E700A32392E3839203139312E3538206D0A3235322E36332030206C0A6F0A6E700A32392E3839203235322E3335206D0A3235322E36332030206C0A6F0A312E3037207365746C696E6577696474680A5B5D203020736574646173680A6E700A32392E38392033392E3636206D0A3235322E36332030206C0A6F0A6E700A32392E3839203130302E3433206D0A3235322E36332030206C0A6F0A6E700A32392E3839203136312E3230206D0A3235322E36332030206C0A6F0A6E700A32392E3839203232312E3937206D0A3235322E36332030206C0A6F0A6E700A35342E33342033312E3335206D0A30203233352E3236206C0A6F0A6E700A39352E30382033312E3335206D0A30203233352E3236206C0A6F0A6E700A3133352E38332033312E3335206D0A30203233352E3236206C0A6F0A6E700A3137362E35382033312E3335206D0A30203233352E3236206C0A6F0A6E700A3231372E33332033312E3335206D0A30203233352E3236206C0A6F0A6E700A3235382E30372033312E3335206D0A30203233352E3236206C0A6F0A2F6267207B20302E3630303020302E3630303020302E363030302073726762207D206465660A33362E3030202D32312E31312033362E3637203131382E393720722070320A2F6267207B20302E3930323020302E3632333520302073726762207D206465660A37362E3735202D32312E31312033362E3637203134392E303420722070320A2F6267207B20302E3333373320302E3730353920302E393133372073726762207D206465660A3131372E3439202D32312E31312033362E3637203136312E343220722070320A2F6267207B203020302E3631393620302E343531302073726762207D206465660A3135382E3234202D32312E31312033362E3637203134382E303520722070320A2F6267207B203020302E3434373120302E363938302073726762207D206465660A3139382E3939202D32312E31312033362E3637203136392E313720722070320A2F6267207B20302E3833353320302E3336383620302073726762207D206465660A3233392E3734202D32312E31312033362E3637203231342E323120722070320A302030203020737267620A312E3030207365746D697465726C696D69740A6E700A34392E3234203135332E3638206D0A31302E31392030206C0A6F0A6E700A35342E3334203135332E3638206D0A30202D3131312E3634206C0A6F0A6E700A34392E32342034322E3034206D0A31302E31392030206C0A6F0A6E700A38392E3939203136352E3536206D0A31302E31392030206C0A6F0A6E700A39352E3038203136352E3536206D0A30202D37352E3237206C0A6F0A6E700A38392E39392039302E3239206D0A31302E31392030206C0A6F0A6E700A3133302E3734203137372E3934206D0A31302E31382030206C0A6F0A6E700A3133352E3833203137372E3934206D0A30202D37352E3237206C0A6F0A6E700A3133302E3734203130322E3637206D0A31302E31382030206C0A6F0A6E700A3137312E3438203136342E3537206D0A31302E31392030206C0A6F0A6E700A3137362E3538203136342E3537206D0A30202D37352E3237206C0A6F0A6E700A3137312E34382038392E3330206D0A31302E31392030206C0A6F0A6E700A3231322E3233203138352E3639206D0A31302E31392030206C0A6F0A6E700A3231372E3333203138352E3639206D0A30202D37352E3237206C0A6F0A6E700A3231322E3233203131302E3432206D0A31302E31392030206C0A6F0A6E700A3235322E3938203233302E3733206D0A31302E31392030206C0A6F0A6E700A3235382E3037203233302E3733206D0A30202D37352E3236206C0A6F0A6E700A3235322E3938203135352E3437206D0A31302E31392030206C0A6F0A2F466F6E74312066696E64666F6E7420313120730A35342E3334203235312E393720286129202E35203020740A3137362E3538203235312E393720286129202E35203020740A39352E3038203235312E393720286129202E35203020740A3133352E3833203235312E393720286129202E35203020740A3231372E3333203235312E393720286129202E35203020740A3235382E3037203235312E393720286129202E35203020740A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F466F6E74312066696E64666F6E74203920730A302E3330323020302E3330323020302E3330323020737267620A32342E39362033362E3432202832292031203020740A32342E39362039372E3139202834292031203020740A32342E3936203135372E3936202836292031203020740A32342E3936203231382E3734202838292031203020740A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E3230303020302E3230303020302E3230303020737267620A312E3037207365746C696E6577696474680A5B5D203020736574646173680A30207365746C696E656361700A31207365746C696E656A6F696E0A31302E3030207365746D697465726C696D69740A6E700A32372E31352033392E3636206D0A322E37342030206C0A6F0A6E700A32372E3135203130302E3433206D0A322E37342030206C0A6F0A6E700A32372E3135203136312E3230206D0A322E37342030206C0A6F0A6E700A32372E3135203232312E3937206D0A322E37342030206C0A6F0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E3230303020302E3230303020302E3230303020737267620A312E3037207365746C696E6577696474680A5B5D203020736574646173680A30207365746C696E656361700A31207365746C696E656A6F696E0A31302E3030207365746D697465726C696D69740A6E700A35342E33342032382E3631206D0A3020322E3734206C0A6F0A6E700A39352E30382032382E3631206D0A3020322E3734206C0A6F0A6E700A3133352E38332032382E3631206D0A3020322E3734206C0A6F0A6E700A3137362E35382032382E3631206D0A0A3020322E3734206C0A6F0A6E700A3231372E33332032382E3631206D0A3020322E3734206C0A6F0A6E700A3235382E30372032382E3631206D0A3020322E3734206C0A6F0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F466F6E74312066696E64666F6E74203920730A302E3330323020302E3330323020302E3330323020737267620A35342E33342031392E393520283129202E35203020740A39352E30382031392E393520283229202E35203020740A3133352E38332031392E393520283329202E35203020740A3137362E35382031392E393520283429202E35203020740A3231372E33332031392E393520283529202E35203020740A3235382E30372031392E393520283629202E35203020740A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F466F6E74312066696E64666F6E7420313120730A302030203020737267620A3133312E313420372E36372028542920302074610A2D312E3332302028726561746D656E74292074622067720A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F466F6E74312066696E64666F6E7420313120730A302030203020737267620A31352E3537203134382E393820284D65616E29202E3520393020740A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A2F466F6E74312066696E64666F6E7420313320730A302030203020737267620A3135362E3230203237332E313920286C6D29202E35203020740A302E303020302E3030203238382E3030203238382E303020636C0A302E303020302E3030203238382E3030203238382E303020636C0A65700A2525547261696C65720A252550616765733A20310A2525454F460A0A0A20>|ps>|0.8par|||>
      </unfolded-prog-io|>

    \;

    <\textput>
      <section|Architecture>

      Each of the functions invoked inthe preceding examples are simply the
      <with|font-series|bold|generic> names of a larger family of related
      functions. Every R object has an associated type or class, and when a
      generic function is invoked with an R object as a parameter, the R
      interpreter will dispatch the appropriate specific instance of a
      generic function.

      \;

      For example, the result of an lm evaluation is an instance of the lm
      class:

      <subsection|Classes>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      class(Table5.7.lm)
    <|unfolded-prog-io>
      class(Table5.7.lm)

      [1] "lm"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      mode(Table5.7.lm)
    <|unfolded-prog-io>
      mode(Table5.7.lm)

      [1] "list"
    </unfolded-prog-io|>

    <\textput>
      <subsection|Generic Functions>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary
    <|unfolded-prog-io>
      summary

      function (object, ...)\ 

      UseMethod("summary")

      \<less\>bytecode: 0x7fe9479735c8\<gtr\>

      \<less\>environment: namespace:base\<gtr\>
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      showMethods("summary")
    <|unfolded-prog-io>
      showMethods("summary")

      \;

      Function "summary":

      \ \<less\>not an S4 generic function\<gtr\>
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      head(summary.lm)
    <|unfolded-prog-io>
      head(summary.lm)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      1 function (object, correlation = FALSE, symbolic.cor = FALSE,\ 

      2 \ \ \ \ ...) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      3 { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      4 \ \ \ \ z \<less\>- object \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      5 \ \ \ \ p \<less\>- z$rank \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      6 \ \ \ \ rdf \<less\>- z$df.residual
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 
    </unfolded-prog-io|>

    <\textput>
      \;

      Note that summary.lm both overrides (by extending to the lm class) and
      overloads (by adding additional parameters) the generic summary
      function.

      \;

      When a workflow is based on generic functions, new packages can be
      easily inserted into the workflow when package authors provide
      appropriaextensions to generic functions.

      \;

      Some generic functions have default implementations that work for any
      type of R object.

      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      print(anova(Table5.7.lm))
    <|unfolded-prog-io>
      print(anova(Table5.7.lm))

      Analysis of Variance Table

      \;

      Response: obs

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ \ Pr(\<gtr\>F) \ \ \ 

      trt \ \ \ \ \ \ \ 6 659.37 109.895 83.5934 1.26e-09 ***

      rep \ \ \ \ \ \ \ 3 \ 17.57 \ \ 5.858 \ 4.4561 \ 0.02316 * \ 

      Residuals 13 \ 17.09 \ \ 1.315 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(anova(Table5.7.lm))
    <|unfolded-prog-io>
      summary(anova(Table5.7.lm))

      \ \ \ \ \ \ \ Df \ \ \ \ \ \ \ \ \ \ \ \ Sum Sq \ \ \ \ \ \ \ \ \ Mean
      Sq \ \ \ \ \ \ \ \ \ \ F value \ \ \ \ \ 

      \ Min. \ \ : 3.000 \ \ Min. \ \ : 17.09 \ \ Min. \ \ : \ 1.315 \ \ Min.
      \ \ : 4.456 \ 

      \ 1st Qu.: 4.500 \ \ 1st Qu.: 17.33 \ \ 1st Qu.: \ 3.586 \ \ 1st
      Qu.:24.240 \ 

      \ Median : 6.000 \ \ Median : 17.57 \ \ Median : \ 5.858 \ \ Median
      :44.025 \ 

      \ Mean \ \ : 7.333 \ \ Mean \ \ :231.35 \ \ Mean \ \ : 39.023 \ \ Mean
      \ \ :44.025 \ 

      \ 3rd Qu.: 9.500 \ \ 3rd Qu.:338.47 \ \ 3rd Qu.: 57.877 \ \ 3rd
      Qu.:63.809 \ 

      \ Max. \ \ :13.000 \ \ Max. \ \ :659.37 \ \ Max. \ \ :109.895 \ \ Max.
      \ \ :83.593 \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ NA's
      \ \ :1 \ \ \ \ \ \ 

      \ \ \ \ \ Pr(\<gtr\>F) \ \ \ \ \ \ \ 

      \ Min. \ \ :0.000000 \ 

      \ 1st Qu.:0.005791 \ 

      \ Median :0.011582 \ 

      \ Mean \ \ :0.011582 \ 

      \ 3rd Qu.:0.017372 \ 

      \ Max. \ \ :0.023163 \ 

      \ NA's \ \ :1 \ \ \ \ \ \ \ \ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      class(anova(Table5.7.lm))
    <|unfolded-prog-io>
      class(anova(Table5.7.lm))

      [1] "anova" \ \ \ \ \ "data.frame"
    </unfolded-prog-io|>

    <\textput>
      But some generic functions do not provide defaults:
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      VarCorr(Table5.7.lm)
    <|unfolded-prog-io>
      VarCorr(Table5.7.lm)

      Error: could not find function "VarCorr"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot

      showMethods("plot")

      anova

      showMethods("anova")

      update

      showMethods("update")
    <|unfolded-prog-io>
      plot

      function (x, y, ...)\ 

      UseMethod("plot")

      \<less\>bytecode: 0x7fe9474d3580\<gtr\>

      \<less\>environment: namespace:graphics\<gtr\>

      \<gtr\> showMethods("plot")

      \;

      Function "plot":

      \ \<less\>not an S4 generic function\<gtr\>

      \<gtr\> anova

      function (object, ...)\ 

      UseMethod("anova")

      \<less\>bytecode: 0x7fe946975c28\<gtr\>

      \<less\>environment: namespace:stats\<gtr\>

      \<gtr\> showMethods("anova")

      \;

      Function "anova":

      \ \<less\>not an S4 generic function\<gtr\>

      \<gtr\> update

      function (object, ...)\ 

      UseMethod("update")

      \<less\>bytecode: 0x7fe947bda8d8\<gtr\>

      \<less\>environment: namespace:stats\<gtr\>

      \<gtr\> showMethods("update")

      \;

      Function "update":

      \ \<less\>not an S4 generic function\<gtr\>
    </unfolded-prog-io|>

    <\textput>
      <subsection|Automation>

      When a full complement of generic functions are provided, much of the
      analysis process can be automated, i.e.\ 

      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      automate.analysis \<less\>- function(model) {

      \ \ \ require(lsmeans)

      \ \ \ require(multcomp)

      \ \ \ require(ggplot2)

      \ \ \ print(paste,"Analyzing model of class",class(model),"\\n")

      \ \ \ print(summary(model))

      \ \ \ print(anova(model))

      \ \ \ print("Variance/Covariance\\n")

      \ \ \ vcov(model)

      \ \ \ print("Hypothesis Testing\\n")

      \ \ \ print(cld(glht(model,linfct=mcp(trt="Tukey")),decreasing=TRUE))

      \ \ \ print(lsmeans(model,cld ~ trt))

      \ \ \ return(plot.lsmeans(model))

      }
    <|unfolded-prog-io>
      automate.analysis \<less\>- function(model) {

      + \ \ \ require(lsmeans)

      + \ \ \ require(multcomp)

      + \ \ \ require(ggplot2)

      + \ \ \ print(paste,"Analyzing model of class",class(model),"\\n")

      + \ \ \ print(summary(model))

      + \ \ \ print(anova(model))

      + \ \ \ print("Variance/Covariance\\n")

      + \ \ \ vcov(model)

      + \ \ \ print("Hypothesis Testing\\n")

      + \ \ \ print(cld(glht(model,linfct=mcp(trt="Tukey")),decreasing=TRUE))

      + \ \ \ print(lsmeans(model,cld ~ trt))

      + \ \ \ return(plot.lsmeans(model))

      + }
    </unfolded-prog-io|>

    <\textput>
      <section|Advantages of Mixed Model Analysis.>

      When data are balanced, variance components for mixed-effects models
      (i.e. fixed treatments and random blocks) can be computed from an
      analysis of variance of a linear model by setting mean squares equal to
      their expected values and solving algebraically.

      <big-table|<tabular|<tformat|<table|<row|<cell|Source>|<cell|d.f.>|<cell|MS>>|<row|<cell|Treatment>|<cell|<math|t-1>>|<cell|>>|<row|<cell|Replicate>|<cell|<math|r-1>>|<cell|s>>|<row|<cell|Residual>|<cell|<math|<around*|(|t-1|)><around*|(|r-1|)>>>|<cell|<math|\<sigma\><rsup|2>>>>>>>|>

      \;

      When data are not balanced, effects can be confounded, are there may
      not be a unique decomposition of the sums of squares.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      anova(lm(obs ~ trt+rep, data = Table5.7))

      anova(lm(obs ~ rep+trt, data = Table5.7))
    <|unfolded-prog-io>
      anova(lm(obs ~ trt+rep, data = Table5.7))

      Analysis of Variance Table

      \;

      Response: obs

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ Pr(\<gtr\>F) \ 

      trt \ \ \ \ \ \ \ 5 16.879 \ 3.3759 \ 2.5679 0.07928 .

      rep \ \ \ \ \ \ \ 3 17.575 \ 5.8582 \ 4.4561 0.02316 *

      Residuals 13 17.090 \ 1.3146 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \<gtr\> anova(lm(obs ~ rep+trt, data = Table5.7))

      Analysis of Variance Table

      \;

      Response: obs

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ Pr(\<gtr\>F) \ 

      rep \ \ \ \ \ \ \ 3 17.322 \ 5.7740 \ 4.3921 0.02422 *

      trt \ \ \ \ \ \ \ 5 17.132 \ 3.4264 \ 2.6063 0.07619 .

      Residuals 13 17.090 \ 1.3146 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\textput>
      Linear mixed effect models are typically expressed using the Laird-Ward
      notation.

      \;
    </textput>

    <\textput>
      <subsection|Advantage of linear models>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Rprof(paste("META.lm.prof",sep=""))

      rcbd.dat.lm \<less\>- lm(YLD ~ Loca:Repe + Entry*Loca, data=rcbd.dat)

      Rprof(NULL)

      current.prof \<less\>- summaryRprof("META.lm.prof")

      current.prof

      \;

      anova(rcbd.dat.lm)
    <|unfolded-prog-io>
      Rprof(paste("META.lm.prof",sep=""))

      \<gtr\> rcbd.dat.lm \<less\>- lm(YLD ~ Loca:Repe + Entry*Loca,
      data=rcbd.dat)

      \<gtr\> Rprof(NULL)

      \<gtr\> current.prof \<less\>- summaryRprof("META.lm.prof")

      \<gtr\> current.prof

      $by.self

      \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      "lm.fit" \ \ \ \ \ \ 0.1 \ \ \ \ \ 100 \ \ \ \ \ \ \ 0.1
      \ \ \ \ \ \ 100

      \;

      $by.total

      \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "lm.fit" \ \ \ \ \ \ \ 0.1 \ \ \ \ \ \ 100 \ \ \ \ \ \ 0.1
      \ \ \ \ \ 100

      "lm" \ \ \ \ \ \ \ \ \ \ \ 0.1 \ \ \ \ \ \ 100 \ \ \ \ \ \ 0.0
      \ \ \ \ \ \ \ 0

      \;

      $sample.interval

      [1] 0.02

      \;

      $sampling.time

      [1] 0.1

      \;

      \<gtr\>\ 

      \<gtr\> anova(rcbd.dat.lm)

      Analysis of Variance Table

      \;

      Response: YLD

      \ \ \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq \ F value \ \ \ Pr(\<gtr\>F)
      \ \ \ 

      Entry \ \ \ \ \ \ 31 \ 971.5 \ \ 31.34 \ 33.2976 \<less\> 2.2e-16 ***

      Loca \ \ \ \ \ \ \ 11 8994.8 \ 817.71 868.8207 \<less\> 2.2e-16 ***

      Loca:Repe \ \ 24 \ 131.4 \ \ \ 5.47 \ \ 5.8166 \<less\> 2.2e-16 ***

      Loca:Entry 341 \ 763.1 \ \ \ 2.24 \ \ 2.3776 \<less\> 2.2e-16 ***

      Residuals \ 744 \ 700.2 \ \ \ 0.94 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\textput>
      <subsection|Problems with the linear model>

      Example 2

      \;

      If data are balanced, we can estimate variances from the expected means
      squares,

      <\with|par-mode|center>
        <tabular*|<tformat|<cwith|2|-1|2|2|cell-halign|l>|<cwith|2|-1|3|3|cell-halign|l>|<cwith|2|-1|1|1|cell-halign|l>|<table|<row|<cell|<with|font-series|bold|Source>>|<cell|<with|font-series|bold|d.f.>>|<cell|<with|font-series|bold|Expected
        Mean Squares>>|<cell|>>|<row|<cell|Genotypes>|<cell|<math|g-1>>|<cell|<math|\<sigma\><rsub|e><rsup|2>+b\<sigma\><rsub|u<rsub|3>>+a
        b\<theta\><rsub|\<beta\>><rsup|2>>>|<cell|>>|<row|<cell|Environments>|<cell|<math|a-1>>|<cell|<math|\<sigma\><rsub|e><rsup|2>+g\<sigma\><rsup|2><rsub|u<rsub|2>>+b\<sigma\><rsub|u<rsub|3>>+g
        b\<sigma\><rsup|2><rsub|u<rsub|1>>>>|<cell|>>|<row|<cell|Blocks in
        Environments>|<cell|<math|a<around*|(|b-1|)>>>|<cell|<math|\<sigma\><rsub|e><rsup|2>><math|+g\<sigma\><rsup|2><rsub|u<rsub|2>>>>|<cell|>>|<row|<cell|GEI>|<cell|<math|<around*|(|a-1|)><around*|(|g-1|)>>>|<cell|<math|\<sigma\><rsub|e><rsup|2>+b\<sigma\><rsub|u<rsub|3>><rsup|2>>>|<cell|>>|<row|<cell|Residual>|<cell|<math|a<around*|(|g-1|)><around*|(|g
        b - g-1|)>>>|<cell|<math|\<sigma\><rsub|e><rsup|2>>>|<cell|>>>>>
      </with>

      \;

      For example,\ 

      <\eqnarray*>
        <tformat|<table|<row|<cell|MS<rsub|GEI>>|<cell|=>|<cell|\<sigma\><rsub|e><rsup|2>+b\<sigma\><rsub|u<rsub|3>><rsup|2>>>|<row|<cell|MS<rsub|e>>|<cell|=>|<cell|\<sigma\><rsub|e><rsup|2>>>|<row|<cell|\<sigma\><rsub|u<rsub|3>><rsup|2>>|<cell|=>|<cell|<around*|(|MS<rsub|GEI>-MS<rsub|e>|)>/b>>>>
      </eqnarray*>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.lm \<less\>- lm(Yield ~ Trial:Rep + Variety*Trial,
      data=Ex16.8.1)

      anova(Ex16.8.1.lm)

      lsmeans(Ex16.8.1.lm,cld ~ Variety)
    <|unfolded-prog-io>
      Ex16.8.1.lm \<less\>- lm(Yield ~ Trial:Rep + Variety*Trial,
      data=Ex16.8.1)

      \<gtr\> anova(Ex16.8.1.lm)

      Analysis of Variance Table

      \;

      Response: Yield

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ Df \ Sum Sq Mean Sq F value
      \ \ \ Pr(\<gtr\>F) \ \ \ 

      Variety \ \ \ \ \ \ 11 \ 925090 \ \ 84099 \ 4.2673 8.696e-05 ***

      Trial \ \ \ \ \ \ \ \ \ 2 3113626 1556813 78.9943 \<less\> 2.2e-16 ***

      Trial:Rep \ \ \ \ \ 6 \ \ 69256 \ \ 11543 \ 0.5857 \ \ \ 0.7405 \ \ \ 

      Trial:Variety 22 \ 532900 \ \ 24223 \ 1.2291 \ \ \ 0.2557 \ \ \ 

      Residuals \ \ \ \ 66 1300723 \ \ 19708
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \<gtr\> lsmeans(Ex16.8.1.lm,cld ~ Variety)

      NOTE: Results may be misleading due to involvement in interactions

      \ Variety \ \ \ \ \ lsmean \ \ \ \ \ \ SE df lower.CL upper.CL .group

      \ R75-12 \ \ \ \ 1175.889 46.79497 66 1082.460 1269.318 \ 1 \ \ \ 

      \ N72-3058 \ \ 1330.667 46.79497 66 1237.237 1424.096 \ 12 \ \ 

      \ Tracy \ \ \ \ \ 1369.889 46.79497 66 1276.460 1463.318 \ 123 \ 

      \ R73-81 \ \ \ \ 1373.778 46.79497 66 1280.349 1467.207 \ 123 \ 

      \ Centennial 1394.778 46.79497 66 1301.349 1488.207 \ 123 \ 

      \ N73-882 \ \ \ 1396.667 46.79497 66 1303.237 1490.096 \ 123 \ 

      \ N73-877 \ \ \ 1403.333 46.79497 66 1309.904 1496.763 \ \ 23 \ 

      \ D74-7741 \ \ 1406.444 46.79497 66 1313.015 1499.874 \ \ 23 \ 

      \ N73-693 \ \ \ 1436.222 46.79497 66 1342.793 1529.651 \ \ 23 \ 

      \ N72-137 \ \ \ 1483.889 46.79497 66 1390.460 1577.318 \ \ 23 \ 

      \ N73-1102 \ \ 1501.444 46.79497 66 1408.015 1594.874 \ \ 23 \ 

      \ N72-3148 \ \ 1566.000 46.79497 66 1472.571 1659.429 \ \ \ 3 \ 

      \;

      Results are averaged over the levels of: Trial, Rep\ 

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 12 estimates\ 

      significance level used: alpha = 0.05\ 
    </unfolded-prog-io|>

    \;

    \;

    <subsection|Mixed Model Specific Generic Methods>

    <\textput>
      <\textput>
        <paragraph|Variance Components>

        \;
      </textput>

      <\unfolded-prog-io>
        <with|color|red|\<gtr\> >
      <|unfolded-prog-io>
        VarCorr(Table5.7.lm)

        fixef(Table5.7.lm)

        ranef(Table5.7.lm)
      <|unfolded-prog-io>
        Error in UseMethod("VarCorr") :\ 

        \ \ no applicable method for 'VarCorr' applied to an object of class
        "lm"

        \<gtr\> Error in UseMethod("fixef") :\ 

        \ \ no applicable method for 'fixef' applied to an object of class
        "lm"

        \<gtr\> Error in UseMethod("ranef") :\ 

        \ \ no applicable method for 'ranef' applied to an object of class
        "lm"

        \<gtr\> Error in UseMethod("intervals") :\ 

        \ \ no applicable method for 'intervals' applied to an object of
        class "lm"
      </unfolded-prog-io|>

      <\input>
        <with|color|red|\<gtr\> >
      <|input>
        \;
      </input>

      <section|lme>

      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(nlme)

      packageDescription("nlme")

      \;

      Table5.7.lme \<less\>- lme(obs ~ 0+trt, random = ~ 1 \| rep,
      data=Table5.7)

      Table5.7.red.lme \<less\>- update(Table5.7.lme, . ~ . - trt)

      summary(Table5.7.lme)

      anova(Table5.7.lme)

      anova(Table5.7.red.lme,Table5.7.lme)

      \;

      summary(glht(Table5.7.lme,linfct=mcp(trt="Dunnett")))

      cld(glht(Table5.7.lme,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      lsmeans(Table5.7.lme,cld ~ trt)

      lsmeans(Table5.7.lme,pairwise ~ trt)

      summary(glht(Table5.7.lme,linfct=mcp(trt="Tukey")))
    <|unfolded-prog-io>
      library(nlme)

      \<gtr\> packageDescription("nlme")

      Package: nlme

      Version: 3.1-128

      Date: 2016-05-04

      Priority: recommended

      Title: Linear and Nonlinear Mixed Effects Models

      Authors@R: c(person("Jos'e", "Pinheiro", role = "aut", comment = "S

      \ \ \ \ \ \ \ version"), person("Douglas", "Bates", role = "aut",
      comment =

      \ \ \ \ \ \ \ "up to 2007"), person("Saikat", "DebRoy", role = "ctb",

      \ \ \ \ \ \ \ comment = "up to 2002"), person("Deepayan", "Sarkar",
      role =

      \ \ \ \ \ \ \ "ctb", comment = "up to 2005"), person("EISPACK authors",

      \ \ \ \ \ \ \ role = "ctb", comment = "src/rs.f"), person("Siem",

      \ \ \ \ \ \ \ "Heisterkamp", role = "ctb", comment = "Author fixed
      sigma"),

      \ \ \ \ \ \ \ person("Bert", "Van Willigen",role = "ctb", comment =

      \ \ \ \ \ \ \ "Programmer fixed sigma"), person("R-core", email =

      \ \ \ \ \ \ \ "R-core@R-project.org", role = c("aut", "cre")))

      Description: Fit and compare Gaussian linear and nonlinear

      \ \ \ \ \ \ \ mixed-effects models.

      Depends: R (\<gtr\>= 3.0.2)

      Imports: graphics, stats, utils, lattice

      Suggests: Hmisc, MASS

      LazyData: yes

      ByteCompile: yes

      Encoding: UTF-8

      License: GPL (\<gtr\>= 2) \| file LICENCE

      BugReports: http://bugs.r-project.org

      NeedsCompilation: yes

      Packaged: 2016-05-09 08:38:54 UTC; maechler

      Author: Jos'e Pinheiro [aut] (S version), Douglas Bates [aut] (up to

      \ \ \ \ \ \ \ 2007), Saikat DebRoy [ctb] (up to 2002), Deepayan Sarkar

      \ \ \ \ \ \ \ [ctb] (up to 2005), EISPACK authors [ctb] (src/rs.f),
      Siem

      \ \ \ \ \ \ \ Heisterkamp [ctb] (Author fixed sigma), Bert Van Willigen

      \ \ \ \ \ \ \ [ctb] (Programmer fixed sigma), R-core [aut, cre]

      Maintainer: R-core \<less\>R-core@R-project.org\<gtr\>

      Repository: CRAN

      Date/Publication: 2016-05-10 11:40:55

      Built: R 3.3.1; x86_64-apple-darwin13.4.0; 2016-06-24 18:37:31 UTC;

      \ \ \ \ \ \ \ unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/nlme/Meta/package.rds\ 

      \<gtr\>\ 

      \<gtr\> Table5.7.lme \<less\>- lme(obs ~ 0+trt, random = ~ 1 \| rep,
      data=Table5.7)

      \<gtr\> Table5.7.red.lme \<less\>- update(Table5.7.lme, . ~ . - trt)

      \<gtr\> summary(Table5.7.lme)

      Linear mixed-effects model fit by REML

      \ Data: Table5.7\ 

      \ \ \ \ \ \ \ AIC \ \ \ \ \ BIC \ \ \ logLik

      \ \ 78.02787 84.20858 -31.01393

      \;

      Random effects:

      \ Formula: ~1 \| rep

      \ \ \ \ \ \ \ \ (Intercept) Residual

      StdDev: \ \ 0.9438476 1.148252

      \;

      Fixed effects: obs ~ 0 + trt\ 

      \ \ \ \ \ \ \ \ Value Std.Error DF \ t-value p-value

      trt1 3.941652 0.9658266 13 4.081117 \ 0.0013

      trt2 4.905000 0.7431911 13 6.599918 \ 0.0000

      trt3 5.312500 0.7431911 13 7.148229 \ 0.0000

      trt4 4.872500 0.7431911 13 6.556188 \ 0.0000

      trt5 5.567500 0.7431911 13 7.491344 \ 0.0000

      trt6 7.050000 0.7431911 13 9.486120 \ 0.0000

      \ Correlation:\ 

      \ \ \ \ \ trt1 \ trt2 \ trt3 \ trt4 \ trt5\ 

      trt2 0.310 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt3 0.310 0.403 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt4 0.310 0.403 0.403 \ \ \ \ \ \ \ \ \ \ \ 

      trt5 0.310 0.403 0.403 0.403 \ \ \ \ \ 

      trt6 0.310 0.403 0.403 0.403 0.403

      \;

      Standardized Within-Group Residuals:

      \ \ \ \ \ \ \ Min \ \ \ \ \ \ \ \ Q1 \ \ \ \ \ \ \ Med
      \ \ \ \ \ \ \ \ Q3 \ \ \ \ \ \ \ Max\ 

      -1.3741353 -0.6585260 \ 0.1687636 \ 0.6356992 \ 1.4162022\ 

      \;

      Number of Observations: 22

      Number of Groups: 4\ 

      \<gtr\> anova(Table5.7.lme)

      \ \ \ \ numDF denDF \ F-value p-value

      trt \ \ \ \ 6 \ \ \ 13 19.36485 \ \<less\>.0001

      \<gtr\> anova(Table5.7.red.lme,Table5.7.lme)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Model df \ \ \ \ \ AIC
      \ \ \ \ \ \ BIC \ \ \ logLik \ \ Test \ L.Ratio

      Table5.7.red.lme \ \ \ \ 1 \ 2 98.41724 100.59932 -47.20862
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.lme \ \ \ \ \ \ \ \ 2 \ 8 78.02787 \ 84.20858 -31.01393 1 vs 2
      32.38937

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ p-value

      Table5.7.red.lme \ \ \ \ \ \ \ 

      Table5.7.lme \ \ \ \ \ \<less\>.0001

      Warning message:

      In anova.lme(Table5.7.red.lme, Table5.7.lme) :

      \ \ fitted objects with different fixed effects. REML comparisons are
      not meaningful.

      \<gtr\>\ 

      \<gtr\> summary(glht(Table5.7.lme,linfct=mcp(trt="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: lme.formula(fixed = obs ~ 0 + trt, data = Table5.7, random = ~1 \|\ 

      \ \ \ \ rep)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ 

      2 - 1 == 0 \ \ 0.9633 \ \ \ \ 1.0197 \ \ 0.945 \ 0.73100 \ \ 

      3 - 1 == 0 \ \ 1.3708 \ \ \ \ 1.0197 \ \ 1.344 \ 0.44576 \ \ 

      4 - 1 == 0 \ \ 0.9308 \ \ \ \ 1.0197 \ \ 0.913 \ 0.75415 \ \ 

      5 - 1 == 0 \ \ 1.6258 \ \ \ \ 1.0197 \ \ 1.594 \ 0.30053 \ \ 

      6 - 1 == 0 \ \ 3.1083 \ \ \ \ 1.0197 \ \ 3.048 \ 0.00906 **

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;

      \<gtr\> cld(glht(Table5.7.lme,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ \ 1 \ \ \ 2 \ \ \ 3 \ \ \ 4 \ \ \ 5 \ \ \ 6\ 

      \ "b" "ab" "ab" "ab" "ab" \ "a"\ 

      \<gtr\> lsmeans(Table5.7.lme,cld ~ trt)

      \ trt \ \ lsmean \ \ \ \ \ \ \ SE df lower.CL upper.CL .group

      \ 1 \ \ 3.941652 0.9658266 13 1.855110 6.028193 \ 1 \ \ \ 

      \ 4 \ \ 4.872500 0.7431911 13 3.266933 6.478067 \ 1 \ \ \ 

      \ 2 \ \ 4.905000 0.7431911 13 3.299433 6.510567 \ 1 \ \ \ 

      \ 3 \ \ 5.312500 0.7431911 13 3.706933 6.918067 \ 1 \ \ \ 

      \ 5 \ \ 5.567500 0.7431911 13 3.961933 7.173067 \ 1 \ \ \ 

      \ 6 \ \ 7.050000 0.7431911 13 5.444433 8.655567 \ 1 \ \ \ 

      \;

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 

      \<gtr\> lsmeans(Table5.7.lme,pairwise ~ trt)

      $lsmeans

      \ trt \ \ lsmean \ \ \ \ \ \ \ SE df lower.CL upper.CL

      \ 1 \ \ 3.941652 0.9658266 13 1.855110 6.028193

      \ 2 \ \ 4.905000 0.7431911 13 3.299433 6.510567

      \ 3 \ \ 5.312500 0.7431911 13 3.706933 6.918067

      \ 4 \ \ 4.872500 0.7431911 13 3.266933 6.478067

      \ 5 \ \ 5.567500 0.7431911 13 3.961933 7.173067

      \ 6 \ \ 7.050000 0.7431911 13 5.444433 8.655567

      \;

      Confidence level used: 0.95\ 

      \;

      $contrasts

      \ contrast \ \ estimate \ \ \ \ \ \ \ SE df t.ratio p.value

      \ 1 - 2 \ \ \ -0.9633483 1.0196714 13 \ -0.945 \ 0.9273

      \ 1 - 3 \ \ \ -1.3708483 1.0196714 13 \ -1.344 \ 0.7569

      \ 1 - 4 \ \ \ -0.9308483 1.0196714 13 \ -0.913 \ 0.9363

      \ 1 - 5 \ \ \ -1.6258483 1.0196714 13 \ -1.594 \ 0.6156

      \ 1 - 6 \ \ \ -3.1083483 1.0196714 13 \ -3.048 \ 0.0792

      \ 2 - 3 \ \ \ -0.4075000 0.8119371 13 \ -0.502 \ 0.9952

      \ 2 - 4 \ \ \ \ 0.0325000 0.8119371 13 \ \ 0.040 \ 1.0000

      \ 2 - 5 \ \ \ -0.6625000 0.8119371 13 \ -0.816 \ 0.9593

      \ 2 - 6 \ \ \ -2.1450000 0.8119371 13 \ -2.642 \ 0.1549

      \ 3 - 4 \ \ \ \ 0.4400000 0.8119371 13 \ \ 0.542 \ 0.9932

      \ 3 - 5 \ \ \ -0.2550000 0.8119371 13 \ -0.314 \ 0.9995

      \ 3 - 6 \ \ \ -1.7375000 0.8119371 13 \ -2.140 \ 0.3263

      \ 4 - 5 \ \ \ -0.6950000 0.8119371 13 \ -0.856 \ 0.9506

      \ 4 - 6 \ \ \ -2.1775000 0.8119371 13 \ -2.682 \ 0.1453

      \ 5 - 6 \ \ \ -1.4825000 0.8119371 13 \ -1.826 \ 0.4835

      \;

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      \;

      \<gtr\> summary(glht(Table5.7.lme,linfct=mcp(trt="Tukey")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Tukey Contrasts

      \;

      \;

      Fit: lme.formula(fixed = obs ~ 0 + trt, data = Table5.7, random = ~1 \|\ 

      \ \ \ \ rep)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ 

      2 - 1 == 0 \ \ 0.9634 \ \ \ \ 1.0197 \ \ 0.945 \ \ 0.9339 \ 

      3 - 1 == 0 \ \ 1.3708 \ \ \ \ 1.0197 \ \ 1.344 \ \ 0.7575 \ 

      4 - 1 == 0 \ \ 0.9308 \ \ \ \ 1.0197 \ \ 0.913 \ \ 0.9425 \ 

      5 - 1 == 0 \ \ 1.6259 \ \ \ \ 1.0197 \ \ 1.594 \ \ 0.5988 \ 

      6 - 1 == 0 \ \ 3.1084 \ \ \ \ 1.0197 \ \ 3.048 \ \ 0.0273 *

      3 - 2 == 0 \ \ 0.4075 \ \ \ \ 0.8119 \ \ 0.502 \ \ 0.9961 \ 

      4 - 2 == 0 \ -0.0325 \ \ \ \ 0.8119 \ -0.040 \ \ 1.0000 \ 

      5 - 2 == 0 \ \ 0.6625 \ \ \ \ 0.8119 \ \ 0.816 \ \ 0.9642 \ 

      6 - 2 == 0 \ \ 2.1450 \ \ \ \ 0.8119 \ \ 2.642 \ \ 0.0862 .

      4 - 3 == 0 \ -0.4400 \ \ \ \ 0.8119 \ -0.542 \ \ 0.9943 \ 

      5 - 3 == 0 \ \ 0.2550 \ \ \ \ 0.8119 \ \ 0.314 \ \ 0.9996 \ 

      6 - 3 == 0 \ \ 1.7375 \ \ \ \ 0.8119 \ \ 2.140 \ \ 0.2636 \ 

      5 - 4 == 0 \ \ 0.6950 \ \ \ \ 0.8119 \ \ 0.856 \ \ 0.9561 \ 

      6 - 4 == 0 \ \ 2.1775 \ \ \ \ 0.8119 \ \ 2.682 \ \ 0.0777 .

      6 - 5 == 0 \ \ 1.4825 \ \ \ \ 0.8119 \ \ 1.826 \ \ 0.4455 \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;
    </unfolded-prog-io|>

    <\textput>
      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      head(anova.lme)

      head(summary.lme)

      head(plot.lme)
    <|unfolded-prog-io>
      head(anova.lme)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      1 function (object, ..., test = TRUE, type = c("sequential",
      "marginal"),\ 

      2 \ \ \ \ adjustSigma = TRUE, Terms, L, verbose = FALSE)
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      3 { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      4 \ \ \ \ fixSig \<less\>- attr(object$modelStruct, "fixedSigma")
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      5 \ \ \ \ fixSig \<less\>- !is.null(fixSig) && fixSig
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      6 \ \ \ \ Lmiss \<less\>- missing(L)
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \<gtr\> head(summary.lme)

      Error in head(summary.lme) : object 'summary.lme' not found

      \<gtr\> head(plot.lme)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      1 function (x, form = resid(., type = "pearson") ~ fitted(.), abline,
      \ \ \ \ 

      2 \ \ \ \ id = NULL, idLabels = NULL, idResType = c("pearson",
      "normalized"),\ 

      3 \ \ \ \ grid, ...) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      4 { \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      5 \ \ \ \ object \<less\>- x \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      6 \ \ \ \ if (!inherits(form, "formula")) {
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.lme);v()

      qqnorm(Table5.7.lme);v()
    <|unfolded-prog-io>
      plot(Table5.7.lme);v()

      <image|<tuple||ps>|0.8par|||>\ 

      \<gtr\> qqnorm(Table5.7.lme);v()

      <image|<tuple||ps>|0.8par|||>
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      lme.plot \<less\>- plot.lsmeans(Table5.7.lme,cld ~ trt,title="lme")

      lme.plot;v()
    <|unfolded-prog-io>
      lme.plot \<less\>- plot.lsmeans(Table5.7.lme,cld ~ trt,title="lme")

      \<gtr\> lme.plot;v()

      <image|<tuple||ps>|0.8par|||>
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      print(vtbl \<less\>- vcov(Table5.7.lme))
    <|unfolded-prog-io>
      print(vtbl \<less\>- vcov(Table5.7.lme))

      \ \ \ \ \ \ \ \ \ \ trt1 \ \ \ \ \ trt2 \ \ \ \ \ trt3 \ \ \ \ \ trt4
      \ \ \ \ \ trt5 \ \ \ \ \ trt6

      trt1 0.9328210 0.2227121 0.2227121 0.2227121 0.2227121 0.2227121

      trt2 0.2227121 0.5523330 0.2227121 0.2227121 0.2227121 0.2227121

      trt3 0.2227121 0.2227121 0.5523330 0.2227121 0.2227121 0.2227121

      trt4 0.2227121 0.2227121 0.2227121 0.5523330 0.2227121 0.2227121

      trt5 0.2227121 0.2227121 0.2227121 0.2227121 0.5523330 0.2227121

      trt6 0.2227121 0.2227121 0.2227121 0.2227121 0.2227121 0.5523330
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      sqrt(vtbl[1,1]);sqrt(vtbl[2,2])
    <|unfolded-prog-io>
      sqrt(vtbl[1,1]);sqrt(vtbl[2,2])

      [1] 0.9658266

      [1] 0.7431911
    </unfolded-prog-io|>

    <\textput>
      Corresponding errors from lsmeans(Table5.7.lme,cld ~ trt) are 0.9658266
      and 0.7431911
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      sqrt(vtbl[1,1]+vtbl[2,2]-vtbl[1,2]-vtbl[2,1])
    <|unfolded-prog-io>
      sqrt(vtbl[1,1]+vtbl[2,2]-vtbl[1,2]-vtbl[2,1])

      [1] 1.019671
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      sqrt(vtbl[3,3]+vtbl[2,2]-vtbl[3,2]-vtbl[2,3])
    <|unfolded-prog-io>
      sqrt(vtbl[3,3]+vtbl[2,2]-vtbl[3,2]-vtbl[2,3])

      [1] 0.8119371
    </unfolded-prog-io|>

    <\textput>
      Corresponding errors from glht(Table5.7.lme,linfct=mcp(trt="Tukey"))
      are 1.0197 and 0.8119.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      coef(Table5.7.lme)
    <|unfolded-prog-io>
      coef(Table5.7.lme)

      \ \ \ \ \ \ trt1 \ trt2 \ \ trt3 \ \ trt4 \ \ trt5 trt6 (Intercept)

      1 3.941652 4.905 5.3125 4.8725 5.5675 7.05 \ -1.0952879

      2 3.941652 4.905 5.3125 4.8725 5.5675 7.05 \ \ 0.9185912

      3 3.941652 4.905 5.3125 4.8725 5.5675 7.05 \ -0.0346458

      4 3.941652 4.905 5.3125 4.8725 5.5675 7.05 \ \ 0.2113425
    </unfolded-prog-io|>

    <\textput>
      \;
    </textput>

    <subsection|Example 2>

    \;

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1$Block \<less\>- Ex16.8.1$Trial:Ex16.8.1$Rep

      Ex16.8.1.lme \<less\>- lme(Yield ~ Variety*Trial, random = ~ 1 \|
      Block, data=Ex16.8.1)

      summary(Ex16.8.1.lme)

      anova(Ex16.8.1.lme)

      summary(glht(Ex16.8.1.lme,linfct=mcp(Variety="Dunnett")))

      cld(glht(Ex16.8.1.lme,linfct=mcp(Variety="Tukey")),decreasing=TRUE)

      cld(glht(Ex16.8.1.lme,linfct=mcp(Variety="Tukey",interaction_average =
      TRUE, covariate_average = TRUE)),decreasing=TRUE)
    <|unfolded-prog-io>
      Ex16.8.1$Block \<less\>- Ex16.8.1$Trial:Ex16.8.1$Rep

      \<gtr\> Ex16.8.1.lme \<less\>- lme(Yield ~ Variety*Trial, random = ~ 1
      \| Block, data=Ex16.

      \<less\> ~ Variety*Trial, random = ~ 1 \| Block, data=Ex16.8.1)

      \<gtr\> summary(Ex16.8.1.lme)

      Linear mixed-effects model fit by REML

      \ Data: Ex16.8.1\ 

      \ \ \ \ \ \ \ AIC \ \ \ \ \ BIC \ \ \ logLik

      \ \ 1029.339 1115.853 -476.6696

      \;

      Random effects:

      \ Formula: ~1 \| Block

      \ \ \ \ \ \ \ \ (Intercept) Residual

      StdDev: 0.008810791 137.9402

      \;

      Fixed effects: Yield ~ Variety * Trial\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Value
      Std.Error DF \ \ t-value p-value

      (Intercept) \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1200.6667 \ 79.63979 66
      15.076215 \ 0.0000

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -93.6667 112.62768 66
      -0.831649 \ 0.4086

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 249.6667 112.62768 66
      \ 2.216743 \ 0.0301

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -94.0000 112.62768 66
      -0.834608 \ 0.4069

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 127.0000 112.62768 66
      \ 1.127609 \ 0.2636

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 62.0000 112.62768 66
      \ 0.550486 \ 0.5838

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 74.0000 112.62768 66
      \ 0.657032 \ 0.5134

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 12.0000 112.62768 66
      \ 0.106546 \ 0.9155

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -26.6667 112.62768 66
      -0.236768 \ 0.8136

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -68.3333 112.62768 66
      -0.606719 \ 0.5461

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -100.3333 112.62768 66
      -0.890841 \ 0.3763

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -125.0000 112.62768 66
      -1.109852 \ 0.2711

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 391.0000 112.62768 \ 6
      \ 3.471616 \ 0.0133

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 191.3333 112.62768 \ 6
      \ 1.698813 \ 0.1403

      VarietyD74-7741:TrialClinton \ \ 232.6667 159.27959 66 \ 1.460744
      \ 0.1488

      VarietyN72-137:TrialClinton \ \ -300.0000 159.27959 66 -1.883480
      \ 0.0640

      VarietyN72-3058:TrialClinton \ \ 101.3333 159.27959 66 \ 0.636198
      \ 0.5268

      VarietyN72-3148:TrialClinton \ \ \ 65.3333 159.27959 66 \ 0.410180
      \ 0.6830

      VarietyN73-1102:TrialClinton \ \ \ 77.0000 159.27959 66 \ 0.483427
      \ 0.6304

      VarietyN73-693:TrialClinton \ \ \ -94.6667 159.27959 66 -0.594343
      \ 0.5543

      VarietyN73-877:TrialClinton \ \ \ \ 15.6667 159.27959 66 \ 0.098360
      \ 0.9219

      VarietyN73-882:TrialClinton \ \ \ -41.6667 159.27959 66 -0.261595
      \ 0.7944

      VarietyR73-81:TrialClinton \ \ \ \ 179.0000 159.27959 66 \ 1.123810
      \ 0.2652

      VarietyR75-12:TrialClinton \ \ \ -105.6667 159.27959 66 -0.663404
      \ 0.5094

      VarietyTracy:TrialClinton \ \ \ \ \ 162.6667 159.27959 66 \ 1.021265
      \ 0.3109

      VarietyD74-7741:TrialPlymouth \ \ 83.3333 159.27959 66 \ 0.523189
      \ 0.6026

      VarietyN72-137:TrialPlymouth \ -181.6667 159.27959 66 -1.140552
      \ 0.2582

      VarietyN72-3058:TrialPlymouth \ -11.6667 159.27959 66 -0.073246
      \ 0.9418

      VarietyN72-3148:TrialPlymouth \ \ 67.3333 159.27959 66 \ 0.422737
      \ 0.6739

      VarietyN73-1102:TrialPlymouth \ \ 57.0000 159.27959 66 \ 0.357861
      \ 0.7216

      VarietyN73-693:TrialPlymouth \ \ \ -3.0000 159.27959 66 -0.018835
      \ 0.9850

      VarietyN73-877:TrialPlymouth \ \ -26.0000 159.27959 66 -0.163235
      \ 0.8708

      VarietyN73-882:TrialPlymouth \ \ 127.3333 159.27959 66 \ 0.799433
      \ 0.4269

      VarietyR73-81:TrialPlymouth \ \ \ -37.0000 159.27959 66 -0.232296
      \ 0.8170

      VarietyR75-12:TrialPlymouth \ \ -250.0000 159.27959 66 -1.569567
      \ 0.1213

      VarietyTracy:TrialPlymouth \ \ \ \ 137.6667 159.27959 66 \ 0.864308
      \ 0.3905

      \ Correlation:\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (Intr)
      VrD74-7741 VrN72-137 VrN72-3058

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -0.707 \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ \ 

      VarietyD74-7741:TrialClinton \ \ 0.500 -0.707 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ 0.500 -0.354 \ \ \ \ -0.707
      \ \ \ -0.354 \ \ \ 

      VarietyN72-3058:TrialClinton \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.707 \ \ \ 

      VarietyN72-3148:TrialClinton \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN73-1102:TrialClinton \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyD74-7741:TrialPlymouth \ 0.500 -0.707 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ 0.500 -0.354 \ \ \ \ -0.707
      \ \ \ -0.354 \ \ \ 

      VarietyN72-3058:TrialPlymouth \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.707 \ \ \ 

      VarietyN72-3148:TrialPlymouth \ 0.500 -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VrN72-3148
      VrN73-1102 VrN73-693 VrN73-877

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500
      \ \ \ \ \ 0.500 \ \ \ \ 0.500 \ \ 

      VarietyD74-7741:TrialClinton \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-137:TrialClinton \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-3058:TrialClinton \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-3148:TrialClinton \ -0.707 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN73-1102:TrialClinton \ -0.354 \ \ \ \ -0.707 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN73-693:TrialClinton \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.707
      \ \ \ -0.354 \ \ 

      VarietyN73-877:TrialClinton \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.707 \ \ 

      VarietyN73-882:TrialClinton \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyR73-81:TrialClinton \ \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyR75-12:TrialClinton \ \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyTracy:TrialClinton \ \ \ \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyD74-7741:TrialPlymouth -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-137:TrialPlymouth \ -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-3058:TrialPlymouth -0.354 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      VarietyN72-3148:TrialPlymouth -0.707 \ \ \ \ -0.354 \ \ \ \ -0.354
      \ \ \ -0.354 \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VrN73-882
      VrR73-81 VrR75-12 VrtyTr TrlCln

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ 0.500
      \ \ \ 0.500 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ 0.500
      \ \ \ 0.500 \ \ \ 0.500 \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.500 \ \ \ \ 0.500
      \ \ \ 0.500 \ \ \ 0.500 \ 0.500

      VarietyD74-7741:TrialClinton \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN72-137:TrialClinton \ \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN72-3058:TrialClinton \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN72-3148:TrialClinton \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN73-1102:TrialClinton \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN73-693:TrialClinton \ \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN73-877:TrialClinton \ \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyN73-882:TrialClinton \ \ -0.707 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyR73-81:TrialClinton \ \ \ -0.354 \ \ \ -0.707 \ \ -0.354
      \ \ -0.354 -0.707

      VarietyR75-12:TrialClinton \ \ \ -0.354 \ \ \ -0.354 \ \ -0.707
      \ \ -0.354 -0.707

      VarietyTracy:TrialClinton \ \ \ \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.707 -0.707

      VarietyD74-7741:TrialPlymouth -0.354 \ \ \ -0.354 \ \ -0.354 \ \ -0.354
      -0.354

      VarietyN72-137:TrialPlymouth \ -0.354 \ \ \ -0.354 \ \ -0.354
      \ \ -0.354 -0.354

      VarietyN72-3058:TrialPlymouth -0.354 \ \ \ -0.354 \ \ -0.354 \ \ -0.354
      -0.354

      VarietyN72-3148:TrialPlymouth -0.354 \ \ \ -0.354 \ \ -0.354 \ \ -0.354
      -0.354

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TrlPly
      VD74-7741:TC VN72-137:TC VN72-3058:TC

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ -0.354
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ -0.354 \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ -0.354 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyD74-7741:TrialPlymouth -0.707 \ 0.500 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 

      VarietyN72-137:TrialPlymouth \ -0.707 \ 0.250 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 

      VarietyN72-3058:TrialPlymouth -0.707 \ 0.250 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      VarietyN72-3148:TrialPlymouth -0.707 \ 0.250 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VN72-3148:TC
      VN73-1102:TC VN73-693:TC

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ 0.500 \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ 0.500 \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ 0.500 \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ 0.500 \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ 0.500 \ \ \ \ 

      VarietyD74-7741:TrialPlymouth \ 0.250 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ \ 0.250 \ \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ 0.250 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ \ 0.250 \ \ \ \ 

      VarietyN72-3058:TrialPlymouth \ 0.250 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ \ 0.250 \ \ \ \ 

      VarietyN72-3148:TrialPlymouth \ 0.500 \ \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ \ 0.250 \ \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VN73-877:TC
      VN73-882:TC VR73-81:TC VR75-12:TC

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \;

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ 0.500 \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ 0.500 \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ 0.500 \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 0.500 \ \ \ 

      VarietyD74-7741:TrialPlymouth \ 0.250 \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 0.250 \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ 0.250 \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 0.250 \ \ \ 

      VarietyN72-3058:TrialPlymouth \ 0.250 \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 0.250 \ \ \ 

      VarietyN72-3148:TrialPlymouth \ 0.250 \ \ \ \ \ \ 0.250
      \ \ \ \ \ \ 0.250 \ \ \ \ \ 0.250 \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VrT:TC
      VD74-7741:TP VN72-137:TP VN72-3058:TP

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialPlymouth \ 0.250
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ 0.250 \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialPlymouth \ 0.250 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialPlymouth \ 0.250 \ 0.500 \ \ \ \ \ \ \ 0.500
      \ \ \ \ \ \ 0.500 \ \ \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VN72-3148:TP
      VN73-1102:TP VN73-693:TP

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ VN73-877:TP
      VN73-882:TP VR73-81:TP VR75-12:TP

      VarietyD74-7741 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-1102:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-693:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-877:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN73-882:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR73-81:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyR75-12:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyTracy:TrialClinton \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyD74-7741:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-137:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3058:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      VarietyN72-3148:TrialPlymouth \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \ [ reached getOption("max.print") -- omitted 7 rows ]

      \;

      Standardized Within-Group Residuals:

      \ \ \ \ \ \ \ \ Min \ \ \ \ \ \ \ \ \ Q1 \ \ \ \ \ \ \ \ Med
      \ \ \ \ \ \ \ \ \ Q3 \ \ \ \ \ \ \ \ Max\ 

      -1.98153541 -0.61983394 \ 0.03020634 \ 0.55700477 \ 2.01536651\ 

      \;

      Number of Observations: 108

      Number of Groups: 9\ 

      \<gtr\> anova(Ex16.8.1.lme)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ numDF denDF \ \ F-value p-value

      (Intercept) \ \ \ \ \ \ 1 \ \ \ 66 11176.667 \ \<less\>.0001

      Variety \ \ \ \ \ \ \ \ \ 11 \ \ \ 66 \ \ \ \ 4.420 \ 0.0001

      Trial \ \ \ \ \ \ \ \ \ \ \ \ 2 \ \ \ \ 6 \ \ \ 81.819 \ \<less\>.0001

      Variety:Trial \ \ \ 22 \ \ \ 66 \ \ \ \ 1.273 \ 0.2235

      \<gtr\> summary(glht(Ex16.8.1.lme,linfct=mcp(Variety="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: lme.formula(fixed = Yield ~ Variety * Trial, data = Ex16.8.1,\ 

      \ \ \ \ random = ~1 \| Block)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Estimate Std.
      Error z value Pr(\<gtr\>\|z\|)

      D74-7741 - Centennial == 0 \ \ -93.67 \ \ \ \ 112.63 \ -0.832
      \ \ \ 0.982

      N72-137 - Centennial == 0 \ \ \ 249.67 \ \ \ \ 112.63 \ \ 2.217
      \ \ \ 0.182

      N72-3058 - Centennial == 0 \ \ -94.00 \ \ \ \ 112.63 \ -0.835
      \ \ \ 0.982

      N72-3148 - Centennial == 0 \ \ 127.00 \ \ \ \ 112.63 \ \ 1.128
      \ \ \ 0.883

      N73-1102 - Centennial == 0 \ \ \ 62.00 \ \ \ \ 112.63 \ \ 0.550
      \ \ \ 0.999

      N73-693 - Centennial == 0 \ \ \ \ 74.00 \ \ \ \ 112.63 \ \ 0.657
      \ \ \ 0.997

      N73-877 - Centennial == 0 \ \ \ \ 12.00 \ \ \ \ 112.63 \ \ 0.107
      \ \ \ 1.000

      N73-882 - Centennial == 0 \ \ \ -26.67 \ \ \ \ 112.63 \ -0.237
      \ \ \ 1.000

      R73-81 - Centennial == 0 \ \ \ \ -68.33 \ \ \ \ 112.63 \ -0.607
      \ \ \ 0.999

      R75-12 - Centennial == 0 \ \ \ -100.33 \ \ \ \ 112.63 \ -0.891
      \ \ \ 0.972

      Tracy - Centennial == 0 \ \ \ \ -125.00 \ \ \ \ 112.63 \ -1.110
      \ \ \ 0.893

      (Adjusted p values reported -- single-step method)

      \;

      Warning message:

      In mcp2matrix(model, linfct = linfct) :

      \ \ covariate interactions found -- default contrast might be
      inappropriate

      \<gtr\> cld(glht(Ex16.8.1.lme,linfct=mcp(Variety="Tukey")),decreasing=TRUE)

      Centennial \ \ D74-7741 \ \ \ N72-137 \ \ N72-3058 \ \ N72-3148
      \ \ N73-1102 \ \ \ N73-693\ 

      \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ \ "a" \ \ \ \ \ \ "ab"
      \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab"\ 

      \ \ \ N73-877 \ \ \ N73-882 \ \ \ \ R73-81 \ \ \ \ R75-12
      \ \ \ \ \ Tracy\ 

      \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab"
      \ \ \ \ \ \ \ "b"\ 

      Warning messages:

      1: In mcp2matrix(model, linfct = linfct) :

      \ \ covariate interactions found -- default contrast might be
      inappropriate

      2: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      3: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      4: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      5: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      6: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      7: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      8: In RET$pfunction("adjusted", ...) : Completion with error \<gtr\>
      abseps

      \<gtr\> cld(glht(Ex16.8.1.lme,linfct=mcp(Variety="Tukey",interaction_average
      = TRUE

      \<less\>fct=mcp(Variety="Tukey",interaction_average = TRUE,
      covariate_average = TRUE

      \<less\>teraction_average = TRUE, covariate_average =
      TRUE)),decreasing=TRUE)

      Centennial \ \ D74-7741 \ \ \ N72-137 \ \ N72-3058 \ \ N72-3148
      \ \ N73-1102 \ \ \ N73-693\ 

      \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "bc"
      \ \ \ \ \ \ \ "a" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab"\ 

      \ \ \ N73-877 \ \ \ N73-882 \ \ \ \ R73-81 \ \ \ \ R75-12
      \ \ \ \ \ Tracy\ 

      \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ab" \ \ \ \ \ \ "ac" \ \ \ \ \ \ \ "c"
      \ \ \ \ \ \ "ac"\ 

      There were 14 warnings (use warnings() to see them)
    </unfolded-prog-io|>

    <\textput>
      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      rcbd.dat$Block \<less\>- rcbd.dat$Loca:rcbd.dat$Repe
    <|unfolded-prog-io>
      rcbd.dat$Block \<less\>- rcbd.dat$Loca:rcbd.dat$Repe
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.lme.Rda")) {

      \ \ Rprof("meta.lme.prof")

      \ \ meta.lme \<less\>- lme(YLD ~ Loca*Entry, random = ~ 1 \| Block,
      data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ Rprof("cotes.lme.prof")

      \ \ 

      \ \ cotes.lme \<less\>- lme(YLD ~ Loca*Entry, random = ~ 1 \| Block,
      weights = varIdent(form = ~ Plot \| Loca), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.lme, file="meta.lme.Rda")

      \ \ \ save(cotes.lme, file="cotes.lme.Rda")

      \ } else {

      \ \ \ load(file="meta.lme.Rda")

      \ \ \ load(file="cotes.lme.Rda")

      \ }

      meta.lme.summary \<less\>- summaryRprof("meta.lme.prof")

      cotes.lme.summary \<less\>- summaryRprof("cotes.lme.prof")

      head(meta.lme.summary[[1]])

      head(meta.lme.summary[[2]])

      head(cotes.lme.summary[[1]])

      head(cotes.lme.summary[[2]])

      \;
    <|unfolded-prog-io>
      if(!file.exists("meta.lme.Rda")) {

      + \ \ Rprof("meta.lme.prof")

      + \ \ meta.lme \<less\>- lme(YLD ~ Loca*Entry, random = ~ 1 \| Block,
      data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ Rprof("cotes.lme.prof")

      + \ \ 

      + \ \ cotes.lme \<less\>- lme(YLD ~ Loca*Entry, random = ~ 1 \| Block,
      weights = varIde

      \<less\>Loca*Entry, random = ~ 1 \| Block, weights = varIdent(form = ~
      Plot \| Loca),\ 

      \<less\> Block, weights = varIdent(form = ~ Plot \| Loca),
      data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.lme, file="meta.lme.Rda")

      + \ \ \ save(cotes.lme, file="cotes.lme.Rda")

      + \ } else {

      + \ \ \ load(file="meta.lme.Rda")

      + \ \ \ load(file="cotes.lme.Rda")

      + \ }

      \<gtr\> meta.lme.summary \<less\>- summaryRprof("meta.lme.prof")

      \<gtr\> cotes.lme.summary \<less\>- summaryRprof("cotes.lme.prof")

      \<gtr\> head(meta.lme.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3.12 \ \ \ 89.66 \ \ \ \ \ \ 3.12
      \ \ \ \ 89.66

      "array" \ \ \ \ \ \ \ \ \ \ \ \ \ 0.14 \ \ \ \ 4.02 \ \ \ \ \ \ 0.36
      \ \ \ \ 10.34

      "as.double" \ \ \ \ \ \ \ \ \ 0.14 \ \ \ \ 4.02 \ \ \ \ \ \ 0.14
      \ \ \ \ \ 4.02

      "solve.default" \ \ \ \ \ 0.04 \ \ \ \ 1.15 \ \ \ \ \ \ 0.20
      \ \ \ \ \ 5.75

      "apply" \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.57 \ \ \ \ \ \ 0.18
      \ \ \ \ \ 5.17

      "crossprod" \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.57 \ \ \ \ \ \ 0.02
      \ \ \ \ \ 0.57

      \<gtr\> head(meta.lme.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct
      self.time self.pct

      "lme" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3.48 \ \ \ 100.00
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "lme.formula" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3.48 \ \ \ 100.00
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 3.12 \ \ \ \ 89.66
      \ \ \ \ \ 3.12 \ \ \ 89.66

      "FUN" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 2.64 \ \ \ \ 75.86
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "Initialize" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 2.48 \ \ \ \ 71.26
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "Initialize.lmeStruct" \ \ \ \ \ \ 2.48 \ \ \ \ 71.26 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      \<gtr\> head(cotes.lme.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time
      total.pct

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 60.42 \ \ \ 89.67
      \ \ \ \ \ 60.42 \ \ \ \ 89.67

      "recalc.varFunc" \ \ \ \ \ \ 3.26 \ \ \ \ 4.84 \ \ \ \ \ \ 3.32
      \ \ \ \ \ 4.93

      "as.double" \ \ \ \ \ \ \ \ \ \ \ 2.08 \ \ \ \ 3.09 \ \ \ \ \ \ 2.08
      \ \ \ \ \ 3.09

      "logLik.reStruct" \ \ \ \ \ 0.50 \ \ \ \ 0.74 \ \ \ \ \ 51.54
      \ \ \ \ 76.49

      "is.finite" \ \ \ \ \ \ \ \ \ \ \ 0.40 \ \ \ \ 0.59 \ \ \ \ \ \ 0.40
      \ \ \ \ \ 0.59

      "as.numeric" \ \ \ \ \ \ \ \ \ \ 0.10 \ \ \ \ 0.15 \ \ \ \ \ \ 0.10
      \ \ \ \ \ 0.15

      \<gtr\> head(cotes.lme.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "lme" \ \ \ \ \ \ \ \ \ \ \ \ \ 67.38 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "lme.formula" \ \ \ \ \ 67.38 \ \ \ 100.00 \ \ \ \ \ 0.00 \ \ \ \ 0.00

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 60.42 \ \ \ \ 89.67 \ \ \ \ 60.42
      \ \ \ 89.67

      "recalc" \ \ \ \ \ \ \ \ \ \ 54.86 \ \ \ \ 81.42 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "logLik" \ \ \ \ \ \ \ \ \ \ 54.48 \ \ \ \ 80.85 \ \ \ \ \ 0.04
      \ \ \ \ 0.06

      ".Call" \ \ \ \ \ \ \ \ \ \ \ 54.38 \ \ \ \ 80.71 \ \ \ \ \ 0.02
      \ \ \ \ 0.03

      \<gtr\>\ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      VarCorr(meta.lme)

      VarCorr(cotes.lme)
    <|unfolded-prog-io>
      VarCorr(meta.lme)

      Block = pdLogChol(1)\ 

      \ \ \ \ \ \ \ \ \ \ \ \ Variance \ StdDev \ \ 

      (Intercept) 0.1416624 0.3763806

      Residual \ \ \ 0.9411682 0.9701382

      \<gtr\> VarCorr(cotes.lme)

      Block = pdLogChol(1)\ 

      \ \ \ \ \ \ \ \ \ \ \ \ Variance \ \ StdDev \ \ 

      (Intercept) 0.06096255 0.2469060

      Residual \ \ \ 0.45344977 0.6733868
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      #detach("package:nlme")
    <|unfolded-prog-io>
      #detach("package:nlme")
    </unfolded-prog-io|>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      \;
    </input>

    <\textput>
      <\textput>
        <section|glmmPQL>
      </textput>

      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(MASS)

      packageDescription("MASS")
    <|unfolded-prog-io>
      library(MASS)

      \<gtr\> packageDescription("MASS")

      Package: MASS

      Priority: recommended

      Version: 7.3-45

      Date: 2015-11-10

      Revision: $Rev: 3453 $

      Depends: R (\<gtr\>= 3.1.0), grDevices, graphics, stats, utils

      Imports: methods

      Suggests: lattice, nlme, nnet, survival

      Authors@R: c(person("Brian", "Ripley", role = c("aut", "cre", "cph"),

      \ \ \ \ \ \ \ email = "ripley@stats.ox.ac.uk"), person("Bill",
      "Venables",

      \ \ \ \ \ \ \ role = "ctb"), person(c("Douglas", "M."), "Bates", role =

      \ \ \ \ \ \ \ "ctb"), person("Kurt", "Hornik", role = "trl", comment =

      \ \ \ \ \ \ \ "partial port ca 1998"), person("Albrecht", "Gebhardt",
      role

      \ \ \ \ \ \ \ = "trl", comment = "partial port ca 1998"),
      person("David",

      \ \ \ \ \ \ \ "Firth", role = "ctb"))

      Description: Functions and datasets to support Venables and Ripley,

      \ \ \ \ \ \ \ "Modern Applied Statistics with S" (4th edition, 2002).

      Title: Support Functions and Datasets for Venables and Ripley's MASS

      LazyData: yes

      ByteCompile: yes

      License: GPL-2 \| GPL-3

      URL: http://www.stats.ox.ac.uk/pub/MASS4/

      NeedsCompilation: yes

      Packaged: 2016-04-21 09:06:13 UTC; ripley

      Author: Brian Ripley [aut, cre, cph], Bill Venables [ctb], Douglas M.

      \ \ \ \ \ \ \ Bates [ctb], Kurt Hornik [trl] (partial port ca 1998),

      \ \ \ \ \ \ \ Albrecht Gebhardt [trl] (partial port ca 1998), David
      Firth

      \ \ \ \ \ \ \ [ctb]

      Maintainer: Brian Ripley \<less\>ripley@stats.ox.ac.uk\<gtr\>

      Repository: CRAN

      Date/Publication: 2016-04-21 11:13:45

      Built: R 3.3.1; x86_64-apple-darwin13.4.0; 2016-06-24 18:37:19 UTC;

      \ \ \ \ \ \ \ unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/MASS/Meta/package.rds
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.glmmPQL \<less\>- glmmPQL(obs ~ 0 + trt, random = ~ 1 \|
      rep,family=gaussian, data = Table5.7)
    <|unfolded-prog-io>
      Table5.7.glmmPQL \<less\>- glmmPQL(obs ~ 0 + trt, random = ~ 1 \|
      rep,family=gaussi

      \<less\>QL(obs ~ 0 + trt, random = ~ 1 \| rep,family=gaussian, data =
      Table5.7)

      iteration 1

      iteration 2
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.glmmPQL);v()
    <|unfolded-prog-io>
      plot(Table5.7.glmmPQL);v()

      <image|<tuple|<#>|ps>|0.8par|||>
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      qqnorm(Table5.7.glmmPQL);v()
    <|unfolded-prog-io>
      qqnorm(Table5.7.glmmPQL);v()

      <image|<tuple||ps>|0.8par|||>
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.glmmPQL)
    <|unfolded-prog-io>
      summary(Table5.7.glmmPQL)

      Linear mixed-effects model fit by maximum likelihood

      \ Data: Table5.7\ 

      \ \ AIC BIC logLik

      \ \ \ NA \ NA \ \ \ \ NA

      \;

      Random effects:

      \ Formula: ~1 \| rep

      \ \ \ \ \ \ \ \ (Intercept) \ Residual

      StdDev: \ \ \ 0.818606 0.9764266

      \;

      Variance function:

      \ Structure: fixed weights

      \ Formula: ~invwt\ 

      Fixed effects: obs ~ 0 + trt\ 

      \ \ \ \ \ \ \ \ Value Std.Error DF \ t-value p-value

      trt1 3.940864 0.9679091 13 4.071523 \ 0.0013

      trt2 4.905000 0.7470520 13 6.565808 \ 0.0000

      trt3 5.312500 0.7470520 13 7.111286 \ 0.0000

      trt4 4.872500 0.7470520 13 6.522304 \ 0.0000

      trt5 5.567500 0.7470520 13 7.452627 \ 0.0000

      trt6 7.050000 0.7470520 13 9.437095 \ 0.0000

      \ Correlation:\ 

      \ \ \ \ \ trt1 \ trt2 \ trt3 \ trt4 \ trt5\ 

      trt2 0.319 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt3 0.319 0.413 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt4 0.319 0.413 0.413 \ \ \ \ \ \ \ \ \ \ \ 

      trt5 0.319 0.413 0.413 0.413 \ \ \ \ \ 

      trt6 0.319 0.413 0.413 0.413 0.413

      \;

      Standardized Within-Group Residuals:

      \ \ \ \ \ \ \ Min \ \ \ \ \ \ \ \ Q1 \ \ \ \ \ \ \ Med
      \ \ \ \ \ \ \ \ Q3 \ \ \ \ \ \ \ Max\ 

      -1.6157824 -0.7811466 \ 0.1933771 \ 0.7529711 \ 1.6636381\ 

      \;

      Number of Observations: 22

      Number of Groups: 4\ 
    </unfolded-prog-io|>

    <\textput>
      Note that the summary function fails to report AIC, BIC and logLik.
      Perhaps the generic functions have been over-riden.\ 
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      logLik(Table5.7.glmmPQL)
    <|unfolded-prog-io>
      logLik(Table5.7.glmmPQL)

      'log Lik.' NA (df=8)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      logLik.glmmPQL
    <|unfolded-prog-io>
      logLik.glmmPQL

      Error: object 'logLik.glmmPQL' not found
    </unfolded-prog-io|>

    <\textput>
      It looks like logLik might be overriden but is not visible. We can go
      to the source code to confirm this. The following is found in
      MASS/R/glmmPQL.R

      \;

      logLik.glmmPQL \<less\>- function (object, ...)

      {

      \ \ \ \ p \<less\>- object$dims$ncol[object$dims$Q + 1]

      \ \ \ \ N \<less\>- object$dims$N

      \ \ \ \ val \<less\>- as.numeric(NA)

      \ \ \ \ attr(val, "nall") \<less\>- N

      \ \ \ \ attr(val, "nobs") \<less\>- N

      \ \ \ \ attr(val, "df") \<less\>- p +
      length(coef(object[["modelStruct"]])) + 1

      \ \ \ \ class(val) \<less\>- "logLik"

      \ \ \ \ val

      }
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.glmmPQL \<less\>- update(Table5.7.glmmPQL, . ~ . -trt)
    <|unfolded-prog-io>
      Table5.7.red.glmmPQL \<less\>- update(Table5.7.glmmPQL, . ~ . -trt)

      iteration 1

      iteration 2
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      anova(Table5.7.glmmPQL)

      anova(Table5.7.glmmPQL,Table5.7.red.glmmPQL)
    <|unfolded-prog-io>
      anova(Table5.7.glmmPQL)

      Error in anova.glmmPQL(Table5.7.glmmPQL) :\ 

      \ \ 'anova' is not available for PQL fits

      \<gtr\> anova(Table5.7.glmmPQL,Table5.7.red.glmmPQL)

      Error in anova.glmmPQL(Table5.7.glmmPQL, Table5.7.red.glmmPQL) :\ 

      \ \ 'anova' is not available for PQL fits
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      vcov(Table5.7.glmmPQL)

      coef(Table5.7.glmmPQL)
    <|unfolded-prog-io>
      vcov(Table5.7.glmmPQL)

      \ \ \ \ \ \ \ \ \ \ trt1 \ \ \ \ \ trt2 \ \ \ \ \ trt3 \ \ \ \ \ trt4
      \ \ \ \ \ trt5 \ \ \ \ \ trt6

      trt1 0.6813440 0.1675289 0.1675289 0.1675289 0.1675289 0.1675289

      trt2 0.1675289 0.4058812 0.1675289 0.1675289 0.1675289 0.1675289

      trt3 0.1675289 0.1675289 0.4058812 0.1675289 0.1675289 0.1675289

      trt4 0.1675289 0.1675289 0.1675289 0.4058812 0.1675289 0.1675289

      trt5 0.1675289 0.1675289 0.1675289 0.1675289 0.4058812 0.1675289

      trt6 0.1675289 0.1675289 0.1675289 0.1675289 0.1675289 0.4058812

      \<gtr\> coef(Table5.7.glmmPQL)

      \ \ \ \ \ \ trt1 \ trt2 \ \ trt3 \ \ trt4 \ \ trt5 trt6 (Intercept)

      1 3.940864 4.905 5.3125 4.8725 5.5675 7.05 \ -1.1050558

      2 3.940864 4.905 5.3125 4.8725 5.5675 7.05 \ \ 0.9267833

      3 3.940864 4.905 5.3125 4.8725 5.5675 7.05 \ -0.0348070

      4 3.940864 4.905 5.3125 4.8725 5.5675 7.05 \ \ 0.2130795
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      class(Table5.7.glmmPQL) \ \ \ \ \ 

      #methods("vcov");methods("anova") \ 

      \;

      summary(aov(Table5.7.glmmPQL))

      VarCorr(Table5.7.glmmPQL)

      fixef(Table5.7.glmmPQL)

      summary(glht(Table5.7.glmmPQL,linfct=mcp(trt="Dunnett")))

      cld(glht(Table5.7.glmmPQL,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      lsmeans(Table5.7.glmmPQL,cld ~ trt)
    <|unfolded-prog-io>
      class(Table5.7.glmmPQL) \ \ \ \ \ 

      [1] "glmmPQL" "lme" \ \ \ 

      \<gtr\> #methods("vcov");methods("anova") \ 

      \<gtr\>\ 

      \<gtr\> summary(aov(Table5.7.glmmPQL))

      Error in eval(expr, envir, enclos) : object 'obs' not found

      \<gtr\> VarCorr(Table5.7.glmmPQL)

      rep = pdLogChol(1)\ 

      \ \ \ \ \ \ \ \ \ \ \ \ Variance \ StdDev \ \ 

      (Intercept) 0.6701158 0.8186060

      Residual \ \ \ 0.9534090 0.9764266

      \<gtr\> fixef(Table5.7.glmmPQL)

      \ \ \ \ trt1 \ \ \ \ trt2 \ \ \ \ trt3 \ \ \ \ trt4 \ \ \ \ trt5
      \ \ \ \ trt6\ 

      3.940864 4.905000 5.312500 4.872500 5.567500 7.050000\ 

      \<gtr\> summary(glht(Table5.7.glmmPQL,linfct=mcp(trt="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: glmmPQL(fixed = obs ~ 0 + trt, random = ~1 \| rep, family =
      gaussian,\ 

      \ \ \ \ data = Table5.7)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ 

      2 - 1 == 0 \ \ 0.9641 \ \ \ \ 0.8673 \ \ 1.112 \ 0.60798 \ \ 

      3 - 1 == 0 \ \ 1.3716 \ \ \ \ 0.8673 \ \ 1.582 \ 0.30748 \ \ 

      4 - 1 == 0 \ \ 0.9316 \ \ \ \ 0.8673 \ \ 1.074 \ 0.63572 \ \ 

      5 - 1 == 0 \ \ 1.6266 \ \ \ \ 0.8673 \ \ 1.876 \ 0.17967 \ \ 

      6 - 1 == 0 \ \ 3.1091 \ \ \ \ 0.8673 \ \ 3.585 \ 0.00126 **

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;

      \<gtr\> cld(glht(Table5.7.glmmPQL,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ \ 1 \ \ \ 2 \ \ \ 3 \ \ \ 4 \ \ \ 5 \ \ \ 6\ 

      \ "b" \ "b" "ab" \ "b" "ab" \ "a"\ 

      \<gtr\> lsmeans(Table5.7.glmmPQL,cld ~ trt)

      \ trt \ \ lsmean \ \ \ \ \ \ \ SE df lower.CL upper.CL .group

      \ 1 \ \ 3.940864 0.9679091 13 1.849823 6.031904 \ 1 \ \ \ 

      \ 4 \ \ 4.872500 0.7470520 13 3.258592 6.486408 \ 1 \ \ \ 

      \ 2 \ \ 4.905000 0.7470520 13 3.291092 6.518908 \ 1 \ \ \ 

      \ 3 \ \ 5.312500 0.7470520 13 3.698592 6.926408 \ 1 \ \ \ 

      \ 5 \ \ 5.567500 0.7470520 13 3.953592 7.181408 \ 1 \ \ \ 

      \ 6 \ \ 7.050000 0.7470520 13 5.436092 8.663908 \ 1 \ \ \ 

      \;

      Results are given on the identity (not the response) scale.\ 

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 
    </unfolded-prog-io|>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      \;
    </input>

    <\textput>
      <section|lmer>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(lme4)

      packageDescription("lme4")

      Table5.7.lmer \<less\>- lmer(obs ~ 0+trt + (1 \| rep), data=Table5.7)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ mode(Table5.7.lmer)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ class(Table5.7.lmer)
    <|unfolded-prog-io>
      library(lme4)

      Loading required package: Matrix

      \;

      Attaching package: 'lme4'

      \;

      The following object is masked from 'package:nlme':

      \;

      \ \ \ \ lmList

      \;

      \<gtr\> packageDescription("lme4")

      Package: lme4

      Version: 1.1-12

      Title: Linear Mixed-Effects Models using 'Eigen' and S4

      Authors@R: c(person("Douglas","Bates", role="aut"),

      \ \ \ \ \ \ \ person("Martin","Maechler", role="aut"),

      \ \ \ \ \ \ \ person("Ben","Bolker",email="bbolker+lme4@gmail.com",

      \ \ \ \ \ \ \ role=c("aut","cre")),
      person("Steven","Walker",role="aut"),

      \ \ \ \ \ \ \ person("Rune Haubo Bojesen","Christensen", role="ctb"),

      \ \ \ \ \ \ \ person("Henrik","Singmann", role="ctb"), person("Bin",
      "Dai",

      \ \ \ \ \ \ \ role="ctb"), person("Gabor", "Grothendieck", role="ctb"),

      \ \ \ \ \ \ \ person("Peter", "Green", role="ctb"))

      Contact: LME4 Authors \<less\>lme4-authors@lists.r-forge.r-project.org\<gtr\>

      Description: Fit linear and generalized linear mixed-effects models.

      \ \ \ \ \ \ \ The models and their components are represented using S4

      \ \ \ \ \ \ \ classes and methods. \ The core computational algorithms
      are

      \ \ \ \ \ \ \ implemented using the 'Eigen' C++ library for numerical

      \ \ \ \ \ \ \ linear algebra and 'RcppEigen' "glue".

      Depends: R (\<gtr\>= 3.0.2), Matrix (\<gtr\>= 1.1.1), methods, stats

      LinkingTo: Rcpp (\<gtr\>= 0.10.5), RcppEigen

      Imports: graphics, grid, splines, utils, parallel, MASS, lattice,

      \ \ \ \ \ \ \ nlme (\<gtr\>= 3.1-123), minqa (\<gtr\>= 1.1.15), nloptr
      (\<gtr\>= 1.0.4)

      Suggests: knitr, boot, PKPDmodels, MEMSS, testthat (\<gtr\>= 0.8.1),

      \ \ \ \ \ \ \ ggplot2, mlmRev, optimx (\<gtr\>= 2013.8.6), gamm4,
      pbkrtest,

      \ \ \ \ \ \ \ HSAUR2, numDeriv

      VignetteBuilder: knitr

      LazyData: yes

      License: GPL (\<gtr\>= 2)

      URL: https://github.com/lme4/lme4/ http://lme4.r-forge.r-project.org/

      BugReports: https://github.com/lme4/lme4/issues

      NeedsCompilation: yes

      Packaged: 2016-04-16 03:11:44 UTC; bolker

      Author: Douglas Bates [aut], Martin Maechler [aut], Ben Bolker [aut,

      \ \ \ \ \ \ \ cre], Steven Walker [aut], Rune Haubo Bojesen Christensen

      \ \ \ \ \ \ \ [ctb], Henrik Singmann [ctb], Bin Dai [ctb], Gabor

      \ \ \ \ \ \ \ Grothendieck [ctb], Peter Green [ctb]

      Maintainer: Ben Bolker \<less\>bbolker+lme4@gmail.com\<gtr\>

      Repository: CRAN

      Date/Publication: 2016-04-16 20:40:11

      Built: R 3.3.0; x86_64-apple-darwin13.4.0; 2016-05-05 12:10:45 UTC;

      \ \ \ \ \ \ \ unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/lme4/Meta/package.rds\ 

      \<gtr\> Table5.7.lmer \<less\>- lmer(obs ~ 0+trt + (1 \| rep),
      data=Table5.7)

      \<gtr\> \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ mode(Table5.7.lmer)

      [1] "S4"

      \<gtr\> \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ class(Table5.7.lmer)

      [1] "lmerMod"

      attr(,"package")

      [1] "lme4"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.lmer);v()

      qqnorm(Table5.7.lmer);v()
    <|unfolded-prog-io>
      plot(Table5.7.lmer);v()

      <image|<tuple||ps>|0.8par|||>\ 

      \<gtr\> qqnorm(Table5.7.lmer);v()

      Error in min(x, na.rm = na.rm) : invalid 'type' (list) of argument

      In addition: Warning message:

      In is.na(y) : is.na() applied to non-(list or vector) of type 'S4'
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.lmer \<less\>- update(Table5.7.lmer, . ~ . -trt)

      anova(Table5.7.red.lmer,Table5.7.lmer)
    <|unfolded-prog-io>
      Table5.7.red.lmer \<less\>- update(Table5.7.lmer, . ~ . -trt)

      \<gtr\> anova(Table5.7.red.lmer,Table5.7.lmer)

      refitting model(s) with ML (instead of REML)

      Data: Table5.7

      Models:

      Table5.7.red.lmer: obs ~ (1 \| rep) - 1

      Table5.7.lmer: obs ~ 0 + trt + (1 \| rep)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Df \ \ \ AIC \ \ \ BIC \ logLik
      deviance \ Chisq Chi Df Pr(\<gtr\>Chisq)

      Table5.7.red.lmer \ 3 86.063 89.336 -40.032 \ \ 80.063
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.lmer \ \ \ \ \ 8 83.702 92.430 -33.851 \ \ 67.702 12.361
      \ \ \ \ \ 5 \ \ \ 0.03016

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.red.lmer \ 

      Table5.7.lmer \ \ \ \ *

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      anova(Table5.7.lmer)
    <|unfolded-prog-io>
      anova(Table5.7.lmer)

      Analysis of Variance Table

      \ \ \ \ Df Sum Sq Mean Sq F value

      trt \ 6 153.19 \ 25.532 \ 19.365
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      coef(Table5.7.lmer)

      vcov(Table5.7.lmer)
    <|unfolded-prog-io>
      coef(Table5.7.lmer)

      $rep

      \ \ (Intercept) \ \ \ \ trt1 \ trt2 \ \ trt3 \ \ trt4 \ \ trt5 trt6

      1 -1.09528612 3.941652 4.905 5.3125 4.8725 5.5675 7.05

      2 \ 0.91858973 3.941652 4.905 5.3125 4.8725 5.5675 7.05

      3 -0.03464577 3.941652 4.905 5.3125 4.8725 5.5675 7.05

      4 \ 0.21134216 3.941652 4.905 5.3125 4.8725 5.5675 7.05

      \;

      attr(,"class")

      [1] "coef.mer"

      \<gtr\> vcov(Table5.7.lmer)

      6 x 6 Matrix of class "dpoMatrix"

      \ \ \ \ \ \ \ \ \ \ trt1 \ \ \ \ \ trt2 \ \ \ \ \ trt3 \ \ \ \ \ trt4
      \ \ \ \ \ trt5 \ \ \ \ \ trt6

      trt1 0.9328203 0.2227107 0.2227107 0.2227107 0.2227107 0.2227107

      trt2 0.2227107 0.5523320 0.2227107 0.2227107 0.2227107 0.2227107

      trt3 0.2227107 0.2227107 0.5523320 0.2227107 0.2227107 0.2227107

      trt4 0.2227107 0.2227107 0.2227107 0.5523320 0.2227107 0.2227107

      trt5 0.2227107 0.2227107 0.2227107 0.2227107 0.5523320 0.2227107

      trt6 0.2227107 0.2227107 0.2227107 0.2227107 0.2227107 0.5523320
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      \;

      class(Table5.7.lmer)

      mode(Table5.7.lmer)

      methods("summary")

      methods(class="lmerMod")

      Ex16.8.1.lmer \<less\>- lmer(Yield ~ 0 + Variety + (1 \| Trial/Rep) +
      (1 \| Trial:Variety), data=Ex16.8.1)

      \;

      anova(Ex16.8.1.lmer) \ \ \ \ 

      \;

      \;

      VarCorr(Table5.7.lmer)

      fixef(Table5.7.lmer)

      ranef(Table5.7.lmer)

      \;

      summary(glht(Table5.7.lmer,linfct=mcp(trt="Dunnett")))

      cld(glht(Table5.7.lmer,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \;

      lsmeans(Table5.7.lmer,cld ~ trt)
    <|unfolded-prog-io>
      \;

      \<gtr\> class(Table5.7.lmer)

      [1] "lmerMod"

      attr(,"package")

      [1] "lme4"

      \<gtr\> mode(Table5.7.lmer)

      [1] "S4"

      \<gtr\> methods("summary")

      \ [1] summary,ANY-method \ \ \ \ \ \ \ \ \ \ \ \ summary,diagonalMatrix-method\ 

      \ [3] summary,sparseMatrix-method \ \ \ summary.Date
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \ [5] summary.PDF_Dictionary* \ \ \ \ \ \ \ summary.PDF_Stream*
      \ \ \ \ \ \ \ \ \ \ 

      \ [7] summary.POSIXct \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.POSIXlt
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      \ [9] summary.aareg* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.aov
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [11] summary.aovlist* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.aspell*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [13] summary.cch* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.check_packages_in_dir*

      [15] summary.connection \ \ \ \ \ \ \ \ \ \ \ \ summary.corAR1*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [17] summary.corARMA* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.corCAR1*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [19] summary.corCompSymm* \ \ \ \ \ \ \ \ \ \ summary.corExp*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [21] summary.corGaus* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.corIdent*
      \ \ \ \ \ \ \ \ \ \ \ \ 

      [23] summary.corLin* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.corNatural*
      \ \ \ \ \ \ \ \ \ \ 

      [25] summary.corRatio* \ \ \ \ \ \ \ \ \ \ \ \ \ summary.corSpher*
      \ \ \ \ \ \ \ \ \ \ \ \ 

      [27] summary.corStruct* \ \ \ \ \ \ \ \ \ \ \ \ summary.corSymm*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [29] summary.coxph* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.coxph.penal*
      \ \ \ \ \ \ \ \ \ 

      [31] summary.data.frame \ \ \ \ \ \ \ \ \ \ \ \ summary.default
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [33] summary.ecdf* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.factor
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [35] summary.ggplot* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.glht*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [37] summary.glht.list* \ \ \ \ \ \ \ \ \ \ \ \ summary.glm
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [39] summary.gls* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.infl*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [41] summary.lm \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.lmList*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [43] summary.lmList4* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.lme*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [45] summary.loess* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.loglm*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [47] summary.lsm.list* \ \ \ \ \ \ \ \ \ \ \ \ \ summary.manova
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [49] summary.matrix \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.mcmc*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [51] summary.mcmc.list* \ \ \ \ \ \ \ \ \ \ \ \ summary.merMod*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [53] summary.mlm* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.modelStruct*
      \ \ \ \ \ \ \ \ \ 

      [55] summary.negbin* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.nls*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [57] summary.nlsList* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.packageStatus*
      \ \ \ \ \ \ \ 

      [59] summary.pdBlocked* \ \ \ \ \ \ \ \ \ \ \ \ summary.pdCompSymm*
      \ \ \ \ \ \ \ \ \ \ 

      [61] summary.pdDiag* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.pdIdent*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [63] summary.pdLogChol* \ \ \ \ \ \ \ \ \ \ \ \ summary.pdMat*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [65] summary.pdNatural* \ \ \ \ \ \ \ \ \ \ \ \ summary.pdSymm*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [67] summary.polr* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.ppr*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [69] summary.prcomp* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.princomp*
      \ \ \ \ \ \ \ \ \ \ \ \ 

      [71] summary.proc_time \ \ \ \ \ \ \ \ \ \ \ \ \ summary.pyears*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [73] summary.ratetable* \ \ \ \ \ \ \ \ \ \ \ \ summary.reStruct*
      \ \ \ \ \ \ \ \ \ \ \ \ 

      [75] summary.ref.grid* \ \ \ \ \ \ \ \ \ \ \ \ \ summary.rlm*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [77] summary.shingle* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.srcfile
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [79] summary.srcref \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.stepfun
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [81] summary.stl* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.summary.merMod*
      \ \ \ \ \ \ 

      [83] summary.survexp* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.survfit*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [85] summary.survfitms* \ \ \ \ \ \ \ \ \ \ \ \ summary.survreg*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [87] summary.table \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.trellis*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [89] summary.tukeysmooth* \ \ \ \ \ \ \ \ \ \ summary.varComb*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [91] summary.varConstPower* \ \ \ \ \ \ \ \ summary.varExp*
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [93] summary.varFixed* \ \ \ \ \ \ \ \ \ \ \ \ \ summary.varFunc*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [95] summary.varIdent* \ \ \ \ \ \ \ \ \ \ \ \ \ summary.varPower*
      \ \ \ \ \ \ \ \ \ \ \ \ 

      [97] summary.yearmon* \ \ \ \ \ \ \ \ \ \ \ \ \ \ summary.yearqtr*
      \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [99] summary.zoo* \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      see '?methods' for accessing help and source code

      \<gtr\> methods(class="lmerMod")

      [1] getL show

      see '?methods' for accessing help and source code

      \<gtr\> Ex16.8.1.lmer \<less\>- lmer(Yield ~ 0 + Variety + (1 \|
      Trial/Rep) + (1 \| Trial:Va

      \<less\>ld ~ 0 + Variety + (1 \| Trial/Rep) + (1 \| Trial:Variety),
      data=Ex16.8.1)

      \<gtr\>\ 

      \<gtr\> anova(Ex16.8.1.lmer) \ \ \ \ 

      Analysis of Variance Table

      \ \ \ \ \ \ \ \ Df \ Sum Sq Mean Sq F value

      Variety 12 3325873 \ 277156 \ 14.566

      \<gtr\>\ 

      \<gtr\>\ 

      \<gtr\> VarCorr(Table5.7.lmer)

      \ Groups \ \ Name \ \ \ \ \ \ \ Std.Dev.

      \ rep \ \ \ \ \ (Intercept) 0.94384\ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ 1.14825\ 

      \<gtr\> fixef(Table5.7.lmer)

      \ \ \ \ trt1 \ \ \ \ trt2 \ \ \ \ trt3 \ \ \ \ trt4 \ \ \ \ trt5
      \ \ \ \ trt6\ 

      3.941652 4.905000 5.312500 4.872500 5.567500 7.050000\ 

      \<gtr\> ranef(Table5.7.lmer)

      $rep

      \ \ (Intercept)

      1 -1.09528612

      2 \ 0.91858973

      3 -0.03464577

      4 \ 0.21134216

      \;

      \<gtr\>\ 

      \<gtr\> summary(glht(Table5.7.lmer,linfct=mcp(trt="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: lmer(formula = obs ~ 0 + trt + (1 \| rep), data = Table5.7)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ 

      2 - 1 == 0 \ \ 0.9633 \ \ \ \ 1.0197 \ \ 0.945 \ 0.73119 \ \ 

      3 - 1 == 0 \ \ 1.3708 \ \ \ \ 1.0197 \ \ 1.344 \ 0.44623 \ \ 

      4 - 1 == 0 \ \ 0.9308 \ \ \ \ 1.0197 \ \ 0.913 \ 0.75397 \ \ 

      5 - 1 == 0 \ \ 1.6258 \ \ \ \ 1.0197 \ \ 1.594 \ 0.30056 \ \ 

      6 - 1 == 0 \ \ 3.1083 \ \ \ \ 1.0197 \ \ 3.048 \ 0.00869 **

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;

      \<gtr\> cld(glht(Table5.7.lmer,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ \ 1 \ \ \ 2 \ \ \ 3 \ \ \ 4 \ \ \ 5 \ \ \ 6\ 

      \ "b" "ab" "ab" "ab" "ab" \ "a"\ 

      \<gtr\>\ 

      \<gtr\> lsmeans(Table5.7.lmer,cld ~ trt)

      Loading required namespace: pbkrtest

      \ trt \ \ lsmean \ \ \ \ \ \ \ SE \ \ \ df lower.CL upper.CL .group

      \ 1 \ \ 3.941652 0.9782025 14.32 1.847973 6.035330 \ 1 \ \ \ 

      \ 4 \ \ 4.872500 0.7431904 \ 9.37 3.201425 6.543575 \ 1 \ \ \ 

      \ 2 \ \ 4.905000 0.7431904 \ 9.37 3.233925 6.576075 \ 1 \ \ \ 

      \ 3 \ \ 5.312500 0.7431904 \ 9.37 3.641425 6.983575 \ 1 \ \ \ 

      \ 5 \ \ 5.567500 0.7431904 \ 9.37 3.896425 7.238575 \ 1 \ \ \ 

      \ 6 \ \ 7.050000 0.7431904 \ 9.37 5.378925 8.721075 \ 1 \ \ \ 

      \;

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 
    </unfolded-prog-io|>

    \;

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.lmer.Rda")) {

      \ \ Rprof("meta.lmer.prof")

      \ \ meta.lmer \<less\>- lmer(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.lmer,file="meta.lmer.Rda")

      \ }

      meta.lmer.summary \<less\>- summaryRprof("meta.lmer.prof")

      head(meta.lmer.summary[[1]])

      head(meta.lmer.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("meta.lmer.Rda")) {

      + \ \ Rprof("meta.lmer.prof")

      + \ \ meta.lmer \<less\>- lmer(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), data=

      \<less\> Entry + (1 \| Loca/Repe) + (1 \| Loca:Entry), data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.lmer,file="meta.lmer.Rda")

      + \ }

      \<gtr\> meta.lmer.summary \<less\>- summaryRprof("meta.lmer.prof")

      \<gtr\> head(meta.lmer.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      ".Call" \ \ \ \ \ \ \ \ \ 0.16 \ \ \ 88.89 \ \ \ \ \ \ 0.16
      \ \ \ \ 88.89

      "KhatriRao" \ \ \ \ \ 0.02 \ \ \ 11.11 \ \ \ \ \ \ 0.02 \ \ \ \ 11.11

      \<gtr\> head(meta.lmer.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "lmer" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.18 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      ".Call" \ \ \ \ \ \ \ \ \ \ \ \ \ 0.16 \ \ \ \ 88.89 \ \ \ \ \ 0.16
      \ \ \ 88.89

      "\<Anonymous\>" \ \ \ \ \ \ \ 0.14 \ \ \ \ 77.78 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "do.call" \ \ \ \ \ \ \ \ \ \ \ 0.14 \ \ \ \ 77.78 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "optimizeLmer" \ \ \ \ \ \ 0.14 \ \ \ \ 77.78 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "optwrap" \ \ \ \ \ \ \ \ \ \ \ 0.14 \ \ \ \ 77.78 \ \ \ \ \ 0.00
      \ \ \ \ 0.00
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("cotes.lmer.Rda")) {

      \ \ Rprof("cotes.lmer.prof")

      \ \ cotes.lmer \<less\>- lmer(YLD ~ 0 + Entry + (1 \| Loca:Repe) + (0 +
      Entry \| Loca), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(cotes.lmer,file="cotes.lmer.Rda")

      } else {

      \ \ load(file="cotes.lmer.Rda")

      }

      cotes.lmer.summary \<less\>- summaryRprof("cotes.lmer.prof")

      head(cotes.lmer.summary[[1]])

      head(cotes.lmer.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("cotes.lmer.Rda")) {

      + \ \ Rprof("cotes.lmer.prof")

      + \ \ cotes.lmer \<less\>- lmer(YLD ~ 0 + Entry + (1 \| Loca:Repe) + (0
      + Entry \| Loca)

      \<less\>~ 0 + Entry + (1 \| Loca:Repe) + (0 + Entry \| Loca),
      data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(cotes.lmer,file="cotes.lmer.Rda")

      + } else {

      + \ \ load(file="cotes.lmer.Rda")

      + }

      \<gtr\> cotes.lmer.summary \<less\>- summaryRprof("cotes.lmer.prof")

      \<gtr\> head(cotes.lmer.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time
      total.pct

      ".Call" \ \ \ \ \ \ \ \ \ \ \ 5241.20 \ \ \ 97.37 \ \ \ 5253.06
      \ \ \ \ 97.59

      "spos" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 29.48 \ \ \ \ 0.55 \ \ \ \ \ 29.86
      \ \ \ \ \ 0.55

      "$" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 25.86 \ \ \ \ 0.48
      \ \ \ \ \ 58.10 \ \ \ \ \ 1.08

      "as.environment" \ \ \ \ 18.06 \ \ \ \ 0.34 \ \ \ \ \ 18.06
      \ \ \ \ \ 0.34

      "\<Anonymous\>" \ \ \ \ \ \ \ 14.28 \ \ \ \ 0.27 \ \ \ \ 256.24
      \ \ \ \ \ 4.76

      "deriv12" \ \ \ \ \ \ \ \ \ \ \ 13.32 \ \ \ \ 0.25 \ \ \ 5137.46
      \ \ \ \ 95.44

      \<gtr\> head(cotes.lmer.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "lmer" \ \ \ \ \ \ \ \ \ \ \ 5382.82 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "optimizeLmer" \ \ \ 5382.68 \ \ \ 100.00 \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "optwrap" \ \ \ \ \ \ \ \ 5382.64 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      ".Call" \ \ \ \ \ \ \ \ \ \ 5253.06 \ \ \ \ 97.59 \ \ 5241.20
      \ \ \ 97.37

      "deriv12" \ \ \ \ \ \ \ \ 5137.46 \ \ \ \ 95.44 \ \ \ \ 13.32
      \ \ \ \ 0.25

      "fun" \ \ \ \ \ \ \ \ \ \ \ \ 5093.90 \ \ \ \ 94.63 \ \ \ \ \ 7.22
      \ \ \ \ 0.13
    </unfolded-prog-io|>

    from cotes.lmer

    <\textput>
      Warning messages:

      1: In commonArgs(par, fn, control, environment()) :

      \ \ maxfun \<less\> 10 * length(par)^2 is not recommended.

      2: In optwrap(optimizer, devfun, getStart(start, rho$lower, rho$pp),
      \ :

      \ \ convergence code 1 from bobyqa: bobyqa -- maximum number of
      function evaluations exceeded

      3: In commonArgs(par, fn, control, environment()) :

      \ \ maxfun \<less\> 10 * length(par)^2 is not recommended.

      4: In optwrap(optimizer, devfun, opt$par, lower = rho$lower, control =
      control, \ :

      \ \ convergence code 1 from bobyqa: bobyqa -- maximum number of
      function evaluations exceeded

      5: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,
      \ :

      \ \ unable to evaluate scaled gradient

      6: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,
      \ :

      \ \ Model failed to converge: degenerate \ Hessian with 4 negative
      eigenvalues

      \;
    </textput>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      \;
    </input>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      #detach("package:lme4")
    <|unfolded-prog-io>
      detach("package:lme4")
    </unfolded-prog-io|>

    <\textput>
      <section|blmer>

      Maximum a posteriori estimation for linear and generalized linear
      mixed-effects models in a Bayesian setting.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(blme)

      packageDescription("blme")
    <|unfolded-prog-io>
      library(blme)

      \<gtr\> packageDescription("blme")

      Package: blme

      Version: 1.0-4

      Date: 2015-06-13

      Title: Bayesian Linear Mixed-Effects Models

      Author: Vincent Dorie \<less\>vjd4@nyu.edu\<gtr\>

      Maintainer: Vincent Dorie \<less\>vjd4@nyu.edu\<gtr\>

      Description: Maximum a posteriori estimation for linear and

      \ \ \ \ \ \ \ generalized linear mixed-effects models in a Bayesian

      \ \ \ \ \ \ \ setting. Extends 'lme4' by Douglas Bates, Martin
      Maechler,

      \ \ \ \ \ \ \ Ben Bolker, and Steve Walker.

      Depends: R (\<gtr\>= 3.0-0), lme4 (\<gtr\>= 1.0-6)

      Imports: methods, stats, utils

      Suggests: testthat (\<gtr\>= 0.9-0)

      License: GPL (\<gtr\>= 2)

      URL: https://github.com/vdorie/blme

      BugReports: https://github.com/vdorie/blme/issues

      NeedsCompilation: no

      Packaged: 2015-06-13 17:22:47 UTC; vdorie

      Repository: CRAN

      Date/Publication: 2015-06-14 01:21:14

      Built: R 3.3.0; ; 2016-05-05 12:41:41 UTC; unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/blme/Meta/package.rds
      </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.blmer \<less\>- blmer(obs ~ 0 + trt + (1 \| rep), fixef.prior
      = normal, data=Table5.7)

      Table5.7.default.blmer \<less\>- blmer(obs ~ 0 + trt + (1 \| rep),
      data=Table5.7)
    <|unfolded-prog-io>
      Table5.7.blmer \<less\>- blmer(obs ~ 0 + trt + (1 \| rep), fixef.prior
      = normal, da

      \<less\>bs ~ 0 + trt + (1 \| rep), fixef.prior = normal, data=Table5.7)

      \<gtr\> Table5.7.default.blmer \<less\>- blmer(obs ~ 0 + trt + (1 \|
      rep), data=Table5.7)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.blmer);v()

      qqnorm(Table5.7.blmer);v()
    <|unfolded-prog-io>
      plot(Table5.7.blmer);v()

      <image|<tuple||ps>|0.8par|||>\ 

      \<gtr\> qqnorm(Table5.7.blmer);v()

      Error in min(x, na.rm = na.rm) : invalid 'type' (list) of argument

      In addition: Warning message:

      In is.na(y) : is.na() applied to non-(list or vector) of type 'S4'
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.blmer)

      anova(Table5.7.blmer)
    <|unfolded-prog-io>
      summary(Table5.7.blmer)

      Cov prior \ : rep ~ wishart(df = 3.5, scale = Inf, posterior.scale =
      cov, common.scale = TRUE)

      Prior dev \ : -1.0394

      \;

      Linear mixed model fit by REML ['blmerMod']

      Formula: obs ~ trt + (1 \| rep)

      \ \ \ Data: Table5.7

      \;

      REML criterion at convergence: 62.9

      \;

      Scaled residuals:\ 

      \ \ \ \ \ Min \ \ \ \ \ \ 1Q \ \ Median \ \ \ \ \ \ 3Q \ \ \ \ \ Max\ 

      -1.45752 -0.81765 \ 0.08774 \ 0.64234 \ 1.47309\ 

      \;

      Random effects:

      \ Groups \ \ Name \ \ \ \ \ \ \ Variance Std.Dev.

      \ rep \ \ \ \ \ (Intercept) 2.335 \ \ \ 1.528 \ \ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ 1.168 \ \ \ 1.081 \ \ 

      Number of obs: 22, groups: \ rep, 4

      \;

      Fixed effects:

      \ \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value

      (Intercept) \ \ 3.9259 \ \ \ \ 1.1049 \ \ 3.553

      trt2 \ \ \ \ \ \ \ \ \ 0.9791 \ \ \ \ 0.9638 \ \ 1.016

      trt3 \ \ \ \ \ \ \ \ \ 1.3866 \ \ \ \ 0.9638 \ \ 1.439

      trt4 \ \ \ \ \ \ \ \ \ 0.9466 \ \ \ \ 0.9638 \ \ 0.982

      trt5 \ \ \ \ \ \ \ \ \ 1.6416 \ \ \ \ 0.9638 \ \ 1.703

      trt6 \ \ \ \ \ \ \ \ \ 3.1241 \ \ \ \ 0.9638 \ \ 3.241

      \;

      Correlation of Fixed Effects:

      \ \ \ \ \ (Intr) trt2 \ \ trt3 \ \ trt4 \ \ trt5 \ 

      trt2 -0.598 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt3 -0.598 \ 0.686 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt4 -0.598 \ 0.686 \ 0.686 \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt5 -0.598 \ 0.686 \ 0.686 \ 0.686 \ \ \ \ \ \ 

      trt6 -0.598 \ 0.686 \ 0.686 \ 0.686 \ 0.686
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.blmer \<less\>- update(Table5.7.blmer, . ~ . -trt)

      anova(Table5.7.red.blmer,Table5.7.blmer)
    <|unfolded-prog-io>
      Table5.7.red.blmer \<less\>- update(Table5.7.blmer, . ~ . -trt)

      \<gtr\> anova(Table5.7.red.blmer,Table5.7.blmer)

      refitting model(s) with ML (instead of REML)

      Data: Table5.7

      Models:

      Table5.7.red.blmer: obs ~ (1 \| rep)

      Table5.7.blmer: obs ~ trt + (1 \| rep)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Df \ \ \ AIC \ \ \ BIC \ logLik
      deviance \ Chisq Chi Df Pr(\<gtr\>Chisq)

      Table5.7.red.blmer \ 3 86.063 89.336 -40.032 \ \ 80.063
      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.blmer \ \ \ \ \ 8 83.702 92.430 -33.851 \ \ 67.702 12.361
      \ \ \ \ \ 5 \ \ \ 0.03016

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.red.blmer \ 

      Table5.7.blmer \ \ \ \ *

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      class(Table5.7.blmer)

      anova(Table5.7.default.blmer,Table5.7.blmer)
    <|unfolded-prog-io>
      class(Table5.7.blmer)

      [1] "blmerMod"

      attr(,"package")

      [1] "blme"

      \<gtr\> anova(Table5.7.default.blmer,Table5.7.blmer)

      refitting model(s) with ML (instead of REML)

      Data: Table5.7

      Models:

      Table5.7.default.blmer: obs ~ trt + (1 \| rep)

      Table5.7.blmer: obs ~ trt + (1 \| rep)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Df \ \ \ AIC \ \ BIC
      \ logLik deviance Chisq Chi Df

      Table5.7.default.blmer \ 8 83.702 92.43 -33.851 \ \ 67.702
      \ \ \ \ \ \ \ \ \ \ \ \ 

      Table5.7.blmer \ \ \ \ \ \ \ \ \ 8 83.702 92.43 -33.851 \ \ 67.702
      \ \ \ \ 0 \ \ \ \ \ 0

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Pr(\<gtr\>Chisq)

      Table5.7.default.blmer \ \ \ \ \ \ \ \ \ \ 

      Table5.7.blmer \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.default.blmer \<less\>- blmer(Yield ~ 0 + Variety + (1 \|
      Trial/Rep) + (1 \| Trial:Variety), data=Ex16.8.1)

      print(summary(Ex16.8.1.default.blmer),correlation=FALSE)
    <|unfolded-prog-io>
      Ex16.8.1.default.blmer \<less\>- blmer(Yield ~ 0 + Variety + (1 \|
      Trial/Rep) + (1\ 

      \<less\> blmer(Yield ~ 0 + Variety + (1 \| Trial/Rep) + (1 \|
      Trial:Variety), data=Ex1

      \<less\> + (1 \| Trial/Rep) + (1 \| Trial:Variety), data=Ex16.8.1)

      Warning message:

      In get("checkConv", lme4Namespace)(attr(opt, "derivs"), opt$par, \ :

      \ \ Model failed to converge with max\|grad\| = 1.1541 (tol = 0.002,
      component 1)

      \<gtr\> print(summary(Ex16.8.1.default.blmer),correlation=FALSE)

      Cov prior \ : Trial:Variety ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      \ \ \ \ \ \ \ \ \ \ \ : Rep:Trial ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      \ \ \ \ \ \ \ \ \ \ \ : Trial ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      Prior dev \ : 6.2965

      \;

      Linear mixed model fit by REML ['blmerMod']

      Formula: Yield ~ 0 + Variety + (1 \| Trial/Rep) + (1 \| Trial:Variety)

      \ \ \ Data: Ex16.8.1

      \;

      REML criterion at convergence: 1261.2

      \;

      Scaled residuals:\ 

      \ \ \ \ \ Min \ \ \ \ \ \ 1Q \ \ Median \ \ \ \ \ \ 3Q \ \ \ \ \ Max\ 

      -2.18119 -0.59626 -0.08897 \ 0.60429 \ 2.99319\ 

      \;

      Random effects:

      \ Groups \ \ \ \ \ \ \ Name \ \ \ \ \ \ \ Variance Std.Dev.

      \ Trial:Variety (Intercept) \ 2079 \ \ \ \ 45.60 \ 

      \ Rep:Trial \ \ \ \ (Intercept) \ 1486 \ \ \ \ 38.55 \ 

      \ Trial \ \ \ \ \ \ \ \ (Intercept) 31253 \ \ \ 176.78 \ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 18590 \ \ \ 136.35 \ 

      Number of obs: 108, groups: \ Trial:Variety, 36; Rep:Trial, 9; Trial, 3

      \;

      Fixed effects:

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value

      VarietyCentennial \ \ 1394.8 \ \ \ \ \ 115.5 \ \ 12.08

      VarietyD74-7741 \ \ \ \ 1406.4 \ \ \ \ \ 115.5 \ \ 12.18

      VarietyN72-137 \ \ \ \ \ 1483.9 \ \ \ \ \ 115.5 \ \ 12.85

      VarietyN72-3058 \ \ \ \ 1330.7 \ \ \ \ \ 115.5 \ \ 11.52

      VarietyN72-3148 \ \ \ \ 1566.0 \ \ \ \ \ 115.5 \ \ 13.56

      VarietyN73-1102 \ \ \ \ 1501.4 \ \ \ \ \ 115.5 \ \ 13.00

      VarietyN73-693 \ \ \ \ \ 1436.2 \ \ \ \ \ 115.5 \ \ 12.43

      VarietyN73-877 \ \ \ \ \ 1403.3 \ \ \ \ \ 115.5 \ \ 12.15

      VarietyN73-882 \ \ \ \ \ 1396.7 \ \ \ \ \ 115.5 \ \ 12.09

      VarietyR73-81 \ \ \ \ \ \ 1373.8 \ \ \ \ \ 115.5 \ \ 11.89

      VarietyR75-12 \ \ \ \ \ \ 1175.9 \ \ \ \ \ 115.5 \ \ 10.18

      VarietyTracy \ \ \ \ \ \ \ 1369.9 \ \ \ \ \ 115.5 \ \ 11.86

      convergence code: 0

      Model failed to converge with max\|grad\| = 1.1541 (tol = 0.002,
      component 1)

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.blmer \<less\>- blmer(Yield ~ Variety + (1 \| Trial/Rep) + (1
      \| Trial:Variety), fixef.prior = normal, data=Ex16.8.1)

      print(summary(Ex16.8.1.blmer),correlation=FALSE)
    <|unfolded-prog-io>
      Ex16.8.1.blmer \<less\>- blmer(Yield ~ Variety + (1 \| Trial/Rep) + (1
      \| Trial:Vari

      \<less\>ield ~ Variety + (1 \| Trial/Rep) + (1 \| Trial:Variety),
      fixef.prior = normal

      \<less\>l/Rep) + (1 \| Trial:Variety), fixef.prior = normal,
      data=Ex16.8.1)

      Warning messages:

      1: In get("checkConv", lme4Namespace)(attr(opt, "derivs"), opt$par, \ :

      \ \ unable to evaluate scaled gradient

      2: In get("checkConv", lme4Namespace)(attr(opt, "derivs"), opt$par, \ :

      \ \ Model failed to converge: degenerate \ Hessian with 1 negative
      eigenvalues

      \<gtr\> print(summary(Ex16.8.1.blmer),correlation=FALSE)

      Cov prior \ : Trial:Variety ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      \ \ \ \ \ \ \ \ \ \ \ : Rep:Trial ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      \ \ \ \ \ \ \ \ \ \ \ : Trial ~ wishart(df = 3.5, scale = Inf,
      posterior.scale = cov, common.scale = TRUE)

      Fixef prior: normal(sd = c(10, 2.5, ...), corr = c(0 ...), common.scale
      = TRUE)

      Prior dev \ : 168.7405

      \;

      Linear mixed model fit by REML ['blmerMod']

      Formula: Yield ~ Variety + (1 \| Trial/Rep) + (1 \| Trial:Variety)

      \ \ \ Data: Ex16.8.1

      \;

      REML criterion at convergence: 1267.8

      \;

      Scaled residuals:\ 

      \ \ \ \ Min \ \ \ \ \ 1Q \ Median \ \ \ \ \ 3Q \ \ \ \ Max\ 

      -2.2907 -0.5932 -0.0640 \ 0.6009 \ 3.1871\ 

      \;

      Random effects:

      \ Groups \ \ \ \ \ \ \ Name \ \ \ \ \ \ \ Variance Std.Dev.

      \ Trial:Variety (Intercept) \ 2603 \ \ \ \ 51.02 \ 

      \ Rep:Trial \ \ \ \ (Intercept) \ 6772 \ \ \ \ 82.29 \ 

      \ Trial \ \ \ \ \ \ \ \ (Intercept) 25292 \ \ \ 159.03 \ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 16276 \ \ \ 127.58 \ 

      Number of obs: 108, groups: \ Trial:Variety, 36; Rep:Trial, 9; Trial, 3

      \;

      Fixed effects:

      \;

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value

      (Intercept) \ \ \ \ 1387.205 \ \ \ 105.797 \ 13.112

      VarietyD74-7741 \ \ 11.120 \ \ \ \ 67.725 \ \ 0.164

      VarietyN72-137 \ \ \ 86.580 \ \ \ \ 67.725 \ \ 1.278

      VarietyN72-3058 \ -62.715 \ \ \ \ 67.725 \ -0.926

      VarietyN72-3148 \ 166.586 \ \ \ \ 67.725 \ \ 2.460

      VarietyN73-1102 \ 103.685 \ \ \ \ 67.725 \ \ 1.531

      VarietyN73-693 \ \ \ 40.135 \ \ \ \ 67.725 \ \ 0.593

      VarietyN73-877 \ \ \ \ 8.089 \ \ \ \ 67.725 \ \ 0.119

      VarietyN73-882 \ \ \ \ 1.593 \ \ \ \ 67.725 \ \ 0.024

      VarietyR73-81 \ \ \ -20.709 \ \ \ \ 67.725 \ -0.306

      VarietyR75-12 \ \ -213.526 \ \ \ \ 67.725 \ -3.153

      VarietyTracy \ \ \ \ -24.498 \ \ \ \ 67.725 \ -0.362

      convergence code: 0

      unable to evaluate scaled gradient

      Model failed to converge: degenerate \ Hessian with 1 negative
      eigenvalues

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.normal.blmer \<less\>- blmer(obs ~ trt + (1 \| rep),
      data=Table5.7, fixef.prior = normal)

      summary(Table5.7.normal.blmer)
    <|unfolded-prog-io>
      Table5.7.normal.blmer \<less\>- blmer(obs ~ trt + (1 \| rep),
      data=Table5.7, fixef.

      \<less\>blmer(obs ~ trt + (1 \| rep), data=Table5.7, fixef.prior =
      normal)

      \<gtr\> summary(Table5.7.normal.blmer)

      Cov prior \ : rep ~ wishart(df = 3.5, scale = Inf, posterior.scale =
      cov, common.scale = TRUE)

      Fixef prior: normal(sd = c(10, 2.5, ...), corr = c(0 ...), common.scale
      = TRUE)

      Prior dev \ : 24.7871

      \;

      Linear mixed model fit by REML ['blmerMod']

      Formula: obs ~ trt + (1 \| rep)

      \ \ \ Data: Table5.7

      \;

      REML criterion at convergence: 64.6

      \;

      Scaled residuals:\ 

      \ \ \ \ Min \ \ \ \ \ 1Q \ Median \ \ \ \ \ 3Q \ \ \ \ Max\ 

      -1.5714 -0.8747 \ 0.1491 \ 0.6447 \ 1.7048\ 

      \;

      Random effects:

      \ Groups \ \ Name \ \ \ \ \ \ \ Variance Std.Dev.

      \ rep \ \ \ \ \ (Intercept) 2.299 \ \ \ 1.5162 \ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ 0.932 \ \ \ 0.9654 \ 

      Number of obs: 22, groups: \ rep, 4

      \;

      Fixed effects:

      \ \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error t value

      (Intercept) \ \ 4.3590 \ \ \ \ 0.9612 \ \ 4.535

      trt2 \ \ \ \ \ \ \ \ \ 0.4992 \ \ \ \ 0.7444 \ \ 0.671

      trt3 \ \ \ \ \ \ \ \ \ 0.8910 \ \ \ \ 0.7444 \ \ 1.197

      trt4 \ \ \ \ \ \ \ \ \ 0.4679 \ \ \ \ 0.7444 \ \ 0.629

      trt5 \ \ \ \ \ \ \ \ \ 1.1362 \ \ \ \ 0.7444 \ \ 1.526

      trt6 \ \ \ \ \ \ \ \ \ 2.5617 \ \ \ \ 0.7444 \ \ 3.441

      \;

      Correlation of Fixed Effects:

      \ \ \ \ \ (Intr) trt2 \ \ trt3 \ \ trt4 \ \ trt5 \ 

      trt2 -0.477 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt3 -0.477 \ 0.596 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt4 -0.477 \ 0.596 \ 0.596 \ \ \ \ \ \ \ \ \ \ \ \ \ 

      trt5 -0.477 \ 0.596 \ 0.596 \ 0.596 \ \ \ \ \ \ 

      trt6 -0.477 \ 0.596 \ 0.596 \ 0.596 \ 0.596
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(glht(Table5.7.blmer,linfct=mcp(trt="Dunnett")))

      cld(glht(Table5.7.blmer,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      lsmeans(Table5.7.blmer,cld ~ trt)
    <|unfolded-prog-io>
      summary(glht(Table5.7.blmer,linfct=mcp(trt="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: blmer(formula = obs ~ trt + (1 \| rep), data = Table5.7)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ 

      2 - 1 == 0 \ \ 0.9791 \ \ \ \ 0.9638 \ \ 1.016 \ 0.67761 \ \ 

      3 - 1 == 0 \ \ 1.3866 \ \ \ \ 0.9638 \ \ 1.439 \ 0.38601 \ \ 

      4 - 1 == 0 \ \ 0.9466 \ \ \ \ 0.9638 \ \ 0.982 \ 0.70230 \ \ 

      5 - 1 == 0 \ \ 1.6416 \ \ \ \ 0.9638 \ \ 1.703 \ 0.24793 \ \ 

      6 - 1 == 0 \ \ 3.1241 \ \ \ \ 0.9638 \ \ 3.241 \ 0.00468 **

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;

      \<gtr\> cld(glht(Table5.7.blmer,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ \ 1 \ \ \ 2 \ \ \ 3 \ \ \ 4 \ \ \ 5 \ \ \ 6\ 

      \ "b" "ab" "ab" \ "b" "ab" \ "a"\ 

      \<gtr\> lsmeans(Table5.7.blmer,cld ~ trt)

      \ trt \ \ lsmean \ \ \ \ \ \ \ SE \ \ df lower.CL upper.CL .group

      \ 1 \ \ 3.925911 1.1087558 9.09 1.421647 6.430176 \ 1 \ \ \ 

      \ 4 \ \ 4.872500 0.9357843 5.46 2.527095 7.217905 \ 1 \ \ \ 

      \ 2 \ \ 4.905000 0.9357843 5.46 2.559595 7.250405 \ 1 \ \ \ 

      \ 3 \ \ 5.312500 0.9357843 5.46 2.967095 7.657905 \ 1 \ \ \ 

      \ 5 \ \ 5.567500 0.9357843 5.46 3.222095 7.912905 \ 1 \ \ \ 

      \ 6 \ \ 7.050000 0.9357843 5.46 4.704595 9.395405 \ 1 \ \ \ 

      \;

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.blmer.Rda")) {

      \ \ Rprof("meta.blmer.prof")

      \ \ meta.blmer \<less\>- blmer(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.blmer,file="meta.blmer.Rda")

      }

      meta.blmer.summary \<less\>- summaryRprof("meta.blmer.prof")

      head(meta.blmer.summary[[1]])

      head(meta.blmer.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("meta.blmer.Rda")) {

      + \ \ Rprof("meta.blmer.prof")

      + \ \ meta.blmer \<less\>- blmer(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), dat

      \<less\> ~ Entry + (1 \| Loca/Repe) + (1 \| Loca:Entry), data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.blmer,file="meta.blmer.Rda")

      + }

      \<gtr\> meta.blmer.summary \<less\>- summaryRprof("meta.blmer.prof")

      \<gtr\> head(meta.blmer.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time
      total.pct

      ".Call" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.08 \ \ \ 25.00
      \ \ \ \ \ \ 0.24 \ \ \ \ 75.00

      "\<Anonymous\>" \ \ \ \ \ \ \ \ \ \ \ \ 0.04 \ \ \ 12.50
      \ \ \ \ \ \ 0.26 \ \ \ \ 81.25

      "$" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.04 \ \ \ 12.50
      \ \ \ \ \ \ 0.04 \ \ \ \ 12.50

      ".findMethodInTable" \ \ \ \ \ 0.02 \ \ \ \ 6.25 \ \ \ \ \ \ 0.04
      \ \ \ \ 12.50

      "intI" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 6.25
      \ \ \ \ \ \ 0.04 \ \ \ \ 12.50

      "is" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 6.25
      \ \ \ \ \ \ 0.04 \ \ \ \ 12.50

      \<gtr\> head(meta.blmer.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "blmer" \ \ \ \ \ \ \ \ \ \ \ \ \ 0.32 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ \ 0.0

      "do.call" \ \ \ \ \ \ \ \ \ \ \ 0.28 \ \ \ \ 87.50 \ \ \ \ \ 0.00
      \ \ \ \ \ 0.0

      "\<Anonymous\>" \ \ \ \ \ \ \ 0.26 \ \ \ \ 81.25 \ \ \ \ \ 0.04
      \ \ \ \ 12.5

      "optimizeLmer" \ \ \ \ \ \ 0.26 \ \ \ \ 81.25 \ \ \ \ \ 0.00
      \ \ \ \ \ 0.0

      "optwrap" \ \ \ \ \ \ \ \ \ \ \ 0.26 \ \ \ \ 81.25 \ \ \ \ \ 0.00
      \ \ \ \ \ 0.0

      ".Call" \ \ \ \ \ \ \ \ \ \ \ \ \ 0.24 \ \ \ \ 75.00 \ \ \ \ \ 0.08
      \ \ \ \ 25.0
    </unfolded-prog-io|>

    <\textput>
      Rprof("cotes.blmer.prof")

      \ \ cotes.lmer \<less\>- lmer(YLD ~ Entry + (1 \| Loca/Repe) + (0 +
      Entry \| Loca), data=rcbd.dat)

      \ \ Rprof(NULL)

      save(cotes.lmer,file="cotes.blmer.Rda")

      summaryRprof("cotes.blmer.prof")
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      detach("package:blme")
    <|unfolded-prog-io>
      detach("package:blme")
    </unfolded-prog-io|>

    <\textput>
      <section|glmmADMB>

      glmmADMB is not available fron CRAN so must be installed via

      <verbatim|install.packages("glmmADMB",
      repos=c("http://glmmadmb.r-forge.r-project.org/repos",
      getOption("repos")),type="source")>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(glmmADMB)

      packageDescription("glmmADMB")
    <|unfolded-prog-io>
      library(glmmADMB)

      \;

      Attaching package: 'glmmADMB'

      \;

      The following object is masked from 'package:MASS':

      \;

      \ \ \ \ stepAIC

      \;

      The following object is masked from 'package:stats':

      \;

      \ \ \ \ step

      \;

      \<gtr\> packageDescription("glmmADMB")

      Package: glmmADMB

      Version: 0.8.3.3

      Revision: $Revision: 284 $

      Date: 2016-01-19

      Title: Generalized Linear Mixed Models using 'AD Model Builder'

      Author: Hans Skaug \<less\>Hans.Skaug@mi.uib.no\<gtr\>, Dave Fournier

      \ \ \ \ \ \ \ \<less\>otter@otter-rsch.com\<gtr\>, Anders Nielsen
      \<less\>andersn@hawaii.edu\<gtr\>,

      \ \ \ \ \ \ \ Arni Magnusson \<less\>arnima@hafro.is\<gtr\>, and Ben
      Bolker

      \ \ \ \ \ \ \ \<less\>bolker@mcmaster.ca\<gtr\>

      Maintainer: Ben Bolker \<less\>bolker@mcmaster.ca\<gtr\>

      LazyData: yes

      BuildVignettes: no

      VignetteBuilder: knitr

      Description: Fits mixed-effects models using a variety of

      \ \ \ \ \ \ \ distributions.

      Imports: stats, Matrix, nlme, R2admb, stringr, plyr, coda

      Depends: R (\<gtr\>= 2.13), methods, MASS

      Suggests: lattice, lme4, mlmRev, plotMCMC, ggplot2, bbmle, pscl,

      \ \ \ \ \ \ \ knitr, car

      License: BSD_2_clause + file LICENSE

      URL: http://glmmadmb.r-forge.r-project.org, http://admb-project.org

      BuildVignette: no

      Collate: 'anova.glmm.admb.R' 'getdata.R' 'glmm.admb.R' .....

      NeedsCompilation: no

      Packaged: 2016-01-20 02:03:14 UTC; bolker

      Built: R 3.3.1; ; 2016-10-17 03:06:25 UTC; unix

      \;

      -- File: /Users/peter/Library/R/3.3/library/glmmADMB/Meta/package.rds\ 
    </unfolded-prog-io|>

    <\textput>
      We need to remember the the default family is \Ppoisson\Q
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.admb \<less\>- glmmadmb(obs ~ trt, random = ~ 1 \| rep, family
      = "gaussian", data = Table5.7)
    <|unfolded-prog-io>
      Table5.7.admb \<less\>- glmmadmb(obs ~ trt, random = ~ 1 \| rep, family
      = "gaussian

      \<less\>(obs ~ trt, random = ~ 1 \| rep, family = "gaussian", data =
      Table5.7)

      Warning message:

      In eval(expr, envir, enclos) : sd.est not defined for this family
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.admb)

      anova(Table5.7.admb)
    <|unfolded-prog-io>
      summary(Table5.7.admb)

      \;

      Call:

      glmmadmb(formula = obs ~ 0 + trt, data = Table5.7, family = "gaussian",\ 

      \ \ \ \ random = ~1 \| rep)

      \;

      AIC: 83.7\ 

      \;

      Coefficients:

      \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ \ 

      trt1 \ \ \ 3.941 \ \ \ \ \ 0.826 \ \ \ 4.77 \ 1.8e-06 ***

      trt2 \ \ \ 4.905 \ \ \ \ \ 0.637 \ \ \ 7.70 \ 1.4e-14 ***

      trt3 \ \ \ 5.313 \ \ \ \ \ 0.637 \ \ \ 8.34 \ \<less\> 2e-16 ***

      trt4 \ \ \ 4.873 \ \ \ \ \ 0.637 \ \ \ 7.65 \ 2.0e-14 ***

      trt5 \ \ \ 5.568 \ \ \ \ \ 0.637 \ \ \ 8.74 \ \<less\> 2e-16 ***

      trt6 \ \ \ 7.050 \ \ \ \ \ 0.637 \ \ 11.07 \ \<less\> 2e-16 ***

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \;

      Number of observations: total=22, rep=4\ 

      Random effect variance(s):

      Group=rep

      \ \ \ \ \ \ \ \ \ \ \ \ Variance StdDev

      (Intercept) \ \ 0.6701 0.8186

      \;

      Residual variance: 0.97642 (std. err.: 0.16343)

      \;

      Log-likelihood: -33.851\ 

      Warning message:

      In .local(x, sigma, ...) :

      \ \ 'sigma' and 'rdig' arguments are present for compatibility only:
      ignored

      \<gtr\> anova(Table5.7.admb)

      Error in anova.glmmadmb(Table5.7.admb) : Two or more model fits
      required.
    </unfolded-prog-io|>

    <\textput>
      Since anova doesn't work for a single admb model, we might be tempted
      to try aov. Don't. Notice the error d.f.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(aov(Table5.7.admb))
    <|unfolded-prog-io>
      summary(aov(Table5.7.admb))

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ \ Pr(\<gtr\>F) \ \ \ 

      trt \ \ \ \ \ \ \ 6 \ 659.4 \ 109.90 \ \ 50.72 1.59e-09 ***

      Residuals 16 \ \ 34.7 \ \ \ 2.17 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.admb \<less\>- update(Table5.7.admb, . ~ . -trt)

      anova(Table5.7.admb,Table5.7.red.admb)
    <|unfolded-prog-io>
      Table5.7.red.admb \<less\>- update(Table5.7.admb, . ~ . -trt)

      Warning message:

      In eval(expr, envir, enclos) : sd.est not defined for this family

      \<gtr\> anova(Table5.7.admb,Table5.7.red.admb)

      Analysis of Deviance Table

      \;

      Model 1: obs ~ 1

      Model 2: obs ~ trt

      \ \ NoPar \ LogLik Df Deviance Pr(\<gtr\>Chi) \ 

      1 \ \ \ \ 3 -40.032 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      2 \ \ \ \ 8 -33.851 \ 5 \ \ 12.361 \ 0.03016 *

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      Warning message:

      In anova.glmmadmb(Table5.7.admb, Table5.7.red.admb) :

      \ \ rearranging models in order of increasing complexity
    </unfolded-prog-io|>

    <\textput>
      If we fit the first model by excluding the intercept, as with previous
      examples, the update fails. This is not a problem for lme or lmer\ 
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      glmmadmb(obs ~ 0, random = ~ 1 \| rep, family = "gaussian", data =
      Table5.7)

      lme(obs ~ 0, random = ~ 1 \| rep, data = Table5.7)

      lmer(obs ~ 0 + (1 \| rep), data = Table5.7)
    <|unfolded-prog-io>
      glmmadmb(obs ~ 0, random = ~ 1 \| rep, family = "gaussian", data =
      Table5.7)

      Error in svd(x, 0, 0) : a dimension is zero

      \<gtr\> lme(obs ~ 0, random = ~ 1 \| rep, data = Table5.7)

      Linear mixed-effects model fit by REML

      \ \ Data: Table5.7\ 

      \ \ Log-restricted-likelihood: -47.20862

      \ \ Fixed: obs ~ 0\ 

      numeric(0)

      \;

      Random effects:

      \ Formula: ~1 \| rep

      \ \ \ \ \ \ \ \ (Intercept) Residual

      StdDev: \ \ \ 5.453238 \ 1.37886

      \;

      Number of Observations: 22

      Number of Groups: 4\ 

      \<gtr\> lmer(obs ~ 0 + (1 \| rep), data = Table5.7)

      Linear mixed model fit by maximum likelihood \ ['lmerMod']

      Formula: obs ~ 0 + (1 \| rep)

      \ \ \ Data: Table5.7

      \ \ \ \ \ AIC \ \ \ \ \ BIC \ \ logLik deviance df.resid\ 

      \ 98.4172 100.5993 -47.2086 \ 94.4172 \ \ \ \ \ \ 20\ 

      Random effects:

      \ Groups \ \ Name \ \ \ \ \ \ \ Std.Dev.

      \ rep \ \ \ \ \ (Intercept) 5.453 \ \ 

      \ Residual \ \ \ \ \ \ \ \ \ \ \ \ 1.379 \ \ 

      Number of obs: 22, groups: \ rep, 4

      No fixed effect coefficients
    </unfolded-prog-io|>

    <\folded-prog-io>
      <with|color|red|\<gtr\> >
    <|folded-prog-io>
      \;

      VarCorr(Table5.7.admb)

      summary(glht(Table5.7.admb,linfct=mcp(trt="Dunnett")))

      cld(glht(Table5.7.admb,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      lsmeans(Table5.7.admb,cld ~ trt)
    <|folded-prog-io>
      Table5.7.admb \<less\>- glmmadmb(obs ~ 0+trt, random = ~ 1 \| rep,
      family = "gaussi

      \<less\>(obs ~ 0+trt, random = ~ 1 \| rep, family = "gaussian", data =
      Table5.7)

      Warning message:

      In eval(expr, envir, enclos) : sd.est not defined for this family

      \<gtr\> summary(Table5.7.admb)

      \;

      Call:

      glmmadmb(formula = obs ~ 0 + trt, data = Table5.7, family = "gaussian",\ 

      \ \ \ \ random = ~1 \| rep)

      \;

      AIC: 83.7\ 

      \;

      Coefficients:

      \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ \ 

      trt1 \ \ \ 3.941 \ \ \ \ \ 0.826 \ \ \ 4.77 \ 1.8e-06 ***

      trt2 \ \ \ 4.905 \ \ \ \ \ 0.637 \ \ \ 7.70 \ 1.4e-14 ***

      trt3 \ \ \ 5.313 \ \ \ \ \ 0.637 \ \ \ 8.34 \ \<less\> 2e-16 ***

      trt4 \ \ \ 4.873 \ \ \ \ \ 0.637 \ \ \ 7.65 \ 2.0e-14 ***

      trt5 \ \ \ 5.568 \ \ \ \ \ 0.637 \ \ \ 8.74 \ \<less\> 2e-16 ***

      trt6 \ \ \ 7.050 \ \ \ \ \ 0.637 \ \ 11.07 \ \<less\> 2e-16 ***

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \;

      Number of observations: total=22, rep=4\ 

      Random effect variance(s):

      Group=rep

      \ \ \ \ \ \ \ \ \ \ \ \ Variance StdDev

      (Intercept) \ \ 0.6701 0.8186

      \;

      Residual variance: 0.97642 (std. err.: 0.16343)

      \;

      Log-likelihood: -33.851\ 

      Warning message:

      In .local(x, sigma, ...) :

      \ \ 'sigma' and 'rdig' arguments are present for compatibility only:
      ignored

      \<gtr\> anova(Table5.7.admb)

      Error in anova.glmmadmb(Table5.7.admb) : Two or more model fits
      required.

      \<gtr\> summary(aov(Table5.7.admb))

      \ \ \ \ \ \ \ \ \ \ Df Sum Sq Mean Sq F value \ \ Pr(\<gtr\>F) \ \ \ 

      trt \ \ \ \ \ \ \ 6 \ 659.4 \ 109.90 \ \ 50.72 1.59e-09 ***

      Residuals 16 \ \ 34.7 \ \ \ 2.17 \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      \<gtr\> Table5.7.red.admb \<less\>- update(Table5.7.admb, . ~ . -trt)

      Error in svd(x, 0, 0) : a dimension is zero

      \<gtr\> VarCorr(Table5.7.admb)

      Group=rep

      \ \ \ \ \ \ \ \ \ \ \ \ Variance StdDev

      (Intercept) \ \ 0.6701 0.8186

      Warning message:

      In .local(x, sigma, ...) :

      \ \ 'sigma' and 'rdig' arguments are present for compatibility only:
      ignored

      \<gtr\> summary(glht(Table5.7.admb,linfct=mcp(trt="Dunnett")))

      \;

      \ \ \ \ \ \ \ \ \ Simultaneous Tests for General Linear Hypotheses

      \;

      Multiple Comparisons of Means: Dunnett Contrasts

      \;

      \;

      Fit: glmmadmb(formula = obs ~ 0 + trt, data = Table5.7, family =
      "gaussian",\ 

      \ \ \ \ random = ~1 \| rep)

      \;

      Linear Hypotheses:

      \ \ \ \ \ \ \ \ \ \ \ Estimate Std. Error z value Pr(\<gtr\>\|z\|) \ \ 

      2 - 1 == 0 \ \ 0.9641 \ \ \ \ 0.8675 \ \ 1.111 \ 0.60838 \ \ 

      3 - 1 == 0 \ \ 1.3716 \ \ \ \ 0.8675 \ \ 1.581 \ 0.30722 \ \ 

      4 - 1 == 0 \ \ 0.9316 \ \ \ \ 0.8675 \ \ 1.074 \ 0.63612 \ \ 

      5 - 1 == 0 \ \ 1.6267 \ \ \ \ 0.8675 \ \ 1.875 \ 0.17962 \ \ 

      6 - 1 == 0 \ \ 3.1092 \ \ \ \ 0.8675 \ \ 3.584 \ 0.00171 **

      ---

      Signif. codes: \ 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

      (Adjusted p values reported -- single-step method)

      \;

      \<gtr\> cld(glht(Table5.7.admb,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \ \ \ 1 \ \ \ 2 \ \ \ 3 \ \ \ 4 \ \ \ 5 \ \ \ 6\ 

      \ "b" \ "b" "ab" \ "b" "ab" \ "a"\ 

      \<gtr\> lsmeans(Table5.7.admb,cld ~ trt)

      \ trt \ \ lsmean \ \ \ \ \ SE df asymp.LCL asymp.UCL .group

      \ 1 \ \ 3.940880 0.82568 NA \ 2.322577 \ 5.559183 \ 1 \ \ \ 

      \ 4 \ \ 4.872522 0.63709 NA \ 3.623849 \ 6.121196 \ 1 \ \ \ 

      \ 2 \ \ 4.905023 0.63709 NA \ 3.656349 \ 6.153696 \ 1 \ \ \ 

      \ 3 \ \ 5.312527 0.63709 NA \ 4.063854 \ 6.561201 \ 12 \ \ 

      \ 5 \ \ 5.567530 0.63709 NA \ 4.318857 \ 6.816204 \ 12 \ \ 

      \ 6 \ \ 7.050047 0.63709 NA \ 5.801374 \ 8.298721 \ \ 2 \ \ 

      \;

      Results are given on the identity (not the response) scale.\ 

      Confidence level used: 0.95\ 

      P value adjustment: tukey method for comparing a family of 6 estimates\ 

      significance level used: alpha = 0.05\ 
    </folded-prog-io|>

    <\textput>
      \;
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.admb \<less\>- glmmadmb(Yield ~ 0 + Variety,random= ~ (1 \|
      Trial/Rep) + (1 \| Trial:Variety), family = "gaussian", data=Ex16.8.1)
    <|unfolded-prog-io>
      Ex16.8.1.admb \<less\>- glmmadmb(Yield ~ 0 + Variety,random= ~ (1 \|
      Trial/Rep) + (

      \<less\>(Yield ~ 0 + Variety,random= ~ (1 \| Trial/Rep) + (1 \|
      Trial:Variety), family

      \<less\>m= ~ (1 \| Trial/Rep) + (1 \| Trial:Variety), family =
      "gaussian", data=Ex16.8

      \<less\>\| Trial:Variety), family = "gaussian", data=Ex16.8.1)

      Warning message:

      In eval(expr, envir, enclos) : sd.est not defined for this family
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.cotes.admb \<less\>- glmmadmb(Yield ~ 0 + Variety,random= ~ (1
      \| Trial/Rep) + (0 + Variety \| Trial), family = "gaussian",
      data=Ex16.8.1)
    <|unfolded-prog-io>
      Ex16.8.1.cotes.admb \<less\>- glmmadmb(Yield ~ 0 + Variety,random= ~ (1
      \| Trial/Re

      \<less\>mmadmb(Yield ~ 0 + Variety,random= ~ (1 \| Trial/Rep) + (0 +
      Variety \| Trial)

      \<less\>,random= ~ (1 \| Trial/Rep) + (0 + Variety \| Trial), family =
      "gaussian", dat

      \<less\> + (0 + Variety \| Trial), family = "gaussian", data=Ex16.8.1)

      Parameters were estimated, but standard errors were not: the most
      likely problem is that the curvature at MLE was zero or negative

      Error in glmmadmb(Yield ~ 0 + Variety, random = ~(1 \| Trial/Rep) + (0
      + \ :\ 

      \ \ The function maximizer failed (couldn't find parameter file)
      Troubleshooting steps include (1) run with 'save.dir' set and inspect
      output files; (2) change run parameters: see '?admbControl';(3) re-run
      with debug=TRUE for more information on failure mode

      In addition: Warning message:

      running command './glmmadmb -maxfn 500 -maxph 5 -noinit -shess' had
      status 1\ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.admb.Rda")) {

      \ \ Rprof("meta.admb.prof")

      \ \ meta.admb \<less\>- glmmadmb(YLD ~ 0 + Entry,random= ~ (1 \|
      Loca/Repe) + (1 \| Loca:Entry), family = "gaussian", data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.admb,file="meta.admb.Rda")

      } else {

      \ \ load(file="meta.admb.Rda")

      }

      meta.admb.summary \<less\>- summaryRprof("meta.admb.prof")

      head(meta.admb.summary[[1]])

      head(meta.admb.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("meta.admb.Rda")) {

      + \ \ Rprof("meta.admb.prof")

      + \ \ meta.admb \<less\>- glmmadmb(YLD ~ 0 + Entry,random= ~ (1 \|
      Loca/Repe) + (1 \| Lo

      \<less\>LD ~ 0 + Entry,random= ~ (1 \| Loca/Repe) + (1 \| Loca:Entry),
      family = "gauss

      \<less\>1 \| Loca/Repe) + (1 \| Loca:Entry), family = "gaussian",
      data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.admb,file="meta.admb.Rda")

      + } else {

      + \ \ load(file="meta.admb.Rda")

      + }

      \<gtr\> meta.admb.summary \<less\>- summaryRprof("meta.admb.prof")

      \<gtr\> head(meta.admb.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time
      total.pct

      "scan" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.10 \ \ \ 35.71
      \ \ \ \ \ \ 0.12 \ \ \ \ 42.86

      "readLines" \ \ \ \ \ \ \ \ \ \ \ \ 0.08 \ \ \ 28.57 \ \ \ \ \ \ 0.08
      \ \ \ \ 28.57

      "close.connection" \ \ \ \ \ 0.04 \ \ \ 14.29 \ \ \ \ \ \ 0.04
      \ \ \ \ 14.29

      ".External2" \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 7.14 \ \ \ \ \ \ 0.02
      \ \ \ \ \ 7.14

      "file" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 7.14
      \ \ \ \ \ \ 0.02 \ \ \ \ \ 7.14

      "system" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 7.14
      \ \ \ \ \ \ 0.02 \ \ \ \ \ 7.14

      \<gtr\> head(meta.admb.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "glmmadmb" \ \ \ \ \ \ \ \ 0.28 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "par_read" \ \ \ \ \ \ \ \ 0.22 \ \ \ \ 78.57 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "scan" \ \ \ \ \ \ \ \ \ \ \ \ 0.12 \ \ \ \ 42.86 \ \ \ \ \ 0.10
      \ \ \ 35.71

      "read.table" \ \ \ \ \ \ 0.12 \ \ \ \ 42.86 \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "rt" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.12 \ \ \ \ 42.86 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "readLines" \ \ \ \ \ \ \ 0.08 \ \ \ \ 28.57 \ \ \ \ \ 0.08 \ \ \ 28.57
    </unfolded-prog-io|>

    <\textput>
      if(!file.exists("cotes.admb.Rda")) {

      \ \ Rprof("cotes.admb.prof")

      \ \ cotes.admb \<less\>- glmmadmb(YLD ~ 0 + Entry,random= ~ (1 \|
      Loca/Repe) + (0 + Entry \| Loca), family = "gaussian", data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.admb,file="meta.cotes.Rda")

      } else {

      \ \ load(file="meta.cotes.Rda")

      }
    </textput>

    <\textput>
      <section|glmmLasso>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(glmmLasso)

      packageDescription("glmmLasso")
    <|unfolded-prog-io>
      library(glmmLasso)

      \<gtr\> packageDescription("glmmLasso")

      Package: glmmLasso

      Type: Package

      Title: Variable Selection for Generalized Linear Mixed Models by

      \ \ \ \ \ \ \ L1-Penalized Estimation

      Version: 1.4.4

      Date: 2016-05-28

      Author: Andreas Groll

      Maintainer: Andreas Groll \<less\>groll@mathematik.uni-muenchen.de\<gtr\>

      Description: A variable selection approach for generalized linear

      \ \ \ \ \ \ \ mixed models by L1-penalized estimation is provided.

      Imports: minqa, Matrix

      License: GPL-2

      Repository: CRAN

      NeedsCompilation: no

      Packaged: 2016-05-27 15:00:44 UTC; user

      Date/Publication: 2016-05-27 17:27:35

      Built: R 3.3.0; ; 2016-05-28 10:38:53 UTC; unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/glmmLasso/Meta/package.rds
      </unfolded-prog-io|>

    <\textput>
      Note that glmmLasso is different about random effects
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.glmmLasso \<less\>- glmmLasso(fix = obs ~ trt, rnd = list(rep
      = ~1), lambda = 200, data = Table5.7)
    <|unfolded-prog-io>
      Table5.7.glmmLasso \<less\>- glmmLasso(fix = obs ~ trt, rnd = list(rep
      = ~1), lamb

      \<less\>mLasso(fix = obs ~ trt, rnd = list(rep = ~1), lambda = 200,
      data = Table5.7)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.glmmLasso)
    <|unfolded-prog-io>
      plot(Table5.7.glmmLasso)

      Error in plot.glmmLasso(Table5.7.glmmLasso) : No smooth terms to plot!
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.glmmLasso)

      anova(Table5.7.glmmLasso)
    <|unfolded-prog-io>
      summary(Table5.7.glmmLasso)

      Call:

      glmmLasso(fix = obs ~ trt, rnd = list(rep = ~1), data = Table5.7,\ 

      \ \ \ \ lambda = 200)

      \;

      \;

      Fixed Effects:

      \;

      Coefficients:

      \ \ \ \ \ \ \ \ \ \ \ \ Estimate StdErr z.value p.value

      (Intercept) \ 4.79649 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt2 \ \ \ \ \ \ \ -0.25786 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt3 \ \ \ \ \ \ \ -0.46764 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt4 \ \ \ \ \ \ \ -0.19793 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt5 \ \ \ \ \ \ \ -0.49482 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt6 \ \ \ \ \ \ \ \ 0.00000 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      \;

      Random Effects:

      \;

      StdDev:

      \ \ \ \ \ \ \ \ \ rep

      rep 1.463278

      \<gtr\> anova(Table5.7.glmmLasso)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "glmmLasso"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.glmmLasso \<less\>- update(Table5.7.glmmLasso, . ~ . -trt)

      Table5.7.red.glmmLasso \<less\>- glmmLasso(fix = obs ~ 0, rnd =
      list(rep = ~1), lambda = 200, data = Table5.7)
    <|unfolded-prog-io>
      Table5.7.red.glmmLasso \<less\>- update(Table5.7.glmmLasso, . ~ . -trt)

      Error in formula.default(object) : invalid formula

      \<gtr\> Table5.7.red.glmmLasso \<less\>- glmmLasso(fix = obs ~ 0, rnd =
      list(rep = ~1), la

      \<less\> glmmLasso(fix = obs ~ 0, rnd = list(rep = ~1), lambda = 200,
      data = Table5.

      \<less\>rnd = list(rep = ~1), lambda = 200, data = Table5.7)

      Error in est.glmmLasso.RE(fix = fix, rnd = rnd, data = data, lambda =
      lambda, \ :\ 

      \ \ Length of vector defining the grouping of the variables doesn't
      match with\ 

      \ \ \ \ \ \ \ \ \ the formula!
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.glmmLasso \<less\>- update(Table5.7.glmmLasso, . ~ . -trt)

      #

      #

      glmmLasso(fix = obs ~ 0 + trt, rnd = list(rep = ~1), lambda = 200,
      control=list(center=FALSE), data = Table5.7)

      glmmLasso(fix = obs ~ trt, rnd = list(rep = ~1), lambda = 200, data =
      Table5.7,final.re=TRUE) \ \ \ \ \ \ \ \ \ 

      Table5.7.glmmLasso$coefficients

      Table5.7.glmmLasso$StdDev

      \;

      #summary(aov(Table5.7.glmmLasso))

      Table5.7.glmmLasso$ranef

      \;

      VarCorr(Table5.7.glmmLasso)

      class(Table5.7.glmmLasso)
    <|unfolded-prog-io>
      Table5.7.glmmLasso \<less\>- glmmLasso(fix = obs ~ trt, rnd = list(rep
      = ~1), lamb

      \<less\>mLasso(fix = obs ~ trt, rnd = list(rep = ~1), lambda = 200,
      data = Table5.7)

      \<gtr\> #Table5.7.red.glmmLasso \<less\>- glmmLasso(fix = obs ~ 1, rnd
      = list(rep = ~1), l

      \<less\>- glmmLasso(fix = obs ~ 1, rnd = list(rep = ~1), lambda = 200,
      data = Table5

      \<less\> rnd = list(rep = ~1), lambda = 200, data = Table5.7)

      \<gtr\> #Table5.7.red.glmmLasso \<less\>- update(Table5.7.glmmLasso, .
      ~ . -trt)

      \<gtr\> glmmLasso(fix = obs ~ 0 + trt, rnd = list(rep = ~1), lambda =
      200, control=

      \<less\> trt, rnd = list(rep = ~1), lambda = 200,
      control=list(center=FALSE), data =

      \<less\>, lambda = 200, control=list(center=FALSE), data = Table5.7)

      Call:

      glmmLasso(fix = obs ~ 0 + trt, rnd = list(rep = ~1), data = Table5.7,\ 

      \ \ \ \ lambda = 200, control = list(center = FALSE))

      \;

      Fixed Effects:

      \;

      Coefficients:

      trt1 trt2 trt3 trt4 trt5 trt6\ 

      \ \ \ 0 \ \ \ 0 \ \ \ 0 \ \ \ 0 \ \ \ 0 \ \ \ 0\ 

      \;

      Random Effects:

      \;

      StdDev:

      \ \ \ \ \ \ \ \ \ rep

      rep 5.499208

      \<gtr\> glmmLasso(fix = obs ~ trt, rnd = list(rep = ~1), lambda = 200,
      data = Table

      \<less\>, rnd = list(rep = ~1), lambda = 200, data =
      Table5.7,final.re=TRUE) \ \ \ \ \ \ \ 

      \<less\>mbda = 200, data = Table5.7,final.re=TRUE) \ \ \ \ \ \ \ \ \ 

      Call:

      glmmLasso(fix = obs ~ trt, rnd = list(rep = ~1), data = Table5.7,\ 

      \ \ \ \ lambda = 200, final.re = TRUE)

      \;

      Fixed Effects:

      \;

      Coefficients:

      (Intercept) \ \ \ \ \ \ \ trt2 \ \ \ \ \ \ \ trt3 \ \ \ \ \ \ \ trt4
      \ \ \ \ \ \ \ trt5 \ \ \ \ \ \ \ trt6\ 

      \ 5.42611951 -0.01924209 -0.50857059 \ 0.12056606 \ 0.30141514
      \ 0.00000000\ 

      \;

      Random Effects:

      \;

      StdDev:

      \ \ \ \ \ \ \ \ \ \ rep

      rep 0.9692994

      \<gtr\> Table5.7.glmmLasso$coefficients

      (Intercept) \ \ \ \ \ \ \ trt2 \ \ \ \ \ \ \ trt3 \ \ \ \ \ \ \ trt4
      \ \ \ \ \ \ \ trt5 \ \ \ \ \ \ \ trt6\ 

      \ \ 4.7964907 \ -0.2578626 \ -0.4676357 \ -0.1979275 \ -0.4948187
      \ \ 0.0000000\ 

      \<gtr\> Table5.7.glmmLasso$StdDev

      \ \ \ \ \ \ \ \ \ rep

      rep 1.463278

      \<gtr\> anova(Table5.7.glmmLasso)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "glmmLasso"

      \<gtr\> #summary(aov(Table5.7.glmmLasso))

      \<gtr\> Table5.7.glmmLasso$ranef

      \ \ \ \ \ \ rep1 \ \ \ \ \ \ rep2 \ \ \ \ \ \ rep3 \ \ \ \ \ \ rep4\ 

      -0.2855516 \ 2.1003987 \ 0.6859114 \ 0.9709618\ 

      \<gtr\> summary(Table5.7.glmmLasso)

      Call:

      glmmLasso(fix = obs ~ trt, rnd = list(rep = ~1), data = Table5.7,\ 

      \ \ \ \ lambda = 200)

      \;

      \;

      Fixed Effects:

      \;

      Coefficients:

      \ \ \ \ \ \ \ \ \ \ \ \ Estimate StdErr z.value p.value

      (Intercept) \ 4.79649 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt2 \ \ \ \ \ \ \ -0.25786 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt3 \ \ \ \ \ \ \ -0.46764 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt4 \ \ \ \ \ \ \ -0.19793 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt5 \ \ \ \ \ \ \ -0.49482 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      trt6 \ \ \ \ \ \ \ \ 0.00000 \ \ \ \ NA \ \ \ \ \ NA \ \ \ \ \ NA

      \;

      Random Effects:

      \;

      StdDev:

      \ \ \ \ \ \ \ \ \ rep

      rep 1.463278

      \<gtr\> VarCorr(Table5.7.glmmLasso)

      Error in UseMethod("VarCorr") :\ 

      \ \ no applicable method for 'VarCorr' applied to an object of class
      "glmmLasso"

      \<gtr\> class(Table5.7.glmmLasso)

      [1] "glmmLasso"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      plot(Table5.7.glmmLasso)
    <|unfolded-prog-io>
      plot(Table5.7.glmmLasso)

      Error in plot.glmmLasso(Table5.7.glmmLasso) : No smooth terms to plot!
    </unfolded-prog-io|>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      Ex16.8.1$Interaction \<less\>- Ex16.8.1$Trial:Ex16.8.1$Variety

      Ex16.8.1.glmmLasso \<less\>- glmmLasso(fix = Yield ~ 0+Variety, rnd =
      list(Trial = ~1, Block = ~1,Interaction=~1), lambda = 200, data =
      Ex16.8.1,control=glmmLassoControl(center=FALSE))

      Ex16.8.1.glmmLasso \<less\>- glmmLasso(fix = Yield ~ Variety, rnd =
      list(Trial = ~1, Block = ~1,Interaction=~1), lambda = 200, data =
      Ex16.8.1)
    </input>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.red.glmmLasso \<less\>- glmmLasso(fix = Yield ~ Variety, rnd =
      list(Trial = ~1, Block = ~1), lambda = 200, data = Ex16.8.1)

      anova(Ex16.8.1.glmmLasso,Ex16.8.1.red.glmmLasso)
    <|unfolded-prog-io>
      Ex16.8.1.red.glmmLasso \<less\>- glmmLasso(fix = Yield ~ Variety, rnd =
      list(Trial

      \<less\> glmmLasso(fix = Yield ~ Variety, rnd = list(Trial = ~1, Block
      = ~1), lambda

      \<less\>ariety, rnd = list(Trial = ~1, Block = ~1), lambda = 200, data
      = Ex16.8.1)

      \<gtr\> anova(Ex16.8.1.glmmLasso,Ex16.8.1.red.glmmLasso)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "glmmLasso"
    </unfolded-prog-io|>

    <\textput>
      <section|minque>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(minque)

      packageDescription("minque")\ 

      Table5.7.minque \<less\>- lmm(obs ~ trt \| rep, data=Table5.7,
      method="reml")

      \;

      #anova(Table5.7.minque1)

      #summary(aov(Table5.7.minque1))

      Table5.7.minque[[1]]$Var

      Table5.7.minque[[1]]$FixedEffect

      Table5.7.minque[[1]]$RandomEffect
    <|unfolded-prog-io>
      library(minque)

      \<gtr\> packageDescription("minque")\ 

      Package: minque

      Type: Package

      Title: An R Package for Linear Mixed Model Analyses

      Version: 1.1

      Date: 2014-09-06

      Author: Jixiang Wu

      Maintainer: Jixiang Wu \<less\>qgtools@gmail.com\<gtr\>

      Description: This package offers three important components: (1) to

      \ \ \ \ \ \ \ construct a use-defined linear mixed model, (2) to employ
      one

      \ \ \ \ \ \ \ of linear mixed model approaches: minimum norm quadratic

      \ \ \ \ \ \ \ unbiased estimation (MINQUE) (Rao, 1971) for variance

      \ \ \ \ \ \ \ component estimation and random effect prediction; and
      (3) to

      \ \ \ \ \ \ \ employ a jackknife resampling technique to conduct
      various

      \ \ \ \ \ \ \ statistical tests. In addition, this package provides the

      \ \ \ \ \ \ \ function for model or data evaluations.This R package
      offers

      \ \ \ \ \ \ \ fast computations for large data sets analyses for
      various

      \ \ \ \ \ \ \ irregular data structures.

      License: GPL-2

      LazyLoad: yes

      Depends: klaR, stats,utils,Matrix

      Packaged: 2014-09-07 14:17:02 UTC; user1

      NeedsCompilation: no

      Repository: CRAN

      Date/Publication: 2014-09-08 06:58:28

      Built: R 3.3.0; ; 2016-05-05 06:02:27 UTC; unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/minque/Meta/package.rds\ 

      \<gtr\> Table5.7.minque \<less\>- lmm(obs ~ trt \| rep, data=Table5.7,
      method="reml")

      \<gtr\>\ 

      \<gtr\> #anova(Table5.7.minque1)

      \<gtr\> #summary(aov(Table5.7.minque1))

      \<gtr\> Table5.7.minque[[1]]$Var

      $obs

      \ \ \ \ \ \ \ \ \ \ \ \ \ Est \ \ \ \ \ \ \ SE \ \ \ Chi_sq
      \ \ \ \ P_value

      V(rep) 0.8908509 0.9355256 0.9067732 0.170486016

      V(e) \ \ 1.3184829 0.5171070 6.5011201 0.005390328

      \;

      \<gtr\> Table5.7.minque[[1]]$FixedEffect

      $obs

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ Est \ \ \ \ \ \ \ SE \ \ \ \ z_value
      \ \ \ P_value

      mu \ \ \ \ \ 5.2748586 0.5621356 \ 9.38360581 0.00000000

      trt(4) -0.4023586 0.5594916 -0.71915041 0.47204825

      trt(5) \ 0.2926414 0.5594916 \ 0.52304881 0.60094029

      trt(6) \ 1.7751414 0.5594916 \ 3.17277592 0.00150989

      trt(3) \ 0.0376414 0.5594916 \ 0.06727787 0.94636050

      trt(2) -0.3698586 0.5594916 -0.66106196 0.50857258

      trt(1) -1.3332070 0.7527878 -1.77102637 0.07655632

      \;

      \<gtr\> Table5.7.minque[[1]]$RandomEffect

      $obs

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Pre \ \ \ \ \ \ \ SE \ \ \ \ z_value
      \ \ \ P_value

      rep(1) -1.23876186 0.7179364 -1.72544785 0.08444679

      rep(2) \ 1.03891934 0.7179364 \ 1.44709099 0.14787144

      rep(3) -0.03918274 0.7273426 -0.05387109 0.95703787

      rep(4) \ 0.23902527 0.7273426 \ 0.32862817 0.74243676

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.minque)

      anova(Table5.7.minque)
    <|unfolded-prog-io>
      summary(Table5.7.minque)

      \ \ \ \ \ \ Length Class \ Mode \ \ 

      reml \ 5 \ \ \ \ \ -none- list \ \ 

      ALPHA 1 \ \ \ \ \ -none- numeric

      \<gtr\> anova(Table5.7.minque)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "list"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Table5.7.red.minque \<less\>- update(Table5.7.red.minque, .~ . - trt)

      Table5.7.red.minque \<less\>- lmm(obs ~ 1 \| rep, data=Table5.7,
      method="reml")

      anova(Table5.7.minque,Table5.7.red.minque)
    <|unfolded-prog-io>
      Table5.7.red.minque \<less\>- update(Table5.7.red.minque, .~ . - trt)

      Error in update.default(Table5.7.red.minque, . ~ . - trt) :\ 

      \ \ need an object with call component

      \<gtr\> Table5.7.red.minque \<less\>- lmm(obs ~ 1 \| rep,
      data=Table5.7, method="reml")

      \<gtr\> anova(Table5.7.minque,Table5.7.red.minque)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "list"
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      Ex16.8.1.minque \<less\>- lmm(Yield ~ Variety \| Trial/Rep +
      Variety:Trial, data=Ex16.8.1, method="reml")
    <|unfolded-prog-io>
      Ex16.8.1.minque \<less\>- lmm(Yield ~ Variety \| Trial/Rep +
      Variety:Trial, data=Ex

      \<less\>eld ~ Variety \| Trial/Rep + Variety:Trial, data=Ex16.8.1,
      method="reml")
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.minque.Rda")) {

      \ \ Rprof("meta.minque.prof")

      \ \ meta.minque \<less\>- lmm(YLD ~ Entry \| Loca/Repe + Loca:Entry,
      data=rcbd.dat, method="reml")

      \ \ Rprof(NULL)

      \ \ save(meta.minque,file="meta.minque.Rda")

      } else {

      \ \ load(file="meta.minque.Rda")

      }

      meta.minque.summary \<less\>- summaryRprof("meta.minque.prof")

      head(meta.minque.summary[[1]])

      head(meta.minque.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("meta.minque.Rda")) {

      + \ \ Rprof("meta.minque.prof")

      + \ \ meta.minque \<less\>- lmm(YLD ~ Entry \| Loca/Repe + Loca:Entry,
      data=rcbd.dat, m

      \<less\>~ Entry \| Loca/Repe + Loca:Entry, data=rcbd.dat,
      method="reml")

      + \ \ Rprof(NULL)

      + \ \ save(meta.minque,file="meta.minque.Rda")

      + } else {

      + \ \ load(file="meta.minque.Rda")

      + }

      \<gtr\> meta.minque.summary \<less\>- summaryRprof("meta.minque.prof")

      \<gtr\> head(meta.minque.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      "%*%" \ \ \ \ \ \ \ \ \ \ \ \ \ 9.06 \ \ \ 91.33 \ \ \ \ \ \ 9.06
      \ \ \ \ 91.33

      "t.default" \ \ \ \ \ \ \ 0.32 \ \ \ \ 3.23 \ \ \ \ \ \ 0.32
      \ \ \ \ \ 3.23

      "Ops.factor" \ \ \ \ \ \ 0.14 \ \ \ \ 1.41 \ \ \ \ \ \ 0.32
      \ \ \ \ \ 3.23

      "sort.int" \ \ \ \ \ \ \ \ 0.08 \ \ \ \ 0.81 \ \ \ \ \ \ 0.10
      \ \ \ \ \ 1.01

      "noNA.levels" \ \ \ \ \ 0.04 \ \ \ \ 0.40 \ \ \ \ \ \ 0.06
      \ \ \ \ \ 0.60

      "NextMethod" \ \ \ \ \ \ 0.04 \ \ \ \ 0.40 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 0.40

      \<gtr\> head(meta.minque.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "lmm" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 9.92 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "lmm1" \ \ \ \ \ \ \ \ \ \ \ \ \ 9.92 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "genmod.reml" \ \ \ \ \ \ 9.52 \ \ \ \ 95.97 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "reml0" \ \ \ \ \ \ \ \ \ \ \ \ 9.52 \ \ \ \ 95.97 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "%*%" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 9.06 \ \ \ \ 91.33 \ \ \ \ \ 9.06
      \ \ \ 91.33

      "genmod" \ \ \ \ \ \ \ \ \ \ \ 8.96 \ \ \ \ 90.32 \ \ \ \ \ 0.00
      \ \ \ \ 0.00
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      #detach("package:minque")
    <|unfolded-prog-io>
      detach("package:minque")
    </unfolded-prog-io|>

    <\textput>
      <section|MCMCglmm>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(MCMCglmm)

      packageDescription("MCMCglmm") \ \ \ 

      Table5.7.mcmc1 \<less\>- MCMCglmm(fixed=obs ~ 0+trt, random = ~ rep,
      data=Table5.7, verbose=FALSE)

      #Table5.7.red.mcmc1 \<less\>- update(Table5.7.mcmc1,fixed=obs ~ 1)

      Table5.7.red.mcmc1 \<less\>- MCMCglmm(fixed=obs ~ 1, random = ~ rep,
      data=Table5.7, verbose=FALSE)
    <|unfolded-prog-io>
      library(MCMCglmm)

      Loading required package: coda

      Loading required package: ape

      \<gtr\> packageDescription("MCMCglmm") \ \ \ 

      Package: MCMCglmm

      Version: 2.22.1

      Date: 2015-09-21

      Title: MCMC Generalised Linear Mixed Models

      Depends: Matrix, coda, ape

      Imports: corpcor, tensorA, cubature, methods

      Suggests: rgl, combinat, mvtnorm, orthopolynom

      Author: Jarrod Hadfield

      Maintainer: Jarrod Hadfield \<less\>j.hadfield@ed.ac.uk\<gtr\>

      Description: MCMC Generalised Linear Mixed Models.

      License: GPL (\<gtr\>= 2)

      NeedsCompilation: yes

      Packaged: 2016-01-30 12:16:26 UTC; ripley

      Repository: CRAN

      Date/Publication: 2016-01-30 13:41:43

      Built: R 3.3.0; x86_64-apple-darwin13.4.0; 2016-05-05 03:35:22 UTC;

      \ \ \ \ \ \ \ unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/MCMCglmm/Meta/package.rds\ 

      \<gtr\> Table5.7.mcmc1 \<less\>- MCMCglmm(fixed=obs ~ 0+trt, random = ~
      rep, data=Table5.7

      \<less\>m(fixed=obs ~ 0+trt, random = ~ rep, data=Table5.7,
      verbose=FALSE)

      \<gtr\> #Table5.7.red.mcmc1 \<less\>- update(Table5.7.mcmc1,fixed=obs ~
      1)

      \<gtr\> Table5.7.red.mcmc1 \<less\>- MCMCglmm(fixed=obs ~ 1, random = ~
      rep, data=Table5.7

      \<less\>Cglmm(fixed=obs ~ 1, random = ~ rep, data=Table5.7,
      verbose=FALSE)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.mcmc1)$Gcovariances

      summary(Table5.7.mcmc1)$Rcovariances
    <|unfolded-prog-io>
      summary(Table5.7.mcmc1)$Gcovariances

      \ \ \ \ \ post.mean \ \ \ \ \ l-95% CI \ \ \ u-95% CI eff.samp

      rep 0.09949345 8.699999e-127 0.004938485 251.6083

      \<gtr\> summary(Table5.7.mcmc1)$Rcovariances

      \ \ \ \ \ \ post.mean \ l-95% CI u-95% CI eff.samp

      units \ 2.452165 0.8851592 4.312951 830.4315
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.red.mcmc1)$DIC

      summary(Table5.7.mcmc1)$DIC

      summary(Table5.7.red.mcmc1)$DIC-summary(Table5.7.mcmc1)$DIC

      summary(Table5.7.mcmc1)$solutions
    <|unfolded-prog-io>
      summary(Table5.7.red.mcmc1)$DIC

      [1] 85.07655

      \<gtr\> summary(Table5.7.mcmc1)$DIC

      [1] 87.04165

      \<gtr\> summary(Table5.7.red.mcmc1)$DIC-summary(Table5.7.mcmc1)$DIC

      [1] -1.965105

      \<gtr\> summary(Table5.7.mcmc1)$solutions

      \ \ \ \ \ post.mean l-95% CI u-95% CI eff.samp pMCMC

      trt1 \ 3.990190 2.068299 6.374902 1000.000 0.001

      trt2 \ 4.933365 3.359641 6.397682 1000.000 0.001

      trt3 \ 5.296939 3.710035 6.852011 1139.663 0.001

      trt4 \ 4.872741 3.320137 6.524613 1613.970 0.001

      trt5 \ 5.548225 4.034436 7.026171 1000.000 0.001

      trt6 \ 7.059606 5.437773 8.618825 1000.000 0.001
    </unfolded-prog-io|>

    \;

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      mcmcGLMM.tbl \<less\>- summary(Table5.7.mcmc1)$solutions
    <|unfolded-prog-io>
      mcmcGLMM.tbl \<less\>- summary(Table5.7.mcmc1)$solutions
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.mcmc.Rda")) {

      \ \ \ Rprof("meta.MCMCglmm.prof")

      \ \ \ meta.mcmc \<less\>- MCMCglmm(fixed=YLD ~ 0 + Entry, random = ~
      Loca + Loca:Entry + Loca:Repe, data=rcbd.dat,verbose=FALSE)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ YLD ~ Entry
      + (1 \| Loca/Repe) + (1 \| Loca:Entry)

      \ \ \ Rprof(NULL)

      \ \ \ Rprof("meta.cotes.MCMCglmm.prof")

      \ \ \ cotes.mcmc \<less\>- MCMCglmm(fixed=YLD ~ 0 + Entry, random = ~
      Loca + idh(Entry):Loca + \ Loca:Repe,rcov=~idh(Loca):units,data=rcbd.dat,verbose=FALSE)

      \ \ \ Rprof(NULL)

      \ \ \ save(meta.mcmc,file="meta.mcmc.Rda")

      \ \ \ save(cotes.mcmc,file="cotes.mcmc.Rda")

      \ \ \ 

      } else {

      \ \ \ load(file="meta.mcmc.Rda")

      \ \ \ load(file="cotes.mcmc.Rda")

      }

      meta.MCMCglmm.summary \<less\>- summaryRprof("meta.MCMCglmm.prof")

      head(meta.MCMCglmm.summary[[1]])

      head(meta.MCMCglmm.summary[[2]])

      meta.cotes.MCMCglmm.summary \<less\>-
      summaryRprof("meta.cotes.MCMCglmm.prof")

      head(meta.cotes.MCMCglmm.summary[[1]])

      head(meta.cotes.MCMCglmm.summary[[2]])
    <|unfolded-prog-io>
      if(!file.exists("meta.mcmc.Rda")) {

      + \ \ \ Rprof("meta.MCMCglmm.prof")

      + \ \ \ meta.mcmc \<less\>- MCMCglmm(fixed=YLD ~ 0 + Entry, random = ~
      Loca + Loca:Entr

      \<less\>fixed=YLD ~ 0 + Entry, random = ~ Loca + Loca:Entry +
      Loca:Repe, data=rcbd.d

      \<less\>dom = ~ Loca + Loca:Entry + Loca:Repe,
      data=rcbd.dat,verbose=FALSE)

      + \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ YLD ~
      Entry + (1 \| Loca/Repe) + (1 \| Loca:Ent

      \<less\> \ \ \ \ YLD ~ Entry + (1 \| Loca/Repe) + (1 \| Loca:Entry)

      + \ \ \ Rprof(NULL)

      + \ \ \ Rprof("meta.cotes.MCMCglmm.prof")

      + \ \ \ cotes.mcmc \<less\>- MCMCglmm(fixed=YLD ~ 0 + Entry, random = ~
      Loca + idh(Entr

      \<less\>(fixed=YLD ~ 0 + Entry, random = ~ Loca + idh(Entry):Loca +
      \ Loca:Repe,rcov=

      \<less\>ndom = ~ Loca + idh(Entry):Loca +
      \ Loca:Repe,rcov=~idh(Loca):units,data=rcbd

      \<less\>:Loca + \ Loca:Repe,rcov=~idh(Loca):units,data=rcbd.dat,verbose=FALSE)

      + \ \ \ Rprof(NULL)

      + \ \ \ save(meta.mcmc,file="meta.mcmc.Rda")

      + \ \ \ save(cotes.mcmc,file="cotes.mcmc.Rda")

      + \ \ \ 

      + } else {

      + \ \ \ load(file="meta.mcmc.Rda")

      + \ \ \ load(file="cotes.mcmc.Rda")

      + }

      \<gtr\> meta.MCMCglmm.summary \<less\>-
      summaryRprof("meta.MCMCglmm.prof")

      \<gtr\> head(meta.MCMCglmm.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time
      total.pct

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 4.82 \ \ \ 97.57
      \ \ \ \ \ \ 4.82 \ \ \ \ 97.57

      "buildZ" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.40
      \ \ \ \ \ \ 0.08 \ \ \ \ \ 1.62

      ".getClassFromCache" \ \ \ \ \ 0.02 \ \ \ \ 0.40 \ \ \ \ \ \ 0.02
      \ \ \ \ \ 0.40

      "apply" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.40
      \ \ \ \ \ \ 0.02 \ \ \ \ \ 0.40

      "as.matrix" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.40
      \ \ \ \ \ \ 0.02 \ \ \ \ \ 0.40

      "is.environment" \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.40 \ \ \ \ \ \ 0.02
      \ \ \ \ \ 0.40

      \<gtr\> head(meta.MCMCglmm.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct
      self.time self.pct

      "MCMCglmm" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 4.94 \ \ \ 100.00
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 4.82 \ \ \ \ 97.57
      \ \ \ \ \ 4.82 \ \ \ 97.57

      "buildZ" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.08 \ \ \ \ \ 1.62
      \ \ \ \ \ 0.02 \ \ \ \ 0.40

      "standardGeneric" \ \ \ \ \ \ \ \ \ 0.04 \ \ \ \ \ 0.81 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      ".getClassFromCache" \ \ \ \ \ \ 0.02 \ \ \ \ \ 0.40 \ \ \ \ \ 0.02
      \ \ \ \ 0.40

      "apply" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ \ 0.40
      \ \ \ \ \ 0.02 \ \ \ \ 0.40

      \<gtr\> meta.cotes.MCMCglmm.summary \<less\>-
      summaryRprof("meta.cotes.MCMCglmm.prof")

      \<gtr\> head(meta.cotes.MCMCglmm.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 7.26 \ \ \ 97.58 \ \ \ \ \ \ 7.26
      \ \ \ \ 97.58

      "getClassDef" \ \ \ \ \ 0.06 \ \ \ \ 0.81 \ \ \ \ \ \ 0.06
      \ \ \ \ \ 0.81

      "buildZ" \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.27 \ \ \ \ \ \ 0.14
      \ \ \ \ \ 1.88

      "as" \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.27 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 0.54

      "which" \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.27 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 0.54

      "apply" \ \ \ \ \ \ \ \ \ \ \ 0.02 \ \ \ \ 0.27 \ \ \ \ \ \ 0.02
      \ \ \ \ \ 0.27

      \<gtr\> head(meta.cotes.MCMCglmm.summary[[2]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time self.pct

      "MCMCglmm" \ \ \ \ \ \ \ \ \ 7.44 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      ".C" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 7.26 \ \ \ \ 97.58 \ \ \ \ \ 7.26
      \ \ \ 97.58

      "buildZ" \ \ \ \ \ \ \ \ \ \ \ 0.14 \ \ \ \ \ 1.88 \ \ \ \ \ 0.02
      \ \ \ \ 0.27

      "getClassDef" \ \ \ \ \ \ 0.06 \ \ \ \ \ 0.81 \ \ \ \ \ 0.06
      \ \ \ \ 0.81

      ".nextMethod" \ \ \ \ \ \ 0.06 \ \ \ \ \ 0.81 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "Matrix" \ \ \ \ \ \ \ \ \ \ \ 0.06 \ \ \ \ \ 0.81 \ \ \ \ \ 0.00
      \ \ \ \ 0.00
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      #detach("package:MCMCglmm")
    <|unfolded-prog-io>
      #detach("package:MCMCglmm")
    </unfolded-prog-io|>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      \;
    </input>

    \;

    <\textput>
      <section|INLA>

      Also not on CRAN, install via

      <verbatim|install.packages("INLA", repos="http://www.math.ntnu.no/inla/R/stable")>
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(INLA)

      packageDescription("INLA")\ 

      Table5.7.inla \<less\>- inla(obs ~ trt + f(rep, model="iid"),
      data=Table5.7)
    <|unfolded-prog-io>
      library(INLA)

      Loading required package: sp

      Loading required package: splines

      This is INLA 0.0-1468872408, dated 2016-07-18 (14:43:05+0100).

      See www.r-inla.org/contact-us for how to get help.

      \<gtr\> packageDescription("INLA")\ 

      Package: INLA

      Type: Package

      Title: Functions which Allow to Perform Full Bayesian Analysis of

      \ \ \ \ \ \ \ Latent Gaussian Models using Integrated Nested Laplace

      \ \ \ \ \ \ \ Approximations

      Author: Havard Rue, Sara Martino, Finn Lindgren, Daniel Simpson,

      \ \ \ \ \ \ \ Andrea Riebler, Elias Teixeira Krainski and Geir-Arne

      \ \ \ \ \ \ \ Fuglstad

      Maintainer: Havard Rue \<less\>hrue@math.ntnu.no\<gtr\>, Finn Lindgren

      \ \ \ \ \ \ \ \<less\>finn.lindgren@gmail.com\<gtr\>, Daniel Simpson

      \ \ \ \ \ \ \ \<less\>dp.simpson@gmail.com\<gtr\>, Andrea Riebler

      \ \ \ \ \ \ \ \<less\>andrea.riebler@math.ntnu.no\<gtr\>, Elias
      Teixeira Krainski

      \ \ \ \ \ \ \ \<less\>elias.krainski@math.ntnu.no\<gtr\> and Geir-Arne
      Fuglstad

      \ \ \ \ \ \ \ \<less\>fulgstad@math.ntnu.no\<gtr\>

      Description: This package contains functions which allow to perform

      \ \ \ \ \ \ \ full Bayesian analysis of latent Gaussian models using

      \ \ \ \ \ \ \ Integrated Nested Laplace Approximaxion, and is a
      front-end

      \ \ \ \ \ \ \ to the inla-program.

      Depends: R (\<gtr\>= 2.10), sp, Matrix, splines

      Suggests: mvtnorm, numDeriv, Rgraphviz, graph, fields, rgl, parallel,

      \ \ \ \ \ \ \ pixmap, splancs, orthopolynom, compiler, devtools, knitr,

      \ \ \ \ \ \ \ markdown, shiny

      VignetteBuilder: knitr

      BuildVignettes: true

      ByteCompile: no

      LazyData: true

      License: GPL (\<gtr\>= 2)

      Version: 0.0-1468872408

      Date: 2016-07-18 (hgid: 895e86f8a94e date: Mon Jul 18 14:43:05 2016

      \ \ \ \ \ \ \ +0100)

      NeedsCompilation: no

      Packaged: 2016-07-18 20:10:44 UTC; hrue

      Built: R 3.3.0; ; 2016-07-18 20:12:43 UTC; unix

      \;

      -- File: /Users/peter/Library/R/3.3/library/INLA/Meta/package.rds\ 

      \<gtr\> Table5.7.inla \<less\>- inla(obs ~ trt + f(rep, model="iid"),
      data=Table5.7)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      summary(Table5.7.inla)

      \;
    <|unfolded-prog-io>
      summary(Table5.7.inla)

      \;

      Call:

      "inla(formula = obs ~ trt + f(rep, model = \\"iid\\"), data =
      Table5.7)"

      \;

      Time used:

      \ Pre-processing \ \ \ Running inla Post-processing
      \ \ \ \ \ \ \ \ \ \ Total\ 

      \ \ \ \ \ \ \ \ \ 1.1025 \ \ \ \ \ \ \ \ \ 0.2558
      \ \ \ \ \ \ \ \ \ 0.0682 \ \ \ \ \ \ \ \ \ 1.4266\ 

      \;

      Fixed effects:

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ mean \ \ \ \ sd 0.025quant 0.5quant
      0.975quant \ \ mode kld

      (Intercept) 4.0380 1.0345 \ \ \ \ 1.9867 \ \ 4.0375 \ \ \ \ 6.0888
      4.0368 \ \ 0

      trt2 \ \ \ \ \ \ \ 0.8665 1.2676 \ \ \ -1.6500 \ \ 0.8669
      \ \ \ \ 3.3762 0.8678 \ \ 0

      trt3 \ \ \ \ \ \ \ 1.2738 1.2676 \ \ \ -1.2428 \ \ 1.2742
      \ \ \ \ 3.7834 1.2751 \ \ 0

      trt4 \ \ \ \ \ \ \ 0.8340 1.2676 \ \ \ -1.6825 \ \ 0.8345
      \ \ \ \ 3.3437 0.8353 \ \ 0

      trt5 \ \ \ \ \ \ \ 1.5287 1.2676 \ \ \ -0.9879 \ \ 1.5291
      \ \ \ \ 4.0383 1.5300 \ \ 0

      trt6 \ \ \ \ \ \ \ 3.0104 1.2676 \ \ \ \ 0.4937 \ \ 3.0109
      \ \ \ \ 5.5199 3.0118 \ \ 0

      \;

      Random effects:

      Name \ \ \ \ \ Model

      \ rep \ \ IID model\ 

      \;

      Model hyperparameters:

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ mean
      \ \ \ \ \ \ \ sd 0.025quant

      Precision for the Gaussian observations 5.174e-01 1.725e-01
      \ \ \ \ 0.2471

      Precision for rep \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.859e+04
      1.836e+04 \ 1264.5512

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.5quant
      0.975quant \ \ \ \ \ mode

      Precision for the Gaussian observations \ \ \ \ 0.496 \ 9.154e-01
      \ \ \ 0.4549

      Precision for rep \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 13184.628
      \ 6.696e+04 3433.0104

      \;

      Expected number of effective parameters(std dev): 5.994(0.0057)

      Number of equivalent replicates : 3.67\ 

      \;

      Marginal log-Likelihood: \ -65.45\ 

      \<gtr\>\ 
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      \;

      Table5.7.red.inla \<less\>- inla(obs ~ 1 + f(rep, model="iid"),
      data=Table5.7)

      #Table5.7.red.inla \<less\>- update(Table5.7.inla, . ~ . -trt)

      anova(Table5.7.inla)

      summary(aov(Table5.7.inla))

      vcov(Table5.7.inla)

      \;
    <|unfolded-prog-io>
      \;

      \<gtr\> Table5.7.red.inla \<less\>- inla(obs ~ 1 + f(rep, model="iid"),
      data=Table5.7)

      \<gtr\> #Table5.7.red.inla \<less\>- update(Table5.7.inla, . ~ . -trt)

      \<gtr\> anova(Table5.7.inla)

      Error in UseMethod("anova") :\ 

      \ \ no applicable method for 'anova' applied to an object of class
      "inla"

      \<gtr\> summary(aov(Table5.7.inla))

      Error in terms.default(formula, "Error") :\ 

      \ \ no terms component nor attribute

      \<gtr\> vcov(Table5.7.inla)

      Error in UseMethod("vcov") :\ 

      \ \ no applicable method for 'vcov' applied to an object of class
      "inla"

      \<gtr\>\ 
    </unfolded-prog-io|>

    <\textput>
      Note the interval widths (95% CI)
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      inla.tbl \<less\>- summary(Table5.7.inla)$fixed
    <|unfolded-prog-io>
      inla.tbl \<less\>- summary(Table5.7.inla)$fixed
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.inla.Rda")) {

      \ \ Rprof("meta.inla.prof")

      \ \ meta.inla \<less\>- inla(YLD ~ 0 + Entry + f(Loca, model="iid") +
      f(Loca:Repe, model="iid") + f(Loca:Entry, model="iid"), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.inla,file="meta.inla.Rda")

      } else {

      \ \ load(file="meta.inla.Rda")

      }

      summary(meta.inla)

      \;

      meta.inla.summary \<less\>- summaryRprof("meta.inla.prof")

      head(meta.inla.summary[[1]])

      head(meta.inla.summary[[2]])\ 
    <|unfolded-prog-io>
      if(!file.exists("meta.inla.Rda")) {

      + \ \ Rprof("meta.inla.prof")

      + \ \ meta.inla \<less\>- inla(YLD ~ 0 + Entry + f(Loca, model="iid") +
      f(Loca:Repe, m

      \<less\> 0 + Entry + f(Loca, model="iid") + f(Loca:Repe, model="iid") +
      f(Loca:Entry

      \<less\>="iid") + f(Loca:Repe, model="iid") + f(Loca:Entry,
      model="iid"), data=rcbd.

      \<less\>el="iid") + f(Loca:Entry, model="iid"), data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.inla,file="meta.inla.Rda")

      + } else {

      + \ \ load(file="meta.inla.Rda")

      + }

      \<gtr\> summary(meta.inla)

      \;

      Call:

      c("inla(formula = YLD ~ 0 + Entry + f(Loca, model = \\"iid\\") +
      f(Loca:Repe, ", \ " \ \ \ model = \\"iid\\") + f(Loca:Entry, model =
      \\"iid\\"), data = rcbd.dat)" )

      \;

      Time used:

      \ Pre-processing \ \ \ Running inla Post-processing
      \ \ \ \ \ \ \ \ \ \ Total\ 

      \ \ \ \ \ \ \ \ \ 1.5443 \ \ \ \ \ \ \ \ \ 2.4611
      \ \ \ \ \ \ \ \ \ 0.1096 \ \ \ \ \ \ \ \ \ 4.1150\ 

      \;

      Fixed effects:

      \ \ \ \ \ \ \ \ \ \ mean \ \ \ \ sd 0.025quant 0.5quant 0.975quant
      \ \ mode kld

      Entry1 \ 5.7289 0.8321 \ \ \ \ 4.0524 \ \ 5.7369 \ \ \ \ 7.3571 5.7501
      \ \ 0

      Entry2 \ 5.9167 0.8321 \ \ \ \ 4.2401 \ \ 5.9247 \ \ \ \ 7.5449 5.9379
      \ \ 0

      Entry3 \ 6.5786 0.8321 \ \ \ \ 4.9020 \ \ 6.5866 \ \ \ \ 8.2068 6.5998
      \ \ 0

      Entry4 \ 6.3503 0.8321 \ \ \ \ 4.6737 \ \ 6.3583 \ \ \ \ 7.9785 6.3715
      \ \ 0

      Entry5 \ 6.3747 0.8321 \ \ \ \ 4.6982 \ \ 6.3827 \ \ \ \ 8.0029 6.3959
      \ \ 0

      Entry6 \ 6.3450 0.8321 \ \ \ \ 4.6684 \ \ 6.3530 \ \ \ \ 7.9732 6.3662
      \ \ 0

      Entry7 \ 5.6564 0.8321 \ \ \ \ 3.9799 \ \ 5.6644 \ \ \ \ 7.2846 5.6776
      \ \ 0

      Entry8 \ 6.5003 0.8321 \ \ \ \ 4.8237 \ \ 6.5083 \ \ \ \ 8.1285 6.5215
      \ \ 0

      Entry9 \ 5.4898 0.8321 \ \ \ \ 3.8132 \ \ 5.4977 \ \ \ \ 7.1179 5.5110
      \ \ 0

      Entry10 6.2067 0.8321 \ \ \ \ 4.5301 \ \ 6.2147 \ \ \ \ 7.8349 6.2279
      \ \ 0

      Entry11 6.7608 0.8321 \ \ \ \ 5.0843 \ \ 6.7688 \ \ \ \ 8.3890 6.7820
      \ \ 0

      Entry12 5.9031 0.8321 \ \ \ \ 4.2265 \ \ 5.9111 \ \ \ \ 7.5313 5.9243
      \ \ 0

      Entry13 6.0492 0.8321 \ \ \ \ 4.3726 \ \ 6.0572 \ \ \ \ 7.6774 6.0704
      \ \ 0

      Entry14 3.4532 0.8321 \ \ \ \ 1.7766 \ \ 3.4612 \ \ \ \ 5.0814 3.4744
      \ \ 0

      Entry15 5.9209 0.8321 \ \ \ \ 4.2443 \ \ 5.9288 \ \ \ \ 7.5490 5.9421
      \ \ 0

      Entry16 4.8217 0.8321 \ \ \ \ 3.1452 \ \ 4.8297 \ \ \ \ 6.4499 4.8429
      \ \ 0

      Entry17 6.4736 0.8321 \ \ \ \ 4.7971 \ \ 6.4816 \ \ \ \ 8.1018 6.4948
      \ \ 0

      Entry18 6.3808 0.8321 \ \ \ \ 4.7043 \ \ 6.3888 \ \ \ \ 8.0090 6.4020
      \ \ 0

      Entry19 3.1818 0.8321 \ \ \ \ 1.5052 \ \ 3.1898 \ \ \ \ 4.8100 3.2030
      \ \ 0

      Entry20 5.7759 0.8321 \ \ \ \ 4.0993 \ \ 5.7838 \ \ \ \ 7.4040 5.7971
      \ \ 0

      Entry21 4.7420 0.8321 \ \ \ \ 3.0655 \ \ 4.7500 \ \ \ \ 6.3702 4.7632
      \ \ 0

      Entry22 6.4989 0.8321 \ \ \ \ 4.8223 \ \ 6.5069 \ \ \ \ 8.1271 6.5201
      \ \ 0

      Entry23 3.6379 0.8321 \ \ \ \ 1.9613 \ \ 3.6459 \ \ \ \ 5.2661 3.6591
      \ \ 0

      Entry24 5.7603 0.8321 \ \ \ \ 4.0837 \ \ 5.7683 \ \ \ \ 7.3885 5.7815
      \ \ 0

      Entry25 4.7295 0.8321 \ \ \ \ 3.0530 \ \ 4.7375 \ \ \ \ 6.3577 4.7507
      \ \ 0

      Entry26 6.7331 0.8321 \ \ \ \ 5.0565 \ \ 6.7410 \ \ \ \ 8.3612 6.7543
      \ \ 0

      Entry27 6.6211 0.8321 \ \ \ \ 4.9445 \ \ 6.6291 \ \ \ \ 8.2493 6.6423
      \ \ 0

      Entry28 6.2283 0.8321 \ \ \ \ 4.5518 \ \ 6.2363 \ \ \ \ 7.8565 6.2496
      \ \ 0

      Entry29 5.6803 0.8321 \ \ \ \ 4.0037 \ \ 5.6883 \ \ \ \ 7.3085 5.7015
      \ \ 0

      Entry30 5.1823 0.8321 \ \ \ \ 3.5057 \ \ 5.1903 \ \ \ \ 6.8105 5.2035
      \ \ 0

      Entry31 6.0797 0.8321 \ \ \ \ 4.4032 \ \ 6.0877 \ \ \ \ 7.7079 6.1009
      \ \ 0

      Entry32 5.5414 0.8321 \ \ \ \ 3.8649 \ \ 5.5494 \ \ \ \ 7.1696 5.5626
      \ \ 0

      \;

      Random effects:

      Name \ \ \ \ \ Model

      \ Loca \ \ IID model\ 

      Loca:Repe \ \ IID model\ 

      Loca:Entry \ \ IID model\ 

      \;

      Model hyperparameters:

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ mean
      \ \ \ \ \ \ \ sd 0.025quant

      Precision for the Gaussian observations 6.968e-01 2.960e-02
      \ \ \ \ 0.6401

      Precision for Loca \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.378e-01
      5.450e-02 \ \ \ \ 0.0569

      Precision for Loca:Repe \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.650e+04
      1.734e+04 \ \ 864.8682

      Precision for Loca:Entry \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.896e+04
      1.853e+04 \ 1265.3491

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.5quant
      0.975quant \ \ \ \ \ mode

      Precision for the Gaussian observations 6.963e-01 \ 7.564e-01
      \ \ \ 0.6954

      Precision for Loca \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.296e-01
      \ 2.670e-01 \ \ \ 0.1134

      Precision for Loca:Repe \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.120e+04
      \ 6.265e+04 2179.1404

      Precision for Loca:Entry \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1.352e+04
      \ 6.761e+04 3438.2960

      \;

      Expected number of effective parameters(std dev): 43.06(0.1233)

      Number of equivalent replicates : 26.75\ 

      \;

      Marginal log-Likelihood: \ -2049.88\ 

      \<gtr\>\ 

      \<gtr\> meta.inla.summary \<less\>- summaryRprof("meta.inla.prof")

      \<gtr\> head(meta.inla.summary[[1]])

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ self.time self.pct total.time total.pct

      "file" \ \ \ \ \ \ \ \ \ \ \ \ 0.06 \ \ \ 14.29 \ \ \ \ \ \ 0.12
      \ \ \ \ 28.57

      "file.exists" \ \ \ \ \ 0.06 \ \ \ 14.29 \ \ \ \ \ \ 0.06 \ \ \ \ 14.29

      "getwd" \ \ \ \ \ \ \ \ \ \ \ 0.04 \ \ \ \ 9.52 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 9.52

      "options" \ \ \ \ \ \ \ \ \ 0.04 \ \ \ \ 9.52 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 9.52

      "readBin" \ \ \ \ \ \ \ \ \ 0.04 \ \ \ \ 9.52 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 9.52

      "system" \ \ \ \ \ \ \ \ \ \ 0.04 \ \ \ \ 9.52 \ \ \ \ \ \ 0.04
      \ \ \ \ \ 9.52

      \<gtr\> head(meta.inla.summary[[2]])\ 

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ total.time total.pct self.time
      self.pct

      "inla" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.42 \ \ \ 100.00 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "file" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.12 \ \ \ \ 28.57
      \ \ \ \ \ 0.06 \ \ \ 14.29

      "cat" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.12 \ \ \ \ 28.57
      \ \ \ \ \ 0.00 \ \ \ \ 0.00

      "inla.getOption" \ \ \ \ \ \ 0.12 \ \ \ \ 28.57 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "doTryCatch" \ \ \ \ \ \ \ \ \ \ 0.10 \ \ \ \ 23.81 \ \ \ \ \ 0.00
      \ \ \ \ 0.00

      "eval" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0.10 \ \ \ \ 23.81
      \ \ \ \ \ 0.00 \ \ \ \ 0.00
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      #detach("package:INLA")
    <|unfolded-prog-io>
      #detach("package:INLA")
    </unfolded-prog-io|>

    <\textput>
      <section|brms>

      The first attempt to install from CRAN missed the boost headers;

      \ Table5.7.brms \<less\>- brm(obs ~ trt + (1 \| rep), data=Table5.7)

      Compiling the C++ model

      Error in rstan::stan_model(stanc_ret = x$model, save_dso = save_dso) :\ 

      \ \ Boost not found; call install.packages('BH')

      \;

      This didn't work, so I reinstalled

      <verbatim|install.packages("rstan", dependencies = TRUE)>

      This works, but get a segment fault while compiling. This doesn't
      happen on my other laptop.

      \;

      So I cloned the CmdStan respository, and from comman line ran make
      build. The error was

      \;

      In file included from src/cmdstan/stanc.cpp:1:

      In file included from stan/src/stan/command/stanc_helper.hpp:5:

      In file included from stan/src/stan/lang/compiler.hpp:4:

      stan/src/stan/lang/ast.hpp:4:10: fatal error:\ 

      \ \ \ \ \ \ 'boost/variant/recursive_variant.hpp' file not found

      #include \<less\>boost/variant/recursive_variant.hpp\<gtr\>

      \;

      So I downloaded boost.
    </textput>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      library(brms)

      packageDescription("brms")\ 

      #library(rstan)

      #Table5.7.brms \<less\>- brm(obs ~ trt + (1 \| rep), data=Table5.7)

      #Table5.7.red.brms \ \<less\>- brm(obs ~ 1 + (1 \| rep), data=Table5.7)

      #Table5.7.red.brms \<less\>- update(Table5.7.brms, . ~ . -trt)

      summary(Table5.7.brms)$fixed

      \;

      #anova(Table5.7.brms)

      #summary(aov(Table5.7.brms))

      VarCorr(Table5.7.brms)

      \;

      fixef(Table5.7.brms)

      ranef(Table5.7.brms)

      \;

      #intervals(Table5.7.brms)

      \;

      #summary(glht(Table5.7.brms,linfct=mcp(trt="Dunnett")))

      #cld(glht(Table5.7.brms,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      #lsmeans(Table5.7.brms,cld ~ trt)

      \;

      #str(Table5.7.brms)
    <|unfolded-prog-io>
      library(brms)

      Loading required package: rstan

      Loading required package: StanHeaders

      rstan (Version 2.12.1, packaged: 2016-09-11 13:07:50 UTC, GitRev:
      85f7a56811da)

      For execution on a local, multicore CPU with excess RAM we recommend
      calling

      rstan_options(auto_write = TRUE)

      options(mc.cores = parallel::detectCores())

      \;

      Attaching package: 'rstan'

      \;

      The following object is masked from 'package:coda':

      \;

      \ \ \ \ traceplot

      \;

      Loading 'brms' package (version 1.1.0). Useful instructions\ 

      can be found by typing help('brms'). A more detailed introduction\ 

      to the package is available through vignette('brms').

      \;

      Attaching package: 'brms'

      \;

      The following objects are masked from 'package:glmmLasso':

      \;

      \ \ \ \ acat, cumulative

      \;

      The following object is masked from 'package:glmmADMB':

      \;

      \ \ \ \ VarCorr

      \;

      The following object is masked from 'package:survival':

      \;

      \ \ \ \ kidney

      \;

      \<gtr\> packageDescription("brms")\ 

      Package: brms

      Type: Package

      Title: Bayesian Regression Models using Stan

      Version: 1.1.0

      Date: 2016-10-11

      Authors@R: person("Paul-Christian", "Buerkner", email =

      \ \ \ \ \ \ \ "paul.buerkner@gmail.com", role = c("aut", "cre"))

      Depends: R (\<gtr\>= 3.2.0), rstan (\<gtr\>= 2.12.0), ggplot2 (\<gtr\>=
      2.0.0), methods

      Imports: loo (\<gtr\>= 0.1.6), shinystan (\<gtr\>= 2.2.1), gridExtra
      (\<gtr\>= 2.0.0),

      \ \ \ \ \ \ \ lme4 (\<gtr\>= 1.1-11), Matrix (\<gtr\>= 1.1.1), mgcv
      (\<gtr\>= 1.8-13), coda,

      \ \ \ \ \ \ \ abind, statmod, stats, CircStats, graphics, utils,
      parallel,

      \ \ \ \ \ \ \ grDevices, grid

      Suggests: testthat (\<gtr\>= 0.9.1), arm, mvtnorm, KernSmooth, R.rsp,

      \ \ \ \ \ \ \ knitr, rmarkdown

      Description: Fit Bayesian generalized (non-)linear multilevel models

      \ \ \ \ \ \ \ using Stan for full Bayesian inference.

      LazyData: true

      NeedsCompilation: no

      License: GPL (\<gtr\>= 3)

      URL: https://github.com/paul-buerkner/brms

      BugReports: https://github.com/paul-buerkner/brms/issues

      VignetteBuilder: knitr, R.rsp

      RoxygenNote: 5.0.1

      Packaged: 2016-10-11 20:54:40 UTC; paulb

      Author: Paul-Christian Buerkner [aut, cre]

      Maintainer: Paul-Christian Buerkner
      \<less\>paul.buerkner@gmail.com\<gtr\>

      Repository: CRAN

      Date/Publication: 2016-10-11 23:53:54

      Built: R 3.3.0; ; 2016-10-14 14:13:10 UTC; unix

      \;

      -- File: /Library/Frameworks/R.framework/Versions/3.3/Resources/library/brms/Meta/package.rds\ 

      \<gtr\> #library(rstan)

      \<gtr\> #Table5.7.brms \<less\>- brm(obs ~ trt + (1 \| rep),
      data=Table5.7)

      \<gtr\> #Table5.7.red.brms \ \<less\>- brm(obs ~ 1 + (1 \| rep),
      data=Table5.7)

      \<gtr\> #Table5.7.red.brms \<less\>- update(Table5.7.brms, . ~ . -trt)

      \<gtr\> summary(Table5.7.brms)$fixed

      Error in summary(Table5.7.brms) : object 'Table5.7.brms' not found

      \<gtr\>\ 

      \<gtr\> #anova(Table5.7.brms)

      \<gtr\> #summary(aov(Table5.7.brms))

      \<gtr\> VarCorr(Table5.7.brms)

      Error in VarCorr(Table5.7.brms) : object 'Table5.7.brms' not found

      \<gtr\>\ 

      \<gtr\> fixef(Table5.7.brms)

      Error in fixef(Table5.7.brms) : object 'Table5.7.brms' not found

      \<gtr\> ranef(Table5.7.brms)

      Error in ranef(Table5.7.brms) : object 'Table5.7.brms' not found

      \<gtr\>\ 

      \<gtr\> #intervals(Table5.7.brms)

      \<gtr\>\ 

      \<gtr\> #summary(glht(Table5.7.brms,linfct=mcp(trt="Dunnett")))

      \<gtr\> #cld(glht(Table5.7.brms,linfct=mcp(trt="Tukey")),decreasing=TRUE)

      \<gtr\> #lsmeans(Table5.7.brms,cld ~ trt)

      \<gtr\>\ 

      \<gtr\> #str(Table5.7.brms)
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("meta.brms.Rda")) {

      \ \ Rprof("meta.brms.prof")

      \ \ #meta.brms \<less\>- brm(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(meta.brms,file="meta.brms.Rda")

      } else {

      \ \ load(file="meta.brms.Rda")

      }

      summary(meta.brms)

      summaryRprof("meta.brms.prof")
    <|unfolded-prog-io>
      if(!file.exists("meta.brms.Rda")) {

      + \ \ Rprof("meta.brms.prof")

      + \ \ #meta.brms \<less\>- brm(YLD ~ Entry + (1 \| Loca/Repe) + (1 \|
      Loca:Entry), data=

      \<less\> Entry + (1 \| Loca/Repe) + (1 \| Loca:Entry), data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(meta.brms,file="meta.brms.Rda")

      + } else {

      + \ \ load(file="meta.brms.Rda")

      + }

      Error in save(meta.brms, file = "meta.brms.Rda") :\ 

      \ \ object 'meta.brms' not found

      \<gtr\> summary(meta.brms)

      Error in summary(meta.brms) : object 'meta.brms' not found

      \<gtr\> summaryRprof("meta.brms.prof")

      $by.self

      [1] self.time \ self.pct \ \ total.time total.pct\ 

      \<less\>0 rows\<gtr\> (or 0-length row.names)

      \;

      $by.total

      [1] total.time total.pct \ self.time \ self.pct \ 

      \<less\>0 rows\<gtr\> (or 0-length row.names)

      \;

      $sample.interval

      [1] 0.02

      \;

      $sampling.time

      [1] 0

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      if(!file.exists("cotes.brms.Rda")) {

      \ \ Rprof("cotes.brms.prof")

      \ \ #cotes.brms \<less\>- brm(YLD ~ Entry + (1 \| Loca/Repe) + (0 +
      Entry\|Loca), data=rcbd.dat)

      \ \ Rprof(NULL)

      \ \ save(cotes.brms,file="cotes.brms.Rda")

      } else {

      \ \ load(file="cotes.brms.Rda")

      }

      summary(cotes.brms)

      summaryRprof("cotes.brms.prof")
    <|unfolded-prog-io>
      if(!file.exists("cotes.brms.Rda")) {

      + \ \ Rprof("cotes.brms.prof")

      + \ \ #cotes.brms \<less\>- brm(YLD ~ Entry + (1 \| Loca/Repe) + (0 +
      Entry\|Loca), data

      \<less\>~ Entry + (1 \| Loca/Repe) + (0 + Entry\|Loca), data=rcbd.dat)

      + \ \ Rprof(NULL)

      + \ \ save(cotes.brms,file="cotes.brms.Rda")

      + } else {

      + \ \ load(file="cotes.brms.Rda")

      + }

      Error in save(cotes.brms, file = "cotes.brms.Rda") :\ 

      \ \ object 'cotes.brms' not found

      \<gtr\> summary(cotes.brms)

      Error in summary(cotes.brms) : object 'cotes.brms' not found

      \<gtr\> summaryRprof("cotes.brms.prof")

      $by.self

      [1] self.time \ self.pct \ \ total.time total.pct\ 

      \<less\>0 rows\<gtr\> (or 0-length row.names)

      \;

      $by.total

      [1] total.time total.pct \ self.time \ self.pct \ 

      \<less\>0 rows\<gtr\> (or 0-length row.names)

      \;

      $sample.interval

      [1] 0.02

      \;

      $sampling.time

      [1] 0

      \;
    </unfolded-prog-io|>

    <\unfolded-prog-io>
      <with|color|red|\<gtr\> >
    <|unfolded-prog-io>
      head(methods("summary"))

      head(methods("anova"))

      head(methods("plot"))

      head(methods("vcov"))

      \ \ \ \ \ head(methods("ranef"))
    <|unfolded-prog-io>
      head(methods("summary"))

      [1] "summary,ANY-method" \ \ \ \ \ \ \ \ \ \ \ "summary,GridTopology-method"
      \ 

      [3] "summary,Spatial-method" \ \ \ \ \ \ \ "summary,diagonalMatrix-method"

      [5] "summary,mle-method" \ \ \ \ \ \ \ \ \ \ \ "summary,sparseMatrix-method"
      \ 

      \<gtr\> head(methods("anova"))

      [1] "anova.ace" \ \ \ \ \ \ "anova.coxph" \ \ \ \ "anova.coxphlist"
      "anova.glm" \ \ \ \ \ 

      [5] "anova.glmlist" \ \ "anova.glmmPQL" \ 

      \<gtr\> head(methods("plot"))

      [1] "plot,ANY,ANY-method" \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 

      [2] "plot,Spatial,missing-method" \ \ \ \ \ \ \ \ \ \ \ \ 

      [3] "plot,SpatialGrid,missing-method" \ \ \ \ \ \ \ \ 

      [4] "plot,SpatialGridDataFrame,missing-method"

      [5] "plot,SpatialLines,missing-method" \ \ \ \ \ \ \ 

      [6] "plot,SpatialMultiPoints,missing-method" \ 

      \<gtr\> head(methods("vcov"))

      [1] "vcov,ANY-method" "vcov,mle-method" "vcov.Arima"
      \ \ \ \ \ "vcov.admb" \ \ \ \ \ 

      [5] "vcov.brmsfit" \ \ \ "vcov.cch" \ \ \ \ \ \ 

      \<gtr\> \ \ \ \ \ head(methods("ranef"))

      [1] "ranef.brmsfit" \ "ranef.glmmadmb" "ranef.lmList"
      \ \ "ranef.lmList4"\ 

      [5] "ranef.lme" \ \ \ \ \ "ranef.merMod" \ 
    </unfolded-prog-io|>

    <\input>
      <with|color|red|\<gtr\> >
    <|input>
      \;
    </input>
  </program>

  <big-table|<tabular|<tformat|<table|<row|<cell|Function>|<cell|Package>|<cell|Dependencies>|<cell|>>|<row|<cell|lm>|<cell|base>|<cell|>|<cell|>>|<row|<cell|lme>|<cell|nlme>|<cell|>|<cell|>>|<row|<cell|lmer>|<cell|lme4>|<cell|>|<cell|>>|<row|<cell|blmer>|<cell|blme>|<cell|>|<cell|>>|<row|<cell|lmm>|<cell|minque>|<cell|>|<cell|>>|<row|<cell|MCMCglmm>|<cell|MCMCglmm>|<cell|>|<cell|>>|<row|<cell|glmmadmb>|<cell|glmmADMB>|<cell|>|<cell|>>|<row|<cell|glmmLasso>|<cell|glmmLasso>|<cell|>|<cell|>>|<row|<cell|glmmPQL>|<cell|MASS>|<cell|>|<cell|>>|<row|<cell|inla>|<cell|INLA>|<cell|>|<cell|>>|<row|<cell|brms>|<cell|brms>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|asreml>|<cell|>|<cell|>|<cell|>>>>>|>

  <big-table|<tabular|<tformat|<table|<row|<cell|Function>|<cell|Syntax>|<cell|Control>|<cell|>>|<row|<cell|lm>|<cell|<verbatim|obs
  ~ trt + rep>>|<cell|>|<cell|>>|<row|<cell|lme>|<cell|obs ~ trt +
  rep>|<cell|>|<cell|>>|<row|<cell|lmer>|<cell|lme4>|<cell|>|<cell|>>|<row|<cell|blmer>|<cell|blme>|<cell|>|<cell|>>|<row|<cell|lmm>|<cell|minque>|<cell|>|<cell|>>|<row|<cell|MCMCglmm>|<cell|MCMCglmm>|<cell|>|<cell|>>|<row|<cell|glmmadmb>|<cell|glmmADMB>|<cell|>|<cell|>>|<row|<cell|glmmLasso>|<cell|glmmLasso>|<cell|>|<cell|>>|<row|<cell|glmmPQL>|<cell|MASS>|<cell|>|<cell|>>|<row|<cell|inla>|<cell|INLA>|<cell|>|<cell|>>|<row|<cell|brms>|<cell|brms>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|asreml>|<cell|>|<cell|>|<cell|>>>>>|>

  <\big-table|<tabular|<tformat|<table|<row|<cell|>|<cell|lme>|<cell|lmer>|<cell|blmer>|<cell|lmm>|<cell|MCMC>|<cell|admb>|<cell|Lasso>|<cell|PQL>|<cell|inla>|<cell|brms>>|<row|<cell|update>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|ML/REML>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|aov>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|anova()>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|anova(,)>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|plot.lsmeans>|<cell|X>|<cell|X>|<cell|X>|<cell|>|<cell|>|<cell|X>|<cell|>|<cell|X>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>>>>>
    \;

    <\enumerate-numeric>
      <item>Warning if models differ in fixed effects

      <item>Recompute
    </enumerate-numeric>
  </big-table>

  \;

  <\big-table|<tabular|<tformat|<cwith|1|-1|2|2|cell-row-span|1>|<cwith|1|-1|2|2|cell-col-span|2>|<cwith|6|6|2|2|cell-row-span|1>|<cwith|6|6|2|2|cell-col-span|2>|<cwith|7|7|2|2|cell-row-span|1>|<cwith|7|7|2|2|cell-col-span|2>|<cwith|21|21|2|2|cell-row-span|1>|<cwith|21|21|2|2|cell-col-span|2>|<cwith|8|8|2|2|cell-row-span|1>|<cwith|8|8|2|2|cell-col-span|2>|<cwith|9|9|2|2|cell-row-span|1>|<cwith|9|9|2|2|cell-col-span|2>|<cwith|20|20|2|2|cell-row-span|1>|<cwith|20|20|2|2|cell-col-span|2>|<cwith|20|20|2|2|cell-row-span|1>|<cwith|20|20|2|2|cell-col-span|2>|<cwith|12|12|2|2|cell-row-span|1>|<cwith|12|12|2|2|cell-col-span|2>|<cwith|12|12|2|2|cell-row-span|1>|<cwith|12|12|2|2|cell-col-span|2>|<cwith|10|10|2|2|cell-row-span|1>|<cwith|10|10|2|2|cell-col-span|2>|<cwith|10|10|2|2|cell-row-span|1>|<cwith|10|10|2|2|cell-col-span|2>|<cwith|14|15|2|2|cell-row-span|1>|<cwith|14|15|2|2|cell-col-span|2>|<cwith|14|14|2|2|cell-row-span|1>|<cwith|14|14|2|2|cell-col-span|2>|<cwith|15|15|2|2|cell-row-span|1>|<cwith|15|15|2|2|cell-col-span|2>|<cwith|19|19|2|2|cell-row-span|1>|<cwith|19|19|2|2|cell-col-span|2>|<cwith|19|19|2|2|cell-row-span|1>|<cwith|19|19|2|2|cell-col-span|2>|<table|<row|<cell|Function>|<cell|<math|>Error>|<cell|>|<cell|>|<cell|Trial>|<cell|>|<cell|Treatment:Trial>|<cell|>|<cell|Trial:Rep>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|lm>|<cell|19708>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|lme>|<cell|20243>|<cell|>|<cell|142>|<cell|42682>|<cell|206>|<cell|->|<cell|>|<cell|0.0001>|<cell|0.01>>|<row|<cell|lmer>|<cell|>|<cell|>|<cell|138>|<cell|>|<cell|206>|<cell|>|<cell|42>|<cell|>|<cell|0.00>>|<row|<cell|blmer>|<cell|>|<cell|>|<cell|136>|<cell|>|<cell|177>|<cell|>|<cell|46>|<cell|>|<cell|38>>|<row|<cell|glmmPQL>|<cell|18122>|<cell|>|<cell|134>|<cell|28326>|<cell|168>|<cell|>|<cell|>|<cell|0.00009>|<cell|0.009>>|<row|<cell|glmmadmb>|<cell|52255>|<cell|>|<cell|>|<cell|28356>|<cell|168>|<cell|0.6992>|<cell|0.83>|<cell|0.0122>|<cell|.110>>|<row|<cell|glmmLasso>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|523>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|lmm
  - REML>|<cell|19708>|<cell|>|<cell|>|<cell|42798>|<cell|>|<cell|1504>|<cell|>|<cell|-0.680>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|MCMCglmm>|<cell|20882>|<cell|>|<cell|>|<cell|409148>|<cell|>|<cell|109>|<cell|>|<cell|26>|<cell|>>|<row|<cell|brms>|<cell|19739>|<cell|>|<cell|140>|<cell|75806>|<cell|251>|<cell|2408>|<cell|41>|<cell|927.55>|<cell|22.79>>|<row|<cell|inla>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>|<row|<cell|lme
  -ML>|<cell|18122>|<cell|>|<cell|134>|<cell|28326>|<cell|168>|<cell|->|<cell|>|<cell|0.0001>|<cell|0.01>>|<row|<cell|lmm
  - ML>|<cell|19708>|<cell|>|<cell|>|<cell|42798>|<cell|>|<cell|1504>|<cell|>|<cell|-0.680>|<cell|>>|<row|<cell|lmer
  - ML>|<cell|>|<cell|>|<cell|134>|<cell|>|<cell|168>|<cell|>|<cell|0>|<cell|>|<cell|0>>|<row|<cell|asreml>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>|<cell|>>>>>>
    Variance components, Steel and Tori.

    1. lmm ml Even with the help example, there are negative variances and no
    difference between ML and REML.

    2. admb doesn't report a variance for residual, this is MS from anova
  </big-table>

  \;

  \;

  Repeated Measures

  <\big-table|<tabular|<tformat|<table|<row|<cell|>|<cell|<math|\<beta\><rsub|0>>>|<cell|<math|\<beta\><rsub|1>>>|<cell|intercept>|<cell|slope>|<cell|residual>|<cell|logLik>|<cell|AIC>|<cell|BIC>>|<row|<cell|SAS>|<cell|2.8345>|<cell|0.02849>|<cell|0.008547>|<cell|0.000056>|<cell|0.000257>|<cell|948.9>|<cell|-1891.7>|<cell|-1884.5>>|<row|<cell|lme>|<cell|2.8344>|<cell|0.02858>|<cell|0.007951>|<cell|0.000053>|<cell|0.000261>|<cell|956.6>|<cell|-1901.1>|<cell|-1876.5>>|<row|<cell|lmer>|<cell|2.8344>|<cell|0.02858>|<cell|0.007951>|<cell|0.000053>|<cell|0.000261>|<cell|956.6>|<cell|-1901.1>|<cell|-1876.5>>|<row|<cell|MCMCglmm>|<cell|2.8345>|<cell|0.02853>|<cell|0.008746>|<cell|0.000058>|<cell|0.000259>|<cell|>|<cell|>|<cell|>>>>>>
    \;
  </big-table>

  \;

  \;

  Using the standard fixed-effect linear model function <verbatim|lm>, m

  \;

  Further, the results of fitting mixed models are frequently not compatible
  with other functions that extend the analysis of mixed models, i.e.
  analysis of variance or multiple treatment comparisons. Several popular R
  libraries for mixed model analysis are compared, using data from
  agricultural trials that depart from the common assumptions for the
  analysis of variance. The packages are compared for ease of
  interoperability with other R libraries.

  \;

  MCMglmm confidence intervals are not always symmetric - compare to
  plot(MCMCglmm)

  \;

  Minque doesn't take

  tbl4.25.ml.minque \<less\>- lmm(obs ~ 0+trt \| rep, data=tbl4.25,
  method="minque")

  or update

  \;

  tbl4.25.admb \<less\>- glmmadmb(obs ~ 0+trt, random = ~ 1 \| rep, family =
  "gaussian", data = tbl4.25)

  Warning message:

  In eval(expr, envir, enclos) : sd.est not defined for this family

  ,so\ 

  tbl4.25.red.admb \<less\>- update(tbl4.25.admb, . ~ . -trt)

  fails

  \;

  \;
</body>

<\references>
  <\collection>
    <associate|auto-1|<tuple|1|?>>
    <associate|auto-10|<tuple|2.3|?>>
    <associate|auto-11|<tuple|3|?>>
    <associate|auto-12|<tuple|4|?>>
    <associate|auto-15|<tuple|4.0.0.3|?>>
    <associate|auto-16|<tuple|5|?>>
    <associate|auto-17|<tuple|6|?>>
    <associate|auto-18|<tuple|7|?>>
    <associate|auto-19|<tuple|8|?>>
    <associate|auto-2|<tuple|1.1|?>>
    <associate|auto-20|<tuple|9|?>>
    <associate|auto-21|<tuple|9.1|?>>
    <associate|auto-22|<tuple|9.2|?>>
    <associate|auto-23|<tuple|9.3|?>>
    <associate|auto-24|<tuple|10|?>>
    <associate|auto-25|<tuple|2|?>>
    <associate|auto-26|<tuple|10.1|?>>
    <associate|auto-27|<tuple|10.2|?>>
    <associate|auto-28|<tuple|10.3|?>>
    <associate|auto-29|<tuple|10.3.0.4|?>>
    <associate|auto-3|<tuple|1.2|?>>
    <associate|auto-30|<tuple|11|?>>
    <associate|auto-31|<tuple|11.1|?>>
    <associate|auto-32|<tuple|12|?>>
    <associate|auto-33|<tuple|13|?>>
    <associate|auto-34|<tuple|14|?>>
    <associate|auto-35|<tuple|15|?>>
    <associate|auto-36|<tuple|16|?>>
    <associate|auto-37|<tuple|17|?>>
    <associate|auto-38|<tuple|18|?>>
    <associate|auto-39|<tuple|19|?>>
    <associate|auto-4|<tuple|1.2.1|?>>
    <associate|auto-40|<tuple|20|?>>
    <associate|auto-41|<tuple|3|?>>
    <associate|auto-42|<tuple|4|?>>
    <associate|auto-43|<tuple|5|?>>
    <associate|auto-44|<tuple|6|?>>
    <associate|auto-45|<tuple|7|?>>
    <associate|auto-5|<tuple|1.3|?>>
    <associate|auto-6|<tuple|2|?>>
    <associate|auto-7|<tuple|1|?>>
    <associate|auto-8|<tuple|2.1|?>>
    <associate|auto-9|<tuple|2.2|?>>
  </collection>
</references>

<\auxiliary>
  <\collection>
    <\associate|table>
      <tuple|normal||<pageref|auto-7>>

      <tuple|normal||<pageref|auto-25>>

      <tuple|normal||<pageref|auto-41>>

      <tuple|normal||<pageref|auto-42>>

      <\tuple|normal>
        \;

        <\with|current-item|<quote|<macro|name|<aligned-item|<arg|name>.>>>|transform-item|<quote|<macro|x|<arg|x>>>|item-nr|<quote|0>>
          <\surround|<vspace*|0.5fn><no-indent>|<htab|0fn|first><vspace|0.5fn>>
            <\with|par-left|<quote|<tmlen|26912|53823.9|80736>>>
              <\surround|<no-page-break*>|<no-indent*>>
                <assign|item-nr|1><hidden|<tuple>><assign|last-item|1><vspace*|0.5fn><with|par-first|<quote|<tmlen|-26912|-53823.9|-80736>>|<yes-indent>><resize|1.|<tmlen|-22426.7|-44853.2|-67280>||<tmlen|4485.34|8970.65|13456>|>Warning
                if models differ in fixed effects

                <assign|item-nr|2><hidden|<tuple>><assign|last-item|2><vspace*|0.5fn><with|par-first|<quote|<tmlen|-26912|-53823.9|-80736>>|<yes-indent>><resize|2.|<tmlen|-22426.7|-44853.2|-67280>||<tmlen|4485.34|8970.65|13456>|>Recompute
              </surround>
            </with>
          </surround>
        </with>
      </tuple|<pageref|auto-43>>

      <\tuple|normal>
        Variance components, Steel and Tori.

        1. lmm ml Even with the help example, there are negative variances
        and no difference between ML and REML.

        2. admb doesn't report a variance for residual, this is MS from anova
      </tuple|<pageref|auto-44>>

      <\tuple|normal>
        \;
      </tuple|<pageref|auto-45>>
    </associate>
    <\associate|toc>
      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|1<space|2spc>Introduction>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-1><vspace|0.5fn>

      <with|par-left|<quote|1tab>|1.1<space|2spc>Theory
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-2>>

      <with|par-left|<quote|1tab>|1.2<space|2spc>Single Trial
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-3>>

      <with|par-left|<quote|2tab>|1.2.1<space|2spc>Combined Trials
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-4>>

      <with|par-left|<quote|1tab>|1.3<space|2spc>Workflow
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-5>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|2<space|2spc>Data
      Entry> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-6><vspace|0.5fn>

      <with|par-left|<quote|1tab>|2.1<space|2spc>Simulated Data for an RCBD
      with Two Missing Observations <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-8>>

      <with|par-left|<quote|1tab>|2.2<space|2spc>Series of Similar
      Experiments <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-9>>

      <with|par-left|<quote|1tab>|2.3<space|2spc>Sample RCBD Data
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-10>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|3<space|2spc>Model
      Fitting> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-11><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|4<space|2spc><assign|paragraph-numbered|false><assign|paragraph-prefix|<macro|<compound|the-paragraph>.>><assign|paragraph-nr|1><hidden|<tuple>><assign|subparagraph-nr|0><flag|table
      of contents|dark green|what><assign|auto-nr|13><write|toc|<with|par-left|<quote|4tab>|Diagnostics
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-13><vspace|0.15fn>>><toc-notify|toc-4|Diagnostics><no-indent><with|font-series|<quote|bold>|math-font-series|<quote|bold>|<vspace*|0.5fn>Diagnostics<space|2spc>>>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-13><vspace|0.5fn>

      <with|par-left|<quote|4tab>|Diagnostics
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-15><vspace|0.15fn>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|5<space|2spc>Model
      Building> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-16><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|6<space|2spc>Summary
      Statistics> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-17><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|7<space|2spc>Hypothesis
      Testing> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-18><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|8<space|2spc>Presentation>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-19><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|9<space|2spc>Architecture>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-20><vspace|0.5fn>

      <with|par-left|<quote|1tab>|9.1<space|2spc>Classes
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-21>>

      <with|par-left|<quote|1tab>|9.2<space|2spc>Generic Functions
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-22>>

      <with|par-left|<quote|1tab>|9.3<space|2spc>Automation
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-23>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|10<space|2spc>Advantages
      of Mixed Model Analysis.> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-24><vspace|0.5fn>

      <with|par-left|<quote|1tab>|10.1<space|2spc>Advantage of linear models
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-26>>

      <with|par-left|<quote|1tab>|10.2<space|2spc>Problems with the linear
      model <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-27>>

      <with|par-left|<quote|1tab>|10.3<space|2spc>Mixed Model Specific
      Generic Methods <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-28>>

      <with|par-left|<quote|4tab>|Variance Components
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-29><vspace|0.15fn>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|11<space|2spc>lme>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-30><vspace|0.5fn>

      <with|par-left|<quote|1tab>|11.1<space|2spc>Example 2
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-31>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|12<space|2spc>glmmPQL>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-32><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|13<space|2spc>lmer>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-33><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|14<space|2spc>blmer>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-34><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|15<space|2spc>glmmADMB>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-35><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|16<space|2spc>glmmLasso>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-36><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|17<space|2spc>minque>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-37><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|18<space|2spc>MCMCglmm>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-38><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|19<space|2spc>INLA>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-39><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|20<space|2spc>brms>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-40><vspace|0.5fn>
    </associate>
  </collection>
</auxiliary>