\documentclass{report}
\usepackage{amsmath}

\begin{document}
We start our analysis centered on the USDA NAS data set at \verb|http://quickstats.nass.usda.gov|. The parameters for this query is

   \begin{verbatim}
   Program : SURVEY
   Sector : CROPS
   Group : FIELD CROPS
   Commodity : WHEAT
   Category : YIELD
   Data Item : WHEAT, WINTER - YIELD, MEASURED in BU / ACRE
   Domain : TOTAL
   Location : COUNTY
   State : KANSAS, NEBRASKA, NORTH DAKOTA, OKLAHOMA, SOUTH DAKOTA, TEXAS
   Period Type: ANNUAL
   Period: YEAR
   \end{verbatim}

   Note that there are data for insect damage, etc.

   all available years
   36000+ records

<<echo=false>>=
source("../../../ASA_CSSA_SSSA/R/map_functions.R")
library(ggplot2)
library(gridExtra)
library(maps)
keepqr=TRUE
@

This document drives the final analysis, so we save a template for covariates

Trial maps use lower case state names, so we manipulate to create a single state-county index.

We note that there are a few counties in Texas that have yield values of O. I'm not sure crop failures are part of what we want to measure, so I'm excluding these.
<<>>=
yield.field <- "WHEAT, WINTER - YIELD, MEASURED IN BU / ACRE"
production.field <- "WHEAT, WINTER - PRODUCTION, MEASURED IN BU"

if(!file.exists("county.yield.dat.Rda")) {
   county.yield.dat <- read.csv("69C9E26C-F285-325A-9443-6668747878F8.csv", header = TRUE)
   
   county.yield.dat <- subset(county.yield.dat,county.yield.dat$Value>1)
   county.yield.dat <- subset(county.yield.dat, county.yield.dat$County != "OTHER (COMBINED) COUNTIES")
   county.yield.dat$statecounty <- create.index(county.yield.dat)
   county.yield.dat$County <- as.factor(county.yield.dat$County)
   county.yield.dat$State <- as.factor(county.yield.dat$State)

   county.early.dat <- subset(county.yield.dat,early.f(county.yield.dat$Year))
   county.mid.dat <- subset(county.yield.dat,mid.f(county.yield.dat$Year))
   county.late.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year))
   
   save(county.early.dat, file="county.early.dat.Rda")
   save(county.mid.dat, file="county.mid.dat.Rda")
   save(county.late.dat, file="county.late.dat.Rda")
   
   save(county.yield.dat, file="county.yield.dat.Rda")
}

if(!file.exists("full.yield.dat.Rda")) {
   
   county.yield1.dat <- read.csv("69C9E26C-F285-325A-9443-6668747878F8.csv", header = TRUE)
   county.yield2.dat <- read.csv("CC71A450-97E2-3D03-BB42-39ACFAFBE2E6.csv", header = TRUE)
   full.yield.dat <- rbind(county.yield1.dat,county.yield2.dat, model=FALSE, qr=keepqr)
   county.yield1.dat=NULL
   county.yield2.dat=NULL
   full.yield.dat <- subset(full.yield.dat,county.yield.dat$Value>1)
   full.yield.dat <- subset(full.yield.dat, full.yield.dat$County != "OTHER (COMBINED) COUNTIES")
   full.yield.dat$statecounty <- create.index(full.yield.dat)
   full.yield.dat$County <- as.factor(full.yield.dat$County)
   full.yield.dat$State <- as.factor(full.yield.dat$State)

   full.early.dat <- subset(full.yield.dat,early.f(full.yield.dat$Year))
   full.mid.dat <- subset(full.yield.dat,mid.f(full.yield.dat$Year))
   full.late.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year))
   
   save(full.early.dat, file="full.early.dat.Rda")
   save(full.mid.dat, file="full.mid.dat.Rda")
   save(full.late.dat, file="full.late.dat.Rda")
   
   save(full.yield.dat, file="full.yield.dat.Rda")
}
@


We do not have yield estimates for every county, for every year. We set a minimum number of yield values to be used 
to determine yield change.
<<>>=
#min.count <- 10
@

I've decided to compare early, mid and late century trends. I'll use functions to simplify this, so I might more easily shift ranges later. We'll use the most recent 30 years (2014-1984).
Base on inspection of the state level curves, the inflection point is about 1978 and the upswing starts in the early 40s.

<<>>=
if(!file.exists("late.county.lm.Rda")) {
   load.if.needed("county.late.dat")
   load.if.needed("county.mid.dat")
   load.if.needed("county.early.dat")
   late.counts <- tapply(county.late.dat$Value,list(county.late.dat$statecounty),length)
   county.late.dat$Count <- late.counts[county.late.dat$statecounty]
   county.late.dat <- subset(county.late.dat,county.late.dat$Count>(min.count-1))
   
   late.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=county.late.dat, model=FALSE, qr=keepqr)  
   
   mid.counts <- tapply(county.mid.dat$Value,list(county.mid.dat$statecounty),length)
   county.mid.dat$Count <- mid.counts[county.mid.dat$statecounty]
   county.mid.dat <- subset(county.mid.dat,county.mid.dat$Count>(min.count-1))
   mid.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=county.mid.dat, model=FALSE, qr=keepqr)
   #summary(mid.lm)

   early.counts <- tapply(county.early.dat$Value,list(county.early.dat$statecounty),length)
   county.early.dat$Count <- early.counts[county.early.dat$statecounty]
   county.early.dat <- subset(county.early.dat,county.early.dat$Count>(min.count-1))
   early.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=county.early.dat, model=FALSE, qr=keepqr)
   
   save(late.county.lm, file="late.county.lm.Rda")
   save(early.lm, file="early.lm.Rda")
   save(mid.lm, file="mid.lm.Rda")
   
   #summary(lm(Value ~ Year,data=subset(county.late.dat,county.late.dat$statecounty=="kansas,allen")))
   #summary(lm(Value ~ Year,data=subset(county.late.dat,county.late.dat$statecounty=="kansas,anderson")))
   #summary(lm(Value ~ Year,data=subset(county.late.dat,county.late.dat$statecounty=="kansas,atchison")))
}

if(!file.exists("full.county.lm.Rda")) {
   load.if.needed("full.late.dat")
   load.if.needed("full.mid.dat")
   load.if.needed("full.early.dat")
   late.counts <- tapply(full.late.dat$Value,list(full.late.dat$statecounty),length)
   full.late.dat$Count <- late.counts[full.late.dat$statecounty]
   full.late.dat <- subset(full.late.dat,full.late.dat$Count>(min.count-1))

   late.full.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.late.dat, model=FALSE, qr=keepqr)
   
   mid.counts <- tapply(full.mid.dat$Value,list(full.mid.dat$statecounty),length)
   full.mid.dat$Count <- mid.counts[full.mid.dat$statecounty]
   full.mid.dat <- subset(full.mid.dat,full.mid.dat$Count>(min.count-1))
   mid.full.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.mid.dat, model=FALSE, qr=keepqr)
   #summary(mid.lm)

   early.counts <- tapply(full.early.dat$Value,list(full.early.dat$statecounty),length)
   full.early.dat$Count <- early.counts[full.early.dat$statecounty]
   full.early.dat <- subset(full.early.dat,full.early.dat$Count>(min.count-1))
   early.full.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.early.dat, model=FALSE, qr=keepqr)
   
   save(late.full.lm, file="late.full.lm.Rda")
   save(early.full.lm, file="early.full.lm.Rda")
   save(mid.full.lm, file="mid.full.lm.Rda")
}
@

<<fig=TRUE>>=
load.if.needed("county.early.dat")
load.if.needed("county.mid.dat")
load.if.needed("county.late.dat")

grid.arrange(arrangeGrob(
  ggplot(county.early.dat, aes(Year,Value)) + geom_smooth(aes(group=State,color=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.mid.dat, aes(Year,Value)) + geom_smooth(aes(group=State,color=State),weight=10,se = FALSE,method="lm"),
  ggplot(county.late.dat, aes(Year,Value)) + geom_smooth(aes(group=State,color=State),weight=10,se = FALSE,method="lm"),
   as.table=TRUE,
   ncol=1))
@

<<fig=TRUE>>=
load.if.needed("county.yield.dat")
county.yield.plot <- ggplot(county.yield.dat, aes(Year,Value)) 
county.yield.plot <- county.yield.plot + scale_colour_brewer(palette="Set1") 
#county.yield.plot <- county.yield.plot + geom_point(aes(color=Ag.District),size=2,alpha = 0.3)
county.yield.plot <- county.yield.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield.plot <- county.yield.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="loess",span = 0.7)
county.yield.plot
@

\section{Create covariate base}
We generate a base file for later covariate analysis of county level wheat yields. We start with yield regression.
<<>>=
load.if.needed("late.county.lm")
load.if.needed("county.late.dat")
@

<<fig=TRUE,echo=false,results=hide,width=6,height=4>>=
gg.default.theme <- theme_bw()
gg.default.theme$legend.position = "none"
	
ggplot(county.late.dat, aes(Year,Value)) + 
   geom_point(aes(color=statecounty),size=2,alpha = 0.2) + gg.default.theme +
   geom_smooth(aes(group=statecounty,color=statecounty),weight=10,se = FALSE,method="lm")
@


<<>>=
yield.a.estimates <- extract.county.estimates(late.county.lm,term=1)
yield.b.estimates <- extract.county.estimates(late.county.lm,term=2)
if(!file.exists("covariates.dat.Rda")) {
   sum(names(yield.a.estimates)!=names(yield.b.estimates))
   statecounty=names(yield.a.estimates)
   state <- statecounty
   for(i in 1:length(state)) {
      current <- state[i]
      tmp <- strsplit(current,",")
      current <- tolower(tmp[[1]][1])
      state[i] <- current
   }
   covariates.dat <- data.frame(
      statecounty=statecounty,
      state=state,
      yield.a=yield.a.estimates,
      yield.b=yield.b.estimates
      )
   save(covariates.dat, file="covariates.dat.Rda")
}
@

<<fig=TRUE,echo=false>>=
ggmap.values(yield.b.estimates,names(yield.b.estimates))
@

<<>>=
yield.a.full.estimates <- extract.county.estimates(late.full.lm,term=1)
yield.b.full.estimates <- extract.county.estimates(late.full.lm,term=2)
if(!file.exists("covariates.full.dat.Rda")) {
   sum(names(yield.a.full.estimates)!=names(yield.b.full.estimates))
   statecounty=names(yield.a.full.estimates)
   state <- statecounty
   for(i in 1:length(state)) {
      current <- state[i]
      tmp <- strsplit(current,",")
      current <- tolower(tmp[[1]][1])
      state[i] <- current
   }
   full.covariates.dat <- data.frame(
      statecounty=statecounty,
      state=state,
      yield.a=yield.a.full.estimates,
      yield.b=yield.b.full.estimates
      )
   save(full.covariates.dat, file="full.covariates.dat.Rda")
}
@

<<fig=TRUE,echo=false>>=
ggmap.full.values(yield.b.full.estimates,names(yield.b.full.estimates))
@

<<fig=TRUE,echo=false>>=
minyear <- min(county.late.dat$Year)
maxyear <- max(county.late.dat$Year)
midpoint <- minyear + (maxyear-minyear)/2
estimate.mean <- yield.a.estimates + midpoint*yield.b.estimates
ggmap.values(estimate.mean,names(yield.a.estimates))
@

<<fig=TRUE,echo=false>>=
values <- tapply(county.late.dat$Value,list(county.late.dat$statecounty),mean, na.rm=TRUE)
common.names <- names(estimate.mean)[names(estimate.mean)%in%names(values)]
plot(values[common.names],estimate.mean[common.names])
@

<<>>=
names(values)[!names(values)%in%names(estimate.mean)]
names(estimate.mean)[!names(estimate.mean)%in%names(values)]
@

<<fig=TRUE,echo=false>>=
par(mfrow = c(2, 2)) 
plot(late.county.lm)
par(mfrow = c(1,1)) 
@

<<>>=
summary(aov(late.county.lm))
@

<<>>=
if(!file.exists("county.harvested.dat.Rda")) {
   county.harvested.dat <- read.csv("F9E14802-255A-3F02-B398-A6AA997592E2.csv", header = TRUE)
   county.harvested.dat <- subset(county.harvested.dat, county.harvested.dat$County != "OTHER (COMBINED) COUNTIES")
   county.harvested.dat$Value <- as.character(county.harvested.dat$Value)
   for(idx in 1:length(county.harvested.dat$Value)) {
      tmp <- county.harvested.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      county.harvested.dat$Value[idx] <- tmp
   }
   county.harvested.dat$Value <- as.numeric(county.harvested.dat$Value)
   county.harvested.dat$statecounty <- create.index(county.harvested.dat)
   save(county.harvested.dat, file="county.harvested.dat.Rda")
}

if(!file.exists("harvested.late.county.lm.Rda")) {
   load.if.needed("county.harvested.dat")
   harvested.late.dat <- subset(county.harvested.dat,late.f(county.harvested.dat$Year))
   harvested.late.counts <- tapply(harvested.late.dat$Value,list(harvested.late.dat$statecounty),length)
   harvested.late.dat$Count <- harvested.late.counts[harvested.late.dat$statecounty]
   harvested.late.dat <- subset(harvested.late.dat,harvested.late.dat$Count>(min.count-1))

   harvested.late.lm <- lm(Value ~ Year,data=harvested.late.dat, model=FALSE, qr=keepqr)
   harvested.late.state.lm <- lm(Value ~ 0 + State + State:Year,data=harvested.late.dat, model=FALSE, qr=keepqr)
   harvested.late.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=harvested.late.dat, model=FALSE, qr=keepqr)
   save(harvested.late.county.lm, file="harvested.late.county.lm.Rda")
}

if(!file.exists("full.harvested.dat.Rda")) {
   full.harvested.dat <- read.csv("35977543-C205-330D-A1FD-D7B49C8A193B.csv", header = TRUE)
   full.harvested.dat <- subset(full.harvested.dat, full.harvested.dat$County != "OTHER (COMBINED) COUNTIES")
   full.harvested.dat$Value <- as.character(full.harvested.dat$Value)
   for(idx in 1:length(full.harvested.dat$Value)) {
      tmp <- full.harvested.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      full.harvested.dat$Value[idx] <- tmp
   }
   full.harvested.dat$Value <- as.numeric(full.harvested.dat$Value)
   full.harvested.dat$statecounty <- create.index(full.harvested.dat)
   save(full.harvested.dat, file="full.harvested.dat.Rda")
}

if(!file.exists("harvested.late.full.lm.Rda")) {
   load.if.needed("full.harvested.dat")
   harvested.late.dat <- subset(full.harvested.dat,late.f(full.harvested.dat$Year))
   harvested.late.counts <- tapply(harvested.late.dat$Value,list(harvested.late.dat$statecounty),length)
   harvested.late.dat$Count <- harvested.late.counts[harvested.late.dat$statecounty]
   harvested.late.dat <- subset(harvested.late.dat,harvested.late.dat$Count>(min.count-1))

   harvested.late.full.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=harvested.late.dat, model=FALSE, qr=keepqr)
   save(harvested.late.full.lm, file="harvested.late.full.lm.Rda")
}

@

<<fig=TRUE>>=
load.if.needed("county.harvested.dat")
standard.regression.plot(county.harvested.dat,method="loess")
county.harvested.dat=NULL
@

<<>>=
if(!file.exists("county.acres.dat.Rda")) {
   county.acres.dat <- read.csv("6C846F60-83DB-3172-B899-A3AD38C8258D.csv", header = TRUE)
   county.acres.dat <- subset(county.acres.dat, county.acres.dat$County != "OTHER (COMBINED) COUNTIES")
   county.acres.dat$Value <- as.character(county.acres.dat$Value)
   for(idx in 1:length(county.acres.dat$Value)) {
      tmp <- county.acres.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      county.acres.dat$Value[idx] <- tmp
   }
   county.acres.dat$Value <- as.numeric(county.acres.dat$Value)
   county.acres.dat$statecounty <- create.index(county.acres.dat)
   save(county.acres.dat, file="county.acres.dat.Rda")
}
@

<<>>=
if(!file.exists("acres.late.county.lm.Rda")) {
   load.if.needed("county.acres.dat")
   acres.late.dat <- subset(county.acres.dat,late.f(county.acres.dat$Year))
   acres.late.counts <- tapply(acres.late.dat$Value,list(acres.late.dat$statecounty),length)
   acres.late.dat$Count <- acres.late.counts[acres.late.dat$statecounty]
   acres.late.dat <- subset(acres.late.dat,acres.late.dat$Count>(min.count-1))

   acres.late.lm <- lm(Value ~ Year,data=acres.late.dat, model=FALSE, qr=keepqr)
   acres.late.state.lm <- lm(Value ~ 0 + State + State:Year,data=acres.late.dat, model=FALSE, qr=keepqr)
   acres.late.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=acres.late.dat, model=FALSE, qr=keepqr)

   save(acres.late.county.lm, file="acres.late.county.lm.Rda")
}
@

<<>>=
if(!file.exists("full.acres.dat.Rda")) {
   #recent download 
    full.acres.dat <- read.csv("2734CE58-CF73-3FB4-90FF-106765DA5299.csv", header = TRUE)
   #full.acres.dat <- read.csv("8589B311-1D5C-3D84-8062-7579374ED1EB.csv", header = TRUE)
   full.acres.dat <- subset(full.acres.dat, full.acres.dat$County != "OTHER (COMBINED) COUNTIES")
   full.acres.dat$Value <- as.character(full.acres.dat$Value)
   for(idx in 1:length(full.acres.dat$Value)) {
      tmp <- full.acres.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      full.acres.dat$Value[idx] <- tmp
   }
   full.acres.dat$Value <- as.numeric(full.acres.dat$Value)
   full.acres.dat$statecounty <- create.index(full.acres.dat)
   save(full.acres.dat, file="full.acres.dat.Rda")
}
@
<<>>=
if(!file.exists("acres.late.full.lm.Rda")) {
   load.if.needed("full.acres.dat")
   full.acres.late.dat <- subset(full.acres.dat,late.f(full.acres.dat$Year))
   full.acres.late.counts <- tapply(full.acres.late.dat$Value,list(full.acres.late.dat$statecounty),length)
   full.acres.late.dat$Count <- full.acres.late.counts[full.acres.late.dat$statecounty]
   full.acres.late.dat <- subset(full.acres.late.dat,full.acres.late.dat$Count>(min.count-1))

   acres.late.full.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.acres.late.dat, model=FALSE, qr=keepqr)

   save(acres.late.full.lm, file="acres.late.full.lm.Rda")
}
@

<<fig=TRUE>>=
load.if.needed("county.acres.dat")

county.acres.plot <- ggplot(county.acres.dat, aes(Year,Value)) 
county.acres.plot <- county.acres.plot + scale_colour_brewer(palette="Set1") 
#county.acres.plot <- county.acres.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.acres.plot <- county.acres.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="loess",span = 0.7)
county.acres.plot
county.acres.dat=NULL
@


<<fig=TRUE>>=
load.if.needed("full.acres.dat")

full.acres.plot <- ggplot(full.acres.dat, aes(Year,Value)) 
full.acres.plot <- full.acres.plot + scale_colour_brewer(palette="Set1") 
#full.acres.plot <- full.acres.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
full.acres.plot <- full.acres.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="loess",span = 0.7)
full.acres.plot
full.acres.dat=NULL
@

<<>>=

if(!file.exists("county.production.dat.Rda")) {
   county.production.dat <- read.csv("C7366A74-7233-3E12-ADBD-22B83C7316DE.csv", header = TRUE)
   county.production.dat <- subset(county.production.dat, county.production.dat$County != "OTHER (COMBINED) COUNTIES")
   county.production.dat$Value <- as.character(county.production.dat$Value)
   for(idx in 1:length(county.production.dat$Value)) {
      tmp <- county.production.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      county.production.dat$Value[idx] <- tmp
   }
   county.production.dat$Value <- as.numeric(county.production.dat$Value)
      county.production.dat$statecounty <- create.index(county.production.dat)
   save(county.production.dat, file="county.production.dat.Rda")
}
if(!file.exists("production.late.county.lm.Rda")) {
   load.if.needed("county.production.dat")
   production.late.dat <- subset(county.production.dat,late.f(county.production.dat$Year))
   production.late.counts <- tapply(production.late.dat$Value,list(production.late.dat$statecounty),length)
   production.late.dat$Count <- production.late.counts[production.late.dat$statecounty]
   production.late.dat <- subset(production.late.dat,production.late.dat$Count>(min.count-1))

   production.late.lm <- lm(Value ~ Year,data=production.late.dat, model=FALSE, qr=keepqr)
   production.late.state.lm <- lm(Value ~ 0 + State + State:Year,data=production.late.dat, model=FALSE, qr=keepqr)
   production.late.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=production.late.dat, model=FALSE, qr=keepqr)
   
    save(production.late.county.lm, file="production.late.county.lm.Rda")
    
   county.production.dat=NULL
}
@

<<fig=TRUE>>=
load.if.needed("county.production.dat")

county.production.plot <- ggplot(county.production.dat, aes(Year,Value)) 
county.production.plot <- county.production.plot + scale_colour_brewer(palette="Set1") 
#county.yield.plot <- county.yield.plot + geom_point(aes(color=Ag.District),size=2,alpha = 0.3)
#county.production.plot <- county.production.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.production.plot <- county.production.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="loess",span = 0.7)
county.production.plot
county.production.dat=NULL
@

<<>>=
if(!file.exists("income.total.dat.Rda")) {
   income.dat <- read.csv("3F1461DC-1B65-3644-92E4-B4A7876551B5.csv", header = TRUE)
   income.dat <- subset(income.dat, income.dat$County != "OTHER (COMBINED) COUNTIES")
   income.dat$Value <- as.character(income.dat$Value)
   income.dat$statecounty <- create.index(income.dat)
   for(idx in 1:length(income.dat$Value)) {
      tmp <- income.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      income.dat$Value[idx] <- tmp
   }
   income.dat$Value <- as.numeric(income.dat$Value)
   income.total.dat <- subset(income.dat,income.dat$Data.Item=="INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $")
   income.relative.dat <- subset(income.dat,income.dat$Data.Item=="INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $ / OPERATION")
   income.total.dat$statecounty <- create.index(income.total.dat)
   income.relative.dat$statecounty <- create.index(income.relative.dat)
   save(income.total.dat, file="income.total.dat.Rda")
   save(income.relative.dat, file="income.relative.dat.Rda")
} 
@

<<>>=
if(!file.exists("income.relative.county.lm.Rda")) {
   load.if.needed("income.relative.dat")
   load.if.needed("income.total.dat")
income.relative.dat <- subset(income.relative.dat,late.f(income.relative.dat$Year))
#income.relative.counts <- tapply(income.relative.dat$Value,list(income.relative.dat$statecounty),length)
#income.relative.dat$Count <- income.relative.counts[income.relative.dat$statecounty]
#income.relative.dat <- subset(income.relative.dat,income.relative.dat$Count>(min.count-1))

income.relative.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=income.relative.dat, model=FALSE, qr=keepqr)
   
   income.total.dat <- subset(income.total.dat,late.f(income.total.dat$Year))
   #income.total.counts <- tapply(income.total.dat$Value,list(income.total.dat$statecounty),length)
   #income.total.dat$Count <- income.total.counts[income.total.dat$statecounty]
   #income.total.dat <- subset(income.total.dat,income.total.dat$Count>(min.count-1))

   income.total.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=income.total.dat, model=FALSE, qr=keepqr)
   
   save(income.total.county.lm, file="income.total.county.lm.Rda")
   save(income.relative.county.lm, file="income.relative.county.lm.Rda")
} 
@

<<>>=
if(!file.exists("full.income.total.dat.Rda")) {
   full.income.dat <- read.csv("E1CE5AC8-F7C8-30E1-B0E4-9A903E9C5319.csv", header = TRUE)
  # full.income.dat <- read.csv("FE6E82C0-910A-30F4-BC37-3E4347BA3F16.csv", header = TRUE)
   full.income.dat <- subset(full.income.dat, full.income.dat$County != "OTHER (COMBINED) COUNTIES")
   full.income.dat$Value <- as.character(full.income.dat$Value)
   full.income.dat$statecounty <- create.index(full.income.dat)
   for(idx in 1:length(full.income.dat$Value)) {
      tmp <- full.income.dat$Value[idx]
      tmp <- paste(strsplit(tmp,",")[[1]],collapse="")
      full.income.dat$Value[idx] <- tmp
   }
   full.income.dat$Value <- as.numeric(full.income.dat$Value)
   full.income.total.dat <- subset(full.income.dat,full.income.dat$Data.Item=="INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $")

   full.income.relative.dat <- subset(full.income.dat,full.income.dat$Data.Item=="INCOME, NET CASH FARM, OF OPERATIONS - NET INCOME, MEASURED IN $ / OPERATION")
   full.income.total.dat$statecounty <- create.index(full.income.total.dat)
   full.income.relative.dat$statecounty <- create.index(full.income.relative.dat)
   save(full.income.total.dat, file="full.income.total.dat.Rda")
   save(full.income.relative.dat, file="full.income.relative.dat.Rda")
} 
@

<<>>=
if(!file.exists("full.income.relative.county.lm.Rda")) {
   load.if.needed("full.income.relative.dat")
   load.if.needed("full.income.total.dat")
full.income.relative.dat <- subset(full.income.relative.dat,late.f(full.income.relative.dat$Year))
#full.income.relative.counts <- tapply(full.income.relative.dat$Value,list(full.income.relative.dat$statecounty),length)
#full.income.relative.dat$Count <- full.income.relative.counts[full.income.relative.dat$statecounty]
#full.income.relative.dat <- subset(full.income.relative.dat,full.income.relative.dat$Count>(min.count-1))

full.income.relative.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.income.relative.dat, model=FALSE, qr=keepqr)
   
   full.income.total.dat <- subset(full.income.total.dat,late.f(full.income.total.dat$Year))
   #full.income.total.counts <- tapply(full.income.total.dat$Value,list(full.income.total.dat$statecounty),length)
   #full.income.total.dat$Count <- full.income.total.counts[full.income.total.dat$statecounty]
   #full.income.total.dat <- subset(full.income.total.dat,full.income.total.dat$Count>(min.count-1))

   full.income.total.county.lm <- lm(Value ~ 0 + statecounty + statecounty:Year,data=full.income.total.dat, model=FALSE, qr=keepqr)
   
   save(full.income.total.county.lm, file="full.income.total.county.lm.Rda")
   save(full.income.relative.county.lm, file="full.income.relative.county.lm.Rda")
} 
@

<<fig=TRUE>>=
load.if.needed("income.relative.dat")

county.income.plot <- ggplot(income.relative.dat, aes(Year,Value)) 
county.income.plot <- county.income.plot + scale_colour_brewer(palette="Set1") 
#county.yield.plot <- county.yield.plot + geom_point(aes(color=Ag.District),size=2,alpha = 0.3)
county.income.plot <- county.income.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.income.plot <- county.income.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="loess",span = 0.7)
county.income.plot
@






For completeness, examine each data column.

We have a county labelled OTHER (COMBINED) COUNTIES. Take this out.



Note the number of missing years. If we use locations other than county, we may have larger data set. This is documented in supplementary literate code.


<<>>=
if(!file.exists("county.late2.dat.Rda")) {
county.late2.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+2))
county.late4.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+4))
county.late6.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+6))
save(county.late2.dat, file="county.late2.dat.Rda")
save(county.late4.dat, file="county.late4.dat.Rda")
save(county.late6.dat, file="county.late6.dat.Rda")
county.late5.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+5))
county.late10.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+10))
county.late15.dat <- subset(county.yield.dat,late.f(county.yield.dat$Year+15))
save(county.late5.dat, file="county.late5.dat.Rda")
save(county.late10.dat, file="county.late10.dat.Rda")
save(county.late15.dat, file="county.late15.dat.Rda")
}
if(!file.exists("full.late2.dat.Rda")) {
   load.if.needed("full.yield.dat")
full.late2.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+2))
full.late4.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+4))
full.late6.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+6))
save(full.late2.dat, file="full.late2.dat.Rda")
save(full.late4.dat, file="full.late4.dat.Rda")
save(full.late6.dat, file="full.late6.dat.Rda")
full.late5.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+5))
full.late10.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+10))
full.late15.dat <- subset(full.yield.dat,late.f(full.yield.dat$Year+15))
save(full.late5.dat, file="full.late5.dat.Rda")
save(full.late10.dat, file="full.late10.dat.Rda")
save(full.late15.dat, file="full.late15.dat.Rda")
}
@


<<fig=TRUE>>=
load.if.needed("county.late2.dat")
county.yield2.plot <- ggplot(county.late2.dat, aes(Year,Value)) 
county.yield2.plot <- county.yield2.plot + scale_colour_brewer(palette="Set1") 
county.yield2.plot <- county.yield2.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield2.plot <- county.yield2.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield2.plot
@

<<fig=TRUE>>=
load.if.needed("county.late4.dat")
county.yield4.plot <- ggplot(county.late4.dat, aes(Year,Value)) 
county.yield4.plot <- county.yield4.plot + scale_colour_brewer(palette="Set1") 
county.yield4.plot <- county.yield4.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield4.plot <- county.yield4.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield4.plot
@

<<fig=TRUE>>=
load.if.needed("county.late6.dat")
county.yield6.plot <- ggplot(county.late6.dat, aes(Year,Value)) 
county.yield6.plot <- county.yield6.plot + scale_colour_brewer(palette="Set1") 
county.yield6.plot <- county.yield6.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield6.plot <- county.yield6.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield6.plot
@


<<fig=TRUE>>=
load.if.needed("county.late5.dat")
county.yield5.plot <- ggplot(county.late5.dat, aes(Year,Value)) 
county.yield5.plot <- county.yield5.plot + scale_colour_brewer(palette="Set1") 
county.yield5.plot <- county.yield5.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield5.plot <- county.yield5.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield5.plot
@

<<fig=TRUE>>=
load.if.needed("county.late10.dat")
county.late10.plot <- ggplot(county.late10.dat, aes(Year,Value)) 
county.late10.plot <- county.late10.plot + scale_colour_brewer(palette="Set1") 
county.late10.plot <- county.late10.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.late10.plot <- county.late10.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.late10.plot
@

<<fig=TRUE>>=
load.if.needed("county.late15.dat")
county.yield15.plot <- ggplot(county.late15.dat, aes(Year,Value)) 
county.yield15.plot <- county.yield15.plot + scale_colour_brewer(palette="Set1") 
county.yield15.plot <- county.yield15.plot + geom_point(aes(color=State),size=1,alpha = 0.3)
county.yield15.plot <- county.yield15.plot  + geom_smooth(aes(group= State,color=State),weight=10,se = FALSE,method="lm",span = 0.7)
county.yield15.plot
@

<<>>=
if(!file.exists("late2.county.lm.Rda")) {
   load.if.needed("county.late2.dat")
   load.if.needed("county.late4.dat")
   load.if.needed("county.late6.dat")
   
   load.if.needed("county.late5.dat")
   load.if.needed("county.late10.dat")
   load.if.needed("county.late15.dat")
   
   
   late2.counts <- tapply(county.late2.dat$Value,list(county.late2.dat$statecounty),length)
   county.late2.dat$Count <- late2.counts[county.late2.dat$statecounty]
   county.late2.dat <- subset(county.late2.dat,county.late2.dat$Count>(min.count-1))
   
   late4.counts <- tapply(county.late4.dat$Value,list(county.late4.dat$statecounty),length)
   county.late4.dat$Count <- late4.counts[county.late4.dat$statecounty]
   county.late4.dat <- subset(county.late4.dat,county.late4.dat$Count>(min.count-1))
   
   late6.counts <- tapply(county.late6.dat$Value,list(county.late6.dat$statecounty),length)
   county.late6.dat$Count <- late6.counts[county.late6.dat$statecounty]
   county.late6.dat <- subset(county.late6.dat,county.late6.dat$Count>(min.count-1))
   
   late2.county.lm <-update(late.county.lm,data=county.late2.dat, model=FALSE, qr=keepqr)
   late4.county.lm <-update(late.county.lm,data=county.late4.dat, model=FALSE, qr=keepqr)
   late6.county.lm <-update(late.county.lm,data=county.late6.dat, model=FALSE, qr=keepqr)
   
   save(late2.county.lm, file="late2.county.lm.Rda")
   save(late4.county.lm, file="late4.county.lm.Rda")
   save(late6.county.lm, file="late6.county.lm.Rda")
   
   
   late5.counts <- tapply(county.late5.dat$Value,list(county.late5.dat$statecounty),length)
   county.late5.dat$Count <- late5.counts[county.late5.dat$statecounty]
   county.late5.dat <- subset(county.late5.dat,county.late5.dat$Count>(min.count-1))
   
   late10.counts <- tapply(county.late10.dat$Value,list(county.late10.dat$statecounty),length)
   county.late10.dat$Count <- late10.counts[county.late10.dat$statecounty]
   county.late10.dat <- subset(county.late10.dat,county.late10.dat$Count>(min.count-1))
   
   late15.counts <- tapply(county.late15.dat$Value,list(county.late15.dat$statecounty),length)
   county.late15.dat$Count <- late15.counts[county.late15.dat$statecounty]
   county.late15.dat <- subset(county.late15.dat,county.late15.dat$Count>(min.count-1))
   
   late5.county.lm <-update(late.county.lm,data=county.late5.dat, model=FALSE, qr=keepqr)
   late10.county.lm <-update(late.county.lm,data=county.late10.dat, model=FALSE, qr=keepqr)
   late15.county.lm <-update(late.county.lm,data=county.late15.dat, model=FALSE, qr=keepqr)
   
   save(late5.county.lm, file="late5.county.lm.Rda")
   save(late10.county.lm, file="late10.county.lm.Rda")
   save(late15.county.lm, file="late15.county.lm.Rda")
}
@


<<>>=
if(!file.exists("late2.full.lm.Rda")) {
   load.if.needed("full.late2.dat")
   load.if.needed("full.late4.dat")
   load.if.needed("full.late6.dat")
   
   load.if.needed("full.late5.dat")
   load.if.needed("full.late10.dat")
   load.if.needed("full.late15.dat")
   
   
   late2.counts <- tapply(full.late2.dat$Value,list(full.late2.dat$statecounty),length)
   full.late2.dat$Count <- late2.counts[full.late2.dat$statecounty]
   full.late2.dat <- subset(full.late2.dat,full.late2.dat$Count>(min.count-1))
   
   late4.counts <- tapply(full.late4.dat$Value,list(full.late4.dat$statecounty),length)
   full.late4.dat$Count <- late4.counts[full.late4.dat$statecounty]
   full.late4.dat <- subset(full.late4.dat,full.late4.dat$Count>(min.count-1))
   
   late6.counts <- tapply(full.late6.dat$Value,list(full.late6.dat$statecounty),length)
   full.late6.dat$Count <- late6.counts[full.late6.dat$statecounty]
   full.late6.dat <- subset(full.late6.dat,full.late6.dat$Count>(min.count-1))
   
   late2.full.lm <-update(late.full.lm,data=full.late2.dat, model=FALSE, qr=keepqr)
   late4.full.lm <-update(late.full.lm,data=full.late4.dat, model=FALSE, qr=keepqr)
   late6.full.lm <-update(late.full.lm,data=full.late6.dat, model=FALSE, qr=keepqr)
   
   save(late2.full.lm, file="late2.full.lm.Rda")
   save(late4.full.lm, file="late4.full.lm.Rda")
   save(late6.full.lm, file="late6.full.lm.Rda")
   
   
   late5.counts <- tapply(full.late5.dat$Value,list(full.late5.dat$statecounty),length)
   full.late5.dat$Count <- late5.counts[full.late5.dat$statecounty]
   full.late5.dat <- subset(full.late5.dat,full.late5.dat$Count>(min.count-1))
   
   late10.counts <- tapply(full.late10.dat$Value,list(full.late10.dat$statecounty),length)
   full.late10.dat$Count <- late10.counts[full.late10.dat$statecounty]
   full.late10.dat <- subset(full.late10.dat,full.late10.dat$Count>(min.count-1))
   
   late15.counts <- tapply(full.late15.dat$Value,list(full.late15.dat$statecounty),length)
   full.late15.dat$Count <- late15.counts[full.late15.dat$statecounty]
   full.late15.dat <- subset(full.late15.dat,full.late15.dat$Count>(min.count-1))
   
   late5.full.lm <-update(late.full.lm,data=full.late5.dat, model=FALSE, qr=keepqr)
   late10.full.lm <-update(late.full.lm,data=full.late10.dat, model=FALSE, qr=keepqr)
   late15.full.lm <-update(late.full.lm,data=full.late15.dat, model=FALSE, qr=keepqr)
   
   save(late5.full.lm, file="late5.full.lm.Rda")
   save(late10.full.lm, file="late10.full.lm.Rda")
   save(late15.full.lm, file="late15.full.lm.Rda")
}
@

load(file="early.lm.Rda")
load(file="mid.lm.Rda")


load(file="late2.county.lm.Rda")
load(file="late4.county.lm.Rda")
load(file="late6.county.lm.Rda")

load(file="production.late.county.lm.Rda")
load(file="harvested.late.county.lm.Rda")
load(file="acres.late.county.lm.Rda")
load(file="income.late.county.lm.Rda")

<<>>=

@

\end{document}