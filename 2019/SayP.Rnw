\documentclass{article}
\usepackage{amsmath}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{What Do We Mean When We Say 'p-value'}
\maketitle{}

\section*{Abstract}



<<LoadGraphics,echo=FALSE>>=
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#F0E442","#CC79A7","#000000","#734f80", "#2b5a74", "#004f39", "#787221", "#003959", "#6aaf00", "#663cd3")
@

\section{Introduction}

<<>>=
Andersons.dat <- read.csv("./AndersonsStevens-Soybeans.csv",header=TRUE,comment.char = "#")
Andersons.dat$Pass <- Andersons.dat$Block
Andersons.dat$Block <- as.factor(ceiling(Andersons.dat$Pass/2))

Andersons.dat$Sprayed <- Andersons.dat$Pass %in% c(2,4,6,8)

names(Andersons.dat)[7] <- 'Yield'
Andersons.dat <- Andersons.dat[Andersons.dat$Yield < 100,]
head(Andersons.dat)

Andersons.dat$Easting <- Andersons.dat$X - min(Andersons.dat$X)
Andersons.dat$Northing <- Andersons.dat$Y - min(Andersons.dat$Y)
latMid <- (min(Andersons.dat$Y) + max(Andersons.dat$Y))/2
m_per_deg_lat = 111132.954 - 559.822 * cos( 2.0 * latMid ) + 1.175 * cos( 4.0 * latMid)
m_per_deg_lon = (3.14159265359/180 ) * 6367449 * cos ( latMid )
Andersons.dat$Easting <- Andersons.dat$Easting*m_per_deg_lon
Andersons.dat$Northing <- Andersons.dat$Northing*m_per_deg_lat


Andersons.dat$PassF <- as.factor(Andersons.dat$Pass)
map.point <- 0.5
@

<<AndersonsSpray,fig=TRUE,echo=false,width=8,height=5>>=
pair.colors <- c(2,5)
ggplot(Andersons.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Sprayed),size=map.point) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
labs(colour = "Sprayed", x="Easting", y="Northing", title = "Spray Map")
@

<<2AndersonsYield,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(Andersons.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=map.point) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Yield Map")
@

<<1AndersonsStrips,fig=TRUE,echo=false,width=8,height=5>>=
AndersonsTemp.dat <- Andersons.dat
AndersonsTemp.dat$Pass[Andersons.dat$Pass==9] <- 0
AndersonsTemp.dat$Pass <- as.factor(AndersonsTemp.dat$Pass)
ggplot(AndersonsTemp.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Pass),size=map.point) + 
scale_colour_manual(values=cbPalette) +
labs(colour = "Strips", x="Easting", y="Northing", title = "Strips")
@

<<Strips,fig=TRUE,echo=false,width=8,height=5>>=
Strips.dat <- Andersons.dat[Andersons.dat$Pass>0,]
Strips.dat <- Strips.dat[Strips.dat$Pass<9,]

ggplot(Strips.dat, aes(X,Y)) + 
geom_point(aes(colour = PassF),size=map.point) + 
scale_colour_manual(values=cbPalette) +
labs(colour = "Pass", x="Easting", y="Northing", title = "East Quarter")
@

\section{Naive analysis}

\section{Simple Univariate Analysis}

As a starting point, first we consider each strip as a single experimental unit. We use the model

\begin{equation}
	y_{ij} = \mu_i + e_{ij}
\end{equation}
for a number of treatments $i = 1, \dots, I$ and number of strips $j = 1, \dots, N_j$.
We calculate mean and standard deviation

\begin{align}
	\widehat{\mu}_{i} &= \frac{\sum_{j=1}^{N_i} y_{ij}}{N_i} \\
	\widehat{\sigma}_{i}^2 &= \frac{\sum_{j=1}^{N_i} (y_{ij} - \widehat{\mu}_{i} )^2}{N_i}
\end{align}


It suffices at this stage to calculate an average yield for each strip as a measure of $y_{ij}$ - that is, we consider each individual yield estimate $y_{i j k}$ from the yield map as a sample from $y_{ij}$ and let

\begin{equation}
	y_{ij} = \bar{y}_{ij . } = \frac{\sum_{k=1}^{K} y_{ijk}}{K}
\end{equation}


<<>>=
meansNaive.dat <- data.frame(
  Pass = aggregate(Yield ~ Pass,Strips.dat,mean,na.rm=TRUE)[,1],
  Yield = aggregate(Yield ~ Pass,Strips.dat,mean,na.rm=TRUE)[,2]
)
meansNaive.dat$Product <- ifelse(meansNaive.dat$Pass %in% c(2,4,6,8),'Sprayed','Control')
meansNaive.dat$Product <- as.factor(meansNaive.dat$Product)
meansNaive.dat$Block <- as.factor(ceiling(meansNaive.dat$Pass/2))
meansNaive.dat
aggregate(Yield ~ Pass,meansNaive.dat,mean)

t.test(Yield ~ Product, data = meansNaive.dat)
t.test(Yield ~ Product, data = meansNaive.dat,paired=TRUE)
t.test(Yield ~ Product, data = meansNaive.dat,paired=TRUE,alternative = "less")
@


<<>>=
wilcox.test(Yield ~ Product, paired=TRUE,meansNaive.dat)
kruskal.test(Yield ~  Product, meansNaive.dat)
friedman.test(Yield ~  Block | Product,meansNaive.dat)
quade.test(Yield ~  Block | Product,meansNaive.dat)
@

<<3NaiveMeans,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(meansNaive.dat, aes(x=Pass, y=Yield, color=Product,fill=Product)) +
  geom_bar(stat="identity") + scale_colour_manual(values=cbPalette[pair.colors]) + scale_fill_manual(values=cbPalette[pair.colors]) +
labs(x="Strip", y="Yield", title = "Strip Mean Yield")
@


<<>>=
meansNaive.lm <- lm(Yield ~ Block + Product,data=meansNaive.dat)
anova(meansNaive.lm)
redNaive.lm <- lm(Yield ~ Block,data=meansNaive.dat)
anova(redNaive.lm)

logLik(meansNaive.lm)
logLik(redNaive.lm)
logLik(redNaive.lm)-logLik(meansNaive.lm)
library(lmtest)
lrtest(redNaive.lm,meansNaive.lm)
@

<<NaiveMeansDiagnostics,fig=TRUE,echo=false,width=8,height=8>>=
par(mfrow=c(2,2))
plot(meansNaive.lm)
@

<<>>=
TeaTasting <-
matrix(c(4, 0, 0, 4),
       nrow = 2,
       dimnames = list(Guess = c("Greater", "Lesser"),
                       Truth = c("Sprayed", "Unsprayed")))
TeaTasting
fisher.test(TeaTasting)
@


<<>>=
library(nlme)
Strips.lme <- lme(Yield ~ Sprayed,random= ~ 1 | Block, data=Strips.dat)
summary(Strips.lme)
anova(Strips.lme)
Strips.lme <- lme(Yield ~ Sprayed,random= ~ 1 | Block/Sample, data=Strips.dat)
summary(Strips.lme)
anova(Strips.lme)
@


<<>>=

arm.trt <- c(33.834, 25.741, 37.814, 29.72, 33.357, 25.263, 37.336, 29.243, 31.65, 23.556, 35.629, 27.536, 31.172, 23.079, 35.152, 27.059)
arm.unt <- c(27.059, 35.152, 23.079, 31.172, 27.536, 35.629, 23.556, 31.65, 29.243, 37.336, 25.263, 33.357, 29.72, 37.814, 25.741, 33.834)
arm.mean <- c(30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464, 30.4464)
arm.sd <- c(14.1292, 13.0837, 9.2464, 15.1271, 14.41, 12.5934, 10.1806, 15.0457, 15.0457, 10.1806, 12.5934, 14.41, 15.1271, 9.2464, 13.0837, 14.1292)
arm.diff <- c(6.7750, 9.4115, 14.7345, 1.4520, 5.8203, 10.3662, 13.7798, 2.4067, 2.4067, 13.7798, 10.3662, 5.8203, 1.4520, 14.7345, 9.4115, 6.7750)
arm.diff <- arm.trt - arm.unt
#arm.diff <- 9.4115 (31%), 14.7345 (48%), 1.4520 (4%), 5.8203 (19%), 10.3662 (34%), 13.7798 (45%), 2.4067 (7%), 2.4067 (7%), 13.7798 (45%), 10.3662 (34%), 5.8203 (19%), 1.4520 (4%), 14.7345 (48%), 9.4115 (31%), 6.7750 (22%))
arm.F <- c(0.46, 1.035, 5.079, 0.018, 0.326, 1.355, 3.664, 0.051, 0.051, 3.664, 1.355, 0.326, 0.018, 5.079, 1.035, 0.46)
arm.pF <- c(0.5463, 0.3839, 0.1096, 0.9006, 0.6078, 0.3285, 0.1515, 0.8356, 0.8356, 0.1515, 0.3285, 0.6078, 0.9006, 0.1096, 0.3839, 0.5463)
@

<<>>=
hist(arm.diff)
hist(arm.F)
@


<<>>=
arm.diff
diff.ranks <- length(arm.diff) - rank(arm.diff)+1
diff.ranks
(diff.ranks[1]-1)/length(diff.ranks)
abs.diff.ranks <- length(arm.diff) - rank(abs(arm.diff))+1
1-abs.diff.ranks[1]/length(abs.diff.ranks)
rank(arm.F)
rank(arm.F)[1]/length(arm.F)

t.value <- abs(arm.diff)/(arm.sd*sqrt(2/4))
t.value
p.t <- 2*(1-pt(t.value,df=3))
p.t
arm.pF
@

<<6ProbVsLikNaive>>=
s2 <- sqrt(sum(meansNaive.lm$residuals^2)/meansNaive.lm$df.residual) #arm.sd[1]
x.bar <- coef(meansNaive.lm)[5] #arm.diff[1]
quantiles <- seq(x.bar-4*s2,x.bar+4*s2,length=100)
t.dat <- data.frame(Quantile = quantiles, PDF = dt(quantiles,3))
normNaive.dat <- data.frame(Quantile = quantiles, PDF = dnorm(quantiles,mean=x.bar,sd=s2))
normNaive.dat$CDF <- normNaive.dat$PDF
sum = normNaive.dat$PDF[1]

quantiles <- seq(0-4*s2,0+4*s2,length=100)
nullNaive.dat <- data.frame(Quantile = quantiles, PDF = dnorm(quantiles,mean=0,sd=s2))
nullNaive.dat$CDF <- nullNaive.dat$PDF
for(i in 2:length(quantiles)) {
  normNaive.dat$CDF <- normNaive.dat$CDF[i-1] +  normNaive.dat$PDF[i]
  nullNaive.dat$CDF <- nullNaive.dat$CDF[i-1] +  nullNaive.dat$PDF[i]
}

s2.red <- sqrt(sum(redNaive.lm$residuals^2)/redNaive.lm$df.residual) #arm.sd[1]
x.bar.red <- 0
quantiles.red <- seq(x.bar.red-4*s2.red,x.bar.red+4*s2.red,length=100)
redNaive.dat <- data.frame(Quantile = quantiles.red, PDF = dnorm(quantiles.red,mean=x.bar.red,sd=s2.red))

print(q.points <- c(0,x.bar))
print(l.points <- dnorm(q.points,mean=x.bar,sd=s2))
shadeNaive.dat <- nullNaive.dat[abs(nullNaive.dat$Quantile) > x.bar,]
shade2.dat <- nullNaive.dat[nullNaive.dat$Quantile > x.bar,]
@

<<7ProbVsLikNaive1,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normNaive.dat, aes(Quantile,PDF)) + 
  geom_line(aes(color='Null Hypothesis'),data=nullNaive.dat) + 
 labs(colour = "Model") +
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeNaive.dat) + scale_colour_manual(values=cbPalette[3])
@

<<8ProbVsLikNaive2,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normNaive.dat, aes(Quantile,PDF)) + 
  geom_line(aes(color='Maximum Likelihood')) + 
  geom_line(aes(color='Null Hypothesis'),data=nullNaive.dat) + 
 labs(colour = "Model") +
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeNaive.dat) +   geom_point(aes(x=x.bar, y = l.points[2]),color=cbPalette[2]) +
scale_colour_manual(values=cbPalette[c(2,3)])
@

<<9ProbVsLikNaive3,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normNaive.dat, aes(Quantile,PDF)) + 
geom_line(aes(color='Maximum Likelihood')) + 
  geom_line(aes(color='Null Hypothesis'),data=nullNaive.dat) + 
  geom_line(aes(color='Nested Model'),data=redNaive.dat) + 
   labs(colour = "Model") +
#labs(colour = "Variety", x="Longitude (m)", y="Latitude (m)", title = "East Quarter")
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeNaive.dat) +
  geom_point(aes(x=x.bar, y = l.points[2]),color=cbPalette[2]) +
   geom_point(aes(x=0, y = dnorm(0,mean=0,sd=s2.red)), color=cbPalette[4]) +
scale_colour_manual(values=cbPalette[c(2,4,3)])
@
\section{Equal Sizes}

<<>>=
EqualSizes.dat <- Andersons.dat[Andersons.dat$Pass>0,]
EqualSizes.dat <- EqualSizes.dat[EqualSizes.dat$Balanced==1,]
EqualSizesB.dat <- EqualSizes.dat[EqualSizes.dat$Pass %in% 2:9,]
EqualSizes.dat <- EqualSizes.dat[EqualSizes.dat$Pass %in% 1:8,]
@


<<4AndersonsEqualSizes,fig=TRUE,echo=false,width=8,height=5>>=
AndersonsTemp.dat <- Andersons.dat
AndersonsTemp.dat$Pass[Andersons.dat$Pass==9] <- 0
AndersonsTemp.dat$Pass[Andersons.dat$Balanced==0] <- 0
AndersonsTemp.dat$Pass <- as.factor(AndersonsTemp.dat$Pass)
ggplot(AndersonsTemp.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Pass),size=map.point) + 
scale_colour_manual(values=cbPalette) +
labs(colour = "Equal Size Plots", x="Easting", y="Northing", title = "Select Data (Equal Size)")
@


<<EqualSizes,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(EqualSizes.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Sprayed),size=map.point) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
labs(colour = "Sprayed", x="Easting", y="Northing", title = "East Quarter")
@

<<AndersonsBalancedB,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(EqualSizesB.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Sprayed),size=map.point) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
labs(colour = "Sprayed", x="Easting", y="Northing", title = "East Quarter")
@


Repeated analysis from above


<<>>=
meansEqual.dat <- data.frame(
  Pass = aggregate(Yield ~ Pass,EqualSizes.dat,mean,na.rm=TRUE)[,1],
  Yield = aggregate(Yield ~ Pass,EqualSizes.dat,mean,na.rm=TRUE)[,2]
)
meansEqual.dat$Product <- ifelse(meansEqual.dat$Pass %in% c(2,4,6,8),'Sprayed','Control')
meansEqual.dat$Product <- as.factor(meansEqual.dat$Product)
meansEqual.dat$Block <- as.factor(ceiling(meansEqual.dat$Pass/2))
meansEqual.dat
t.test(Yield ~ Product, data = meansEqual.dat)
t.test(Yield ~ Product, data = meansEqual.dat,paired=TRUE)
t.test(Yield ~ Product, data = meansEqual.dat,paired=TRUE,alternative = "less")
@


<<>>=
wilcox.test(Yield ~ Product, paired=TRUE,meansEqual.dat)
kruskal.test(Yield ~  Product, meansEqual.dat)
friedman.test(Yield ~  Block | Product,meansEqual.dat)
quade.test(Yield ~  Block | Product,meansEqual.dat)
@

<<5EqualMeans,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(meansEqual.dat, aes(x=Pass, y=Yield, color=Product,fill=Product)) +
  geom_bar(stat="identity") + scale_colour_manual(values=cbPalette[pair.colors]) + scale_fill_manual(values=cbPalette[pair.colors]) +
  labs(x="Plot", y="Yield", title = "'Plot' Mean Yield")
@


<<>>=
meansEqual.lm <- lm(Yield ~ Block + Product,data=meansEqual.dat)
anova(meansEqual.lm)

redEqual.lm <- lm(Yield ~ Block,data=meansEqual.dat)
anova(redEqual.lm)

H1.lm <- lm(Yield ~ Block,data=meansEqual.dat)
H2.lm <- lm(Yield ~ Block + Product,data=meansEqual.dat)

anova(H1.lm)
anova(H1.lm,H2.lm)
logLik(H1.lm)
logLik(H2.lm)
logLik(H1.lm)-logLik(H2.lm)
library(lmtest)
lrtest(H1.lm,H2.lm)

AIC(H1.lm)
AIC(H2.lm)

BIC(H1.lm)
BIC(H2.lm)
@

<<EqualMeansDiagnostics,fig=TRUE,echo=false,width=8,height=8>>=
par(mfrow=c(2,2))
plot(meansEqual.lm)
@


<<10ProbVsLikEqual>>=
s2 <- sqrt(sum(meansEqual.lm$residuals^2)/meansEqual.lm$df.residual) #arm.sd[1]
x.bar <- coef(meansEqual.lm)[5] #arm.diff[1]
quantiles <- seq(x.bar-4*s2,x.bar+4*s2,length=100)
t.dat <- data.frame(Quantile = quantiles, PDF = dt(quantiles,3))
normEqual.dat <- data.frame(Quantile = quantiles, PDF = dnorm(quantiles,mean=x.bar,sd=s2))
normEqual.dat$CDF <- normEqual.dat$PDF
sum = normEqual.dat$PDF[1]

quantiles <- seq(0-4*s2,0+4*s2,length=100)
nullEqual.dat <- data.frame(Quantile = quantiles, PDF = dnorm(quantiles,mean=0,sd=s2))
nullEqual.dat$CDF <- nullEqual.dat$PDF
for(i in 2:length(quantiles)) {
  normEqual.dat$CDF <- normEqual.dat$CDF[i-1] +  normEqual.dat$PDF[i]
  nullEqual.dat$CDF <- nullEqual.dat$CDF[i-1] +  nullEqual.dat$PDF[i]
}
print(q.points <- c(0,x.bar))
print(l.points <- dnorm(q.points,mean=x.bar,sd=s2))
shadeEqual.dat <- nullEqual.dat[abs(nullEqual.dat$Quantile) > x.bar,]
shade2.dat <- nullEqual.dat[nullEqual.dat$Quantile > x.bar,]
s2.red <- sqrt(sum(redEqual.lm$residuals^2)/redEqual.lm$df.residual) #arm.sd[1]
x.bar.red <- 0
quantiles.red <- seq(x.bar.red-4*s2.red,x.bar.red+4*s2.red,length=100)
redEqual.dat <- data.frame(Quantile = quantiles.red, PDF = dnorm(quantiles.red,mean=x.bar.red,sd=s2.red))
@

<<11ProbVsLikEqual1,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normEqual.dat, aes(Quantile,PDF)) + 
  geom_line(aes(color='Null Hypothesis'),data=nullEqual.dat) + 
 labs(colour = "Model") +
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeEqual.dat) + scale_colour_manual(values=cbPalette[3])
@

<<12ProbVsLikEqual2,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normEqual.dat, aes(Quantile,PDF)) + 
  geom_line(aes(color='Maximum Likelihood')) + 
  geom_line(aes(color='Null Hypothesis'),data=nullEqual.dat) + 
 labs(colour = "Model") +
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeEqual.dat) +   geom_point(aes(x=x.bar, y = l.points[2]),color=cbPalette[2]) +
scale_colour_manual(values=cbPalette[c(2,3)])
@

<<13ProbVsLikEqual3,fig=TRUE,echo=false,width=8,height=4>>=
ggplot(normEqual.dat, aes(Quantile,PDF)) + 
geom_line(aes(color='Maximum Likelihood')) + 
  geom_line(aes(color='Null Hypothesis'),data=nullEqual.dat) + 
  geom_line(aes(color='Nested Model'),data=redEqual.dat) + 
   labs(colour = "Model") +
#labs(colour = "Variety", x="Longitude (m)", y="Latitude (m)", title = "East Quarter")
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF),color=cbPalette[5], data = shadeEqual.dat) +
  geom_point(aes(x=x.bar, y = l.points[2]),color=cbPalette[2]) +
   geom_point(aes(x=0, y = dnorm(0,mean=0,sd=s2.red)), color=cbPalette[4]) +
scale_colour_manual(values=cbPalette[c(2,4,3)])
@


<<14ProbVsLikFacet,fig=TRUE,echo=false,width=6,height=6>>=

normNaive.dat$Source <- 'Naive'
nullNaive.dat$Source <- 'Naive'
redNaive.dat$Source <- 'Naive'

normEqual.dat$Source <- 'Equal'
nullEqual.dat$Source <- 'Equal'
redEqual.dat$Source <- 'Equal'

shadeEqual.dat$Source <- 'Equal'
shadeNaive.dat$Source <- 'Naive'

norm.dat <- rbind(normNaive.dat,normEqual.dat)
null.dat <- rbind(nullNaive.dat,nullEqual.dat)
red.dat <- rbind(redNaive.dat,redEqual.dat)
shade.dat <- rbind(shadeNaive.dat,shadeEqual.dat)

ggplot(norm.dat, aes(Quantile,PDF)) + 
geom_line(aes(color='Maximum Likelihood')) + 
  geom_line(aes(color='Null Hypothesis'),data=null.dat) + 
  geom_line(aes(color='Reduced Model'),data=red.dat) + 
#labs(colour = "Variety", x="Longitude (m)", y="Latitude (m)", title = "East Quarter")
  geom_segment(aes(x = Quantile, y = 0, xend = Quantile, yend = PDF, colour = "P(>y)"), data = shade.dat) +
scale_colour_manual(values=cbPalette) + facet_wrap(~ Source,nrow=2)
@

<<>>=
TeaTasting <-
matrix(c(3, 1, 1, 3),
       nrow = 2,
       dimnames = list(Guess = c("Greater", "Lesser"),
                       Truth = c("Sprayed", "Unsprayed")))
TeaTasting
fisher.test(TeaTasting, alternative = "greater")
@

=
<<>>=
library(coin)
wilcox_test(Yield ~ Product, data = meansEqual.dat,
                      distribution = "exact", alternative = "less",
                      conf.int = TRUE)
independence_test(Yield ~ Product, data = meansEqual.dat)
independence_test(Yield ~ Product+Block, data = meansEqual.dat)
@


For anova, we might use

<<>>=
block.lm <- lm(Yield ~ Block,data=meansEqual.dat)
rcb.lm <- lm(Yield ~ Block + Product,data=meansEqual.dat)
trt.lm <- lm(Yield ~ Block,data=meansEqual.dat)
mean.lm <- lm(Yield ~ 1,data=meansEqual.dat)
anova(block.lm,rcb.lm)
anova(rcb.lm)
anova(trt.lm)
anova(mean.lm,trt.lm)
@

<<>>=
ggplot(EqualSizes.dat, aes(X,Y)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Balanced")
@

<<>>=
BalancedANonZero.dat <- EqualSizes.dat[EqualSizes.dat$Yield > 0,]
hist(BalancedANonZero.dat$Yield)

meansNonZero.dat <- with(BalancedANonZero.dat, data.frame(
  Pass = aggregate(Yield ~ Pass,BalancedANonZero.dat,mean,na.rm=TRUE)[,1],
  Yield = aggregate(Yield ~ Pass,BalancedANonZero.dat,mean,na.rm=TRUE)[,2],
  Product = aggregate(as.numeric(Sprayed) ~ Pass,BalancedANonZero.dat,mean,na.rm=TRUE)[,2]
))
meansNonZero.dat
meansNonZero.dat$Product <- as.logical(meansNonZero.dat$Product)
meansNonZero.dat$Block <- as.factor(ceiling(meansNonZero.dat$Pass/2))
@

<<AverageYieldsATrimmed,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(meansNonZero.dat, aes(x=Block, y=Yield, color=Product,fill=Product)) +
  geom_bar(stat="identity") + scale_colour_manual(values=cbPalette[pair.colors]) + scale_fill_manual(values=cbPalette[pair.colors])
@


<<>>=
anova(mean.lm,trt.lm,test='Chisq')
anova(mean.lm,trt.lm,test='Cp')
@

This gives us an F-test, but we can also perform a likelihood ratio test.
<<>>=
library(lmtest)
lrtest(mean.lm,trt.lm)
@




$$
L (x ; \mu, \sigma^2) = \frac{1}{\sigma \sqrt{2 \pi}} e^{- \frac{1}{2 \sigma^2} (y - \mu)^2}
$$

<<>>=
norm.pdf <- function(x,mu=0,sigma=1) {
  (1/sqrt(2*pi*sigma^2))*exp(-(x-mu)^2/(2*sigma^2))
}
@


$$
L (x ; \mu, \sigma^2) = \frac{1}{\sigma \sqrt{2 \pi}} e^{- \frac{1}{2 \sigma^2} \sum (y - X \beta)^2}
$$


We might then proceed to a simple paired t-test, assuming independent populations, and a pooled standard deviation and a equal number of strips for each treatment. We let $\delta$ denote the difference between means $\widehat{\mu}_1 - \widehat{\mu}_2$, and we use a t-test of

\begin{equation}
t = \frac{\delta}{\sqrt{2 \sigma^2/n}}
\end{equation}

<<>>=
print(product.means <- tapply(meansNaive.dat$Yield,list(meansNaive.dat$Product),mean,na.rm=TRUE))
print(product.sd <- tapply(meansNaive.dat$Yield,list(meansNaive.dat$Product),sd,na.rm=TRUE))
print(pooled.sd <- mean(product.sd))
print(delta <- abs(product.means[1]-product.means[2]))
print(pooled.t <- delta / (sqrt((2*pooled.sd^2)/6)))
@


<<>>=
betas <- seq(-1,20,by=0.1)
plot(betas,norm.pdf(betas,pooled.sd),type='l')
@

Assuming a two-sided test, we can compute a critical $t$ and a $Pr(>t)$ by
<<>>=
qt(1-0.05/2,10)
2*(1-pt(pooled.t,10))
@

\section{Trend Analysis}

\subsection{Maive Means}
<<15NaiveTrendSelectionMeans,fig=TRUE,width=5,height=5>>=
m <- 4
models.lm <- vector(mode='list',length=m)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ poly(Pass,i)+Product,data=meansNaive.dat)
}
selection.dat <- data.frame(Degree = rep(1:m,3),
                            Criteria = factor(c(rep('l',m),
                                                   rep('AIC',m),
                                                   rep('BIC',m)),levels=c("l", "AIC", "BIC")),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))

ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@

<<>>=
H3Null.lm <- lm(Yield ~ poly(Pass,3),data=meansNaive.dat)
H3.lm <- lm(Yield ~ poly(Pass,3)+Product,data=meansNaive.dat)
summary(H3Null.lm)
summary(H3.lm)
anova(H3Null.lm)
anova(H3.lm)
anova(H3Null.lm,H3.lm)
lrtest(H3Null.lm,H3.lm)
logLik(H3Null.lm)
logLik(H3.lm)-logLik(H3Null.lm)
exp(logLik(H3.lm)-logLik(H3Null.lm))
@

<<17NaiveTrendH2vsH3,fig=TRUE,echo=false,width=8,height=5>>=
H2.lm <- lm(Yield ~ poly(Pass,2)+Product,data=meansNaive.dat)
meansNaive.dat$H2 <- predict(H2.lm)
meansNaive.dat$H3 <- predict(H3.lm)

ggplot(meansNaive.dat, aes(x=Pass, y=Yield)) +
  geom_bar(stat="identity",aes(colour = Product)) +
#ggplot(meansNaive.dat, aes(Pass,Yield)) + 
#geom_bar(aes(colour = Product),size=2) + 
  geom_line(aes(Pass,H2,colour = 'H2'),size=1,data=meansNaive.dat) + 
  geom_line(aes(Pass,H3,colour = 'H3'),size=1,data=meansNaive.dat) + 
scale_colour_manual(values=cbPalette[c(2,3,4,5)]) +
   labs(x="Easting", y="Yield", title = "Strip Mean and Models") 
@

<<>>=
lrtest(H2.lm,H3.lm)
@

<<17NaiveTrendH3vsNull,fig=TRUE,echo=false,width=8,height=5>>=
meansNaive.dat$H3Null <- predict(H3Null.lm)
ggplot(meansNaive.dat, aes(x=Pass, y=Yield)) +
  geom_bar(stat="identity",aes(colour = Product)) +
#ggplot(meansNaive.dat, aes(Pass,Yield)) + 
#geom_bar(aes(colour = Product),size=2) + 
  geom_line(aes(Pass,H3Null,colour = 'H3Null'),size=1,data=meansNaive.dat) + 
  geom_line(aes(Pass,H3,colour = 'H3'),size=1,data=meansNaive.dat) + 
scale_colour_manual(values=cbPalette[c(2,3,4,5)]) +
   labs(x="Easting", y="Yield", title = "Strip Mean and Models") 
@


\subsection{Observations}
<<15EqualTrendSelection,fig=TRUE,width=5,height=5>>=
m <- 16
models.lm <- vector(mode='list',length=m)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ poly(Easting,i)+Sprayed,data=EqualSizes.dat)
}
selection.dat <- data.frame(Degree = rep(1:m,3),
                            Criteria = factor(c(rep('l',m),
                                                   rep('AIC',m),
                                                   rep('BIC',m)),levels=c("l", "AIC", "BIC")),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))

ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@


It appears a 7th degree polynomial best descibes the data

<<>>=
summary(models.lm[[7]])
mean.lm <- lm(Yield ~ poly(Easting,7),data=EqualSizes.dat)
trt.lm <- lm(Yield ~ poly(Easting,7)+Sprayed,data=EqualSizes.dat)
summary(mean.lm)
summary(trt.lm)
anova(mean.lm)
anova(trt.lm)
anova(mean.lm,trt.lm)
lrtest(mean.lm,trt.lm)
@

<<16EqualYields,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(EqualSizes.dat, aes(Easting,Yield)) + 
geom_point(aes(colour = Sprayed),size=2) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
  labs(x="Easting", y="Yield", title = "'Observed Yield") 
@

<<EqualTrend,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(EqualSizes.dat, aes(Easting,Yield)) + 
geom_point(aes(colour = Sprayed),size=2) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
  geom_smooth(method="lm", formula= y ~ poly(x,7), se=FALSE) + labs(x="Easting", y="Yield", title = "Full Width Strip") 
@

<<17EqualTrendH6vH7,fig=TRUE,echo=false,width=8,height=5>>=

H6.lm <- lm(Yield ~ poly(Easting,6)+Sprayed,data=EqualSizes.dat)
EqualSizes.dat$H7 <- predict(trt.lm)
EqualSizes.dat$H6 <- predict(H6.lm)

ggplot(EqualSizes.dat, aes(Easting,Yield)) + 
geom_point(aes(colour = Sprayed),size=2) + 
  geom_line(aes(Easting,H7,colour = 'H6'),size=1,data=EqualSizes.dat) + 
  geom_line(aes(Easting,H6,colour = 'H7'),size=1,data=EqualSizes.dat) + 
scale_colour_manual(values=cbPalette[c(2,3,4,5)]) +
#  geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,7), se=FALSE) + 
   labs(x="Easting", y="Yield", title = "'Observed Yield") 
@

<<>>=
lrtest(H6.lm,trt.lm)
@

<<18EqualTrendPair,fig=TRUE,echo=false,width=8,height=5>>=
EqualSizes.dat$H7 <- predict(trt.lm)

EqualSizes.dat$H7Null <- predict(mean.lm)
ggplot(EqualSizes.dat, aes(Easting,Yield)) + 
geom_point(aes(colour = Sprayed),size=2) + 
  geom_line(aes(Easting,H7,colour = 'H7'),size=1,data=EqualSizes.dat) + 
  geom_line(aes(Easting,H7Null,colour = 'H7 null'),size=1,data=EqualSizes.dat) + 
scale_colour_manual(values=cbPalette[c(2,3,4,5)]) +
#  geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,7), se=FALSE) + 
  labs(x="Easting", y="Yield", title = "'Observed Yield") 
@



\section {Trend on a rectangle}

<<>>=
Rectangle.dat <- Andersons.dat[Andersons.dat$Rectangle==1,]
@


<<19AndersonsRectangle,fig=TRUE,echo=false,width=8,height=5>>=
AndersonsTemp.dat <- Andersons.dat
AndersonsTemp.dat$Pass[Andersons.dat$Pass==9] <- 0
AndersonsTemp.dat$Pass[Andersons.dat$Rectangle==0] <- 0
AndersonsTemp.dat$Pass <- as.factor(AndersonsTemp.dat$Pass)
ggplot(AndersonsTemp.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Pass),size=map.point) + 
scale_colour_manual(values=cbPalette) +
labs(colour = "Rectangle", x="Easting", y="Northing", title = "Select Data (Rectangular Area)")
@

\section {One Dimension}

<<20RectangleYield1D,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(Rectangle.dat, aes(Easting,Yield)) + 
geom_point(aes(colour = Sprayed),size=2) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
#  geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE)+
  labs(colour = "Sprayed", x="Easting", y="Yield", title = "Select Data (Rectangular Area)") 
@


<<21RectangleYield2D,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(Rectangle.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Yield Map (Rectangular Area)")
@

<<22RectangleModelSelection,fig=TRUE,width=5,height=5>>=
models.lm <- vector(mode='list',length=9)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ poly(Easting,1+2*(i-1))+Sprayed,data=Rectangle.dat)
}
selection.dat <- data.frame(Degree = rep(1+2*(1:9-1),3),
                            Criteria = as.factor(c(rep('logLik',9),
                                                   rep('AIC',9),
                                                   rep('BIC',9))),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))
ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@

<<>>=
summary(models.lm[[3]])
mean1d.lm <- lm(Yield ~ poly(Easting,5),data=Rectangle.dat)
trt1d.lm <- lm(Yield ~ poly(Easting,5)+Sprayed,data=Rectangle.dat)
summary(mean1d.lm)
summary(trt1d.lm)
anova(mean1d.lm)
anova(trt1d.lm)
anova(mean1d.lm,trt1d.lm)
lrtest(mean1d.lm,trt1d.lm)
@

\subsection{Two dimensions}

<<23RectangleSelection2D,fig=TRUE,width=5,height=5>>=
models.lm <- vector(mode='list',length=9)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ poly(Easting,1+2*(i-1))*poly(Northing,1+2*(i-1))+Sprayed,data=Rectangle.dat)
}
selection.dat <- data.frame(Degree = rep(1+2*(1:9-1),3),
                            Criteria = as.factor(c(rep('logLik',9),
                                                   rep('AIC',9),
                                                   rep('BIC',9))),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))
ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@

<<>>=
mean2d.lm <- lm(Yield ~ poly(Easting,7)*poly(Northing,7),data=Rectangle.dat)
trt2d.lm <- lm(Yield ~ poly(Easting,7)*poly(Northing,7)+Sprayed,data=Rectangle.dat)
anova(lm(Yield ~ Sprayed + poly(Easting,7)*poly(Northing,7),data=Rectangle.dat))
#summary(mean.lm)
summary(trt2d.lm)
anova(mean2d.lm)
anova(trt2d.lm)
anova(mean2d.lm,trt2d.lm)
lrtest(mean2d.lm,trt2d.lm)
lrtest(trt1d.lm,trt2d.lm)
@


<<24RectanglePredicted,fig=TRUE,echo=false,width=8,height=5>>=
New.dat <- Rectangle.dat
New.dat$Sprayed <- FALSE
New.dat$Yield <- predict(trt2d.lm,newdata=New.dat)
ggplot(New.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Predicted Yield")
@

\section {Approximately Square}
<<>>=
Square.dat <- Andersons.dat[Andersons.dat$Square==1,]
@

<<25AndersonsSquare,fig=TRUE,echo=false,width=8,height=5>>=
AndersonsTemp.dat <- Andersons.dat
AndersonsTemp.dat$Pass[Andersons.dat$Pass==9] <- 0
AndersonsTemp.dat$Pass[Andersons.dat$Square==0] <- 0
AndersonsTemp.dat$Pass <- as.factor(AndersonsTemp.dat$Pass)
ggplot(AndersonsTemp.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Pass),size=map.point) + 
scale_colour_manual(values=cbPalette) +
labs(colour = "Strip", x="Easting", y="Northing", title = "Select Data (Square Area)")
@

<<26SquareeYield2D,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(Square.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Yield Map (Square Area)")
@

<<27ModelSelectionSquare,fig=TRUE,width=5,height=5>>=
models.lm <- vector(mode='list',length=12)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ polym(Easting,degree=1+2*(i-1))*polym(Northing,degree=1+2*(i-1))+Sprayed,
                       data=Square.dat)
}
selection.dat <- data.frame(Degree = rep(1+2*(1:12-1),3),
                            Criteria = as.factor(c(rep('logLik',12),
                                                   rep('AIC',12),
                                                   rep('BIC',12))),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))
ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@

<<>>=
mean.lm <- lm(Yield ~ poly(Easting,17)*poly(Northing,17),data=Square.dat)
trt.lm <- lm(Yield ~ poly(Easting,17)*poly(Northing,17)+Sprayed,data=Square.dat)
anova(lm(Yield ~ Sprayed + poly(Easting,17)*poly(Northing,17),data=Square.dat))
#summary(mean.lm)
summary(trt.lm)
#anova(mean.lm)
anova(trt.lm)
anova(mean.lm,trt.lm)
lrtest(mean.lm,trt.lm)
@


<<28SquarePredicted,fig=TRUE,echo=false,width=8,height=5>>=
New.dat <- Square.dat
New.dat$Sprayed <- levels(Square.dat$Sprayed)[1]
New.dat$Yield <- predict(trt.lm,data=New.dat)
ggplot(New.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Estimates")
@

<<29SquareFertilityMissing,fig=TRUE,echo=false,width=8,height=5>>=
data.rows <- dim(Square.dat)[1]
Northing <- seq(min(Square.dat$Northing),max(Square.dat$Northing),length=ceiling(sqrt(data.rows)))
Easting <- seq(min(Square.dat$Easting),max(Square.dat$Easting),length=ceiling(sqrt(data.rows)))
New.dat <- expand.grid(Northing, Easting)
names(New.dat) <- c('Northing','Easting')
New.dat$Sprayed <- FALSE
New.dat$Yield <- NA
New.dat$Yield[1:data.rows] <- predict(trt.lm,newdata=New.dat[1:data.rows,])
New.dat$Yield <- predict(trt.lm,newdata=New.dat)
ggplot(New.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Estimates")
@

\section {All Strips}


<<StripsSprayed,fig=TRUE,echo=false,width=8,height=5>>=
ggplot(Strips.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Sprayed),size=2) + 
scale_colour_manual(values=cbPalette[pair.colors]) +
labs(colour = "Sprayed", x="Easting", y="Northing", title = "East Quarter")
@


<<30ModelSelectionStrips,fig=TRUE,width=5,height=5>>=
models.lm <- vector(mode='list',length=12)
for(i in 1:length(models.lm)) {
  models.lm[[i]] <- lm(Yield ~ polym(Easting,degree=1+2*(i-1))*polym(Northing,degree=1+2*(i-1))+Sprayed,
                       data=Strips.dat)
}
selection.dat <- data.frame(Degree = rep(1+2*(1:12-1),3),
                            Criteria = as.factor(c(rep('logLik',12),
                                                   rep('AIC',12),
                                                   rep('BIC',12))),
                            Score = c(unlist(lapply(models.lm,logLik)),
                                      unlist(lapply(models.lm,AIC)),
                                      unlist(lapply(models.lm,BIC))))
ggplot(selection.dat, aes(Degree,Score)) + 
geom_point(aes(colour = Criteria),size=2) + 
  geom_line(aes(colour = Criteria),size=1) + 
 scale_colour_manual(values=cbPalette) + facet_wrap(~Criteria,nrow=3,scales="free_y")
 # geom_smooth(aes(group= Sprayed,linetype=Sprayed,col=Sprayed), method="lm", formula= y ~ poly(x,5), se=FALSE) + labs(colour = "Sprayed", x="Easting", y="Yield", title = "East Quarter") 
@

<<>>=
mean17.lm <- lm(Yield ~ poly(Easting,17)*poly(Northing,17),data=Strips.dat)
trt17.lm <- lm(Yield ~ poly(Easting,17)*poly(Northing,17)+Sprayed,data=Strips.dat)

mean21.lm <- lm(Yield ~ poly(Easting,21)*poly(Northing,21),data=Strips.dat)
trt21.lm <- lm(Yield ~ poly(Easting,21)*poly(Northing,21)+Sprayed,data=Strips.dat)

#summary(mean.lm)
summary(trt17.lm)
summary(trt21.lm)
#anova(mean.lm)
anova(trt17.lm)
anova(trt21.lm)

anova(mean17.lm,trt17.lm)
lrtest(mean17.lm,trt17.lm)

anova(mean21.lm,trt21.lm)
lrtest(mean21.lm,trt21.lm)

lrtest(trt17.lm,trt21.lm)

trt.lm <- trt21.lm
@


<<31StripsFertility,fig=TRUE,echo=false,width=8,height=5>>=
New.dat <- Strips.dat
New.dat$Sprayed <- levels(Strips.dat$Sprayed)[1]
New.dat$Yield <- predict(trt.lm,data=Strips.dat)
ggplot(New.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Estimates")
@

<<32StripsFertilityMissing,fig=TRUE,echo=false,width=8,height=5>>=
data.rows <- dim(Strips.dat)[1]
Northing <- seq(min(Strips.dat$Northing),max(Strips.dat$Northing),length=ceiling(sqrt(data.rows)))
Easting <- seq(min(Strips.dat$Easting),max(Strips.dat$Easting),length=ceiling(sqrt(data.rows)))
New.dat <- expand.grid(Northing, Easting)
names(New.dat) <- c('Northing','Easting')
New.dat$Sprayed <- FALSE
New.dat$Yield <- NA
New.dat$Yield[1:data.rows] <- predict(trt.lm,newdata=New.dat[1:data.rows,])
New.dat$Yield <- predict(trt.lm,newdata=New.dat)
ggplot(New.dat, aes(Easting,Northing)) + 
geom_point(aes(colour = Yield),size=2) + 
scale_colour_gradient(low=cbPalette[7], high=cbPalette[4]) +
labs(colour = "Yield", x="Easting", y="Northing", title = "Estimates")
@

\clearpage
\section{Appendix}

\subsection{Yield Trial Data}


\subsection{Permutations}


Processing QGIS shape file for analysis
1. Merge channels
  Vector -> Analysis Tools -> Mean Coordinates 
  This creates a shape file with the midpoint for each swath sample
2. Average channel samples
  Processing Toolbox : Vector Analysis -> Statistics by Categories
  This creates an attribute table.
3. Join the two preceding steps
  Processing Toolbox : Vector General -> Join attributes by field value
  

\end{document}